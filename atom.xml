<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>左之右</title>
  
  <subtitle>SamLai&#39;Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zuoyoulai.github.io/"/>
  <updated>2020-07-16T09:36:56.971Z</updated>
  <id>https://zuoyoulai.github.io/</id>
  
  <author>
    <name>[object Object]</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>docker安装ELK与Filebeat配置说明</title>
    <link href="https://zuoyoulai.github.io/2020/07/15/docker%E5%AE%89%E8%A3%85ELK%E4%B8%8EFilebeat%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/"/>
    <id>https://zuoyoulai.github.io/2020/07/15/docker%E5%AE%89%E8%A3%85ELK%E4%B8%8EFilebeat%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/</id>
    <published>2020-07-15T06:01:32.000Z</published>
    <updated>2020-07-16T09:36:56.971Z</updated>
    
    <content type="html"><![CDATA[<p>参考链接: <a href="https://blog.csdn.net/u010979642/article/details/89947674" target="_blank" rel="noopener">https://blog.csdn.net/u010979642/article/details/89947674</a></p><p>1.下载镜像:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># ELK_VERSION&#x3D;7.0.1 &amp; ES_VERSION&#x3D;7.0.1 &amp; LOGSTASH_VERSION&#x3D;7.0.1 &amp; KIBANA_VERSION&#x3D;7.0.1</span><br><span class="line"># ES_PACKAGE&#x3D;elasticsearch-7.0.1-linux-x86_64.tar.gz</span><br><span class="line"># LOGSTASH_PACKAGE&#x3D;logstash-7.0.1.tar.gz</span><br><span class="line"># KIBANA_PACKAGE&#x3D;kibana-7.0.1-linux-x86_64.tar.gz</span><br><span class="line"># 拉取 sebp&#x2F;elk 镜像， 此次部署版本号为: 7.0.1</span><br><span class="line"></span><br><span class="line">docker pull sebp&#x2F;elk</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># docker 中 filebeat 版本: FILEBEAT_VERSION&#x3D;6.2.3</span><br><span class="line"> docker pull prima&#x2F;filebeat</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 查看 镜像对应的 filebeat 版本</span><br><span class="line">docker image inspect prima&#x2F;filebeat:latest | grep FILEBEAT_VERSION</span><br></pre></td></tr></table></figure><p>2.logstash文件beats-input.conf配置文件内容:[去掉 SSL 配置内容 否则 filebeat因为 ssl 的配置无法连接logstash 注意点]</p><p>注意： 此处关闭 ssl， filebeat.yml 中也必须关掉 ssl, 这个文件在 elk 容器内部， 路径为： /etc/logstash/conf.d/</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">beats-input.conf 内容</span><br><span class="line"></span><br><span class="line">input &#123;</span><br><span class="line">  beats &#123;</span><br><span class="line">    host &#x3D;&gt; &quot;0.0.0.0&quot;</span><br><span class="line">    port &#x3D;&gt; 5044</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.elk docker 指令:  注意02-beats-input.conf文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 9200:9200 -p 5044:5044 -p 5601:5601 \</span><br><span class="line"> -v &#x2F;Users&#x2F;haodalai&#x2F;docker&#x2F;all-elk&#x2F;logstash&#x2F;02-beats-input.conf:&#x2F;etc&#x2F;logstash&#x2F;conf.d&#x2F;02-beats-input.conf \</span><br><span class="line"> -v &#x2F;Users&#x2F;haodalai&#x2F;docker&#x2F;all-elk&#x2F;data:&#x2F;data \</span><br><span class="line"> -it -d --name elk sebp&#x2F;elk</span><br></pre></td></tr></table></figure><p>4.查看镜像服务的内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> # 查看 elk 容器日志</span><br><span class="line">docker logs -f elk --tail&#x3D;100</span><br><span class="line">  </span><br><span class="line"># 验证</span><br><span class="line"># 访问 es</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1:9200</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1:9200&#x2F;_search?pretty</span><br><span class="line"></span><br><span class="line"># 访问 kibana</span><br><span class="line">http:&#x2F;&#x2F;127.0.0.1:5601</span><br></pre></td></tr></table></figure><p>5.filebeat 文件配置内容: 文件名称  filebeat.yml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">filebeat.yml 内容:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">filebeat:</span><br><span class="line">  prospectors:</span><br><span class="line">    -</span><br><span class="line">      # 指定要监控的日志，可以指定具体得文件或者目录</span><br><span class="line">      paths:</span><br><span class="line">        - &#x2F;slogs&#x2F;*.log</span><br><span class="line">      # 指定文件的输入类型log(默认)或者stdin</span><br><span class="line">      input_type: log</span><br><span class="line">      enabled: true</span><br><span class="line">      # 设定Elasticsearch输出时的document的type字段 可以用来给日志进行分类。Default: log</span><br><span class="line">#      document_type: nginx-access</span><br><span class="line">      # 如果设置为0s，则Filebeat会尽可能快地感知更新（占用的CPU会变高）。默认是10s</span><br><span class="line">      scan_frequency: 10s</span><br><span class="line">  # 记录filebeat处理日志文件的位置的文件，默认是在启动的根目录下</span><br><span class="line">  registry_file: &#x2F;var&#x2F;lib&#x2F;filebeat&#x2F;registry</span><br><span class="line">output:</span><br><span class="line">  logstash:</span><br><span class="line">    # filebeat收集后放到 logstash 里  10.0.1.133 是本机 ip 地址</span><br><span class="line">    hosts: [&quot;10.0.1.133:5044&quot;]</span><br><span class="line">    enabled: true</span><br><span class="line">    index: filebeat</span><br></pre></td></tr></table></figure><p>6.filebeat 指令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker run -d --name filebeat  \</span><br><span class="line">   -v &#x2F;Users&#x2F;haodalai&#x2F;docker&#x2F;filebeat&#x2F;filebeat.yml:&#x2F;filebeat.yml \</span><br><span class="line">   -v &#x2F;Users&#x2F;haodalai&#x2F;logs:&#x2F;slogs \</span><br><span class="line">   prima&#x2F;filebeat:latest</span><br></pre></td></tr></table></figure><p>7.访问地址即可查看日志: <a href="http://127.0.0.1:5601" target="_blank" rel="noopener">http://127.0.0.1:5601</a></p><p>PS: 查看日志过滤列效果</p><p><img src="https://i.loli.net/2020/07/16/riB6lv5Esx4aS3g.png" alt="kbn.png"></p>]]></content>
    
    <summary type="html">
    
      docker 安装 ELK 与 Filebeat配置说明
    
    </summary>
    
    
      <category term="docker" scheme="https://zuoyoulai.github.io/categories/docker/"/>
    
    
      <category term="elk" scheme="https://zuoyoulai.github.io/tags/elk/"/>
    
      <category term="filebeat" scheme="https://zuoyoulai.github.io/tags/filebeat/"/>
    
  </entry>
  
  <entry>
    <title>docker安装软件</title>
    <link href="https://zuoyoulai.github.io/2020/07/14/docker%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/"/>
    <id>https://zuoyoulai.github.io/2020/07/14/docker%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6/</id>
    <published>2020-07-14T07:06:12.000Z</published>
    <updated>2020-07-15T06:07:44.310Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="redis">Redis</span><a href="#redis" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker run --name docker-redis -d -p 6379:6379 \</span><br><span class="line">                   -v &#x2F;Users&#x2F;haodalai&#x2F;docker&#x2F;redis&#x2F;data:&#x2F;data \</span><br><span class="line">                   -d redis redis-server --appendonly yes \</span><br><span class="line">                   --requirepass &quot;xxxxx&quot;</span><br></pre></td></tr></table></figure><h3><span id="mysql">MySql:</span><a href="#mysql" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker run --name docker-mysql -d -p 3306:3306 --restart always -e TZ&#x3D;Asia&#x2F;Shanghai \</span><br><span class="line">                   -v &#x2F;Users&#x2F;haodalai&#x2F;docker&#x2F;mysql5.6&#x2F;logs:&#x2F;logs \</span><br><span class="line">                   -v &#x2F;Users&#x2F;haodalai&#x2F;docker&#x2F;mysql5.6&#x2F;data:&#x2F;var&#x2F;lib&#x2F;mysql \</span><br><span class="line">                   -e MYSQL_ROOT_PASSWORD&#x3D;xxxxx  mysql:5.7.29</span><br></pre></td></tr></table></figure><h3><span id="rocketmq">RocketMq</span><a href="#rocketmq" class="header-anchor"></a></h3><ul><li><p>server:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 9876:9876 --name rmqserver  foxiswho&#x2F;rocketmq:server</span><br></pre></td></tr></table></figure></li><li><p>broker: [一定需要带上 broker.conf 文件 不然执行报错]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 10911:10911 -p 10909:10909 --name rmqbroker --link rmqserver:namesrv \</span><br><span class="line">-e &quot;NAMESRV_ADDR&#x3D;namesrv:9876&quot; \</span><br><span class="line">-e &quot;JAVA_OPTS&#x3D;-Duser.home&#x3D;&#x2F;opt&quot;  \</span><br><span class="line">-e &quot;JAVA_OPT_EXT&#x3D;-server -Xms128m -Xmx128m -Xmn128m&quot; \</span><br><span class="line">-v &#x2F;Users&#x2F;haodalai&#x2F;docker&#x2F;rocketmq&#x2F;broker.conf:&#x2F;etc&#x2F;rocketmq&#x2F;broker.conf \</span><br><span class="line">foxiswho&#x2F;rocketmq:broker</span><br></pre></td></tr></table></figure></li><li><p>console: [控制台服务]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name rmqconsole --link rmqserver:namesrv -e &quot;JAVA_OPTS&#x3D;-Drocketmq.namesrv.addr&#x3D;namesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel&#x3D;false&quot; -p 8180:8080 -t styletang&#x2F;rocketmq-console-ng</span><br></pre></td></tr></table></figure></li></ul><p>参考文章 : <a href="https://github.com/ZuoYouLai/docker-rocketmq" target="_blank" rel="noopener">https://github.com/ZuoYouLai/docker-rocketmq</a></p><h3><span id="yapi">Yapi</span><a href="#yapi" class="header-anchor"></a></h3><p>获取本镜像：docker pull mrjin/yapi:latest</p><p>新建目录: cd ~/docker </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">目录内容</span><br><span class="line"></span><br><span class="line">    ├── data</span><br><span class="line">    ├── docker-compose.yml</span><br><span class="line">    ├── log</span><br><span class="line">    │       yapi.log</span><br><span class="line">    │       2020-7.log</span><br><span class="line">    └── mongo-data</span><br></pre></td></tr></table></figure><p>文件内容 docker-compose.yml:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MAC 版:</span><br><span class="line"></span><br><span class="line">version: &#39;2.1&#39;</span><br><span class="line">services:</span><br><span class="line">  yapi:</span><br><span class="line">    image: mrjin&#x2F;yapi:latest</span><br><span class="line">    # build: .&#x2F;</span><br><span class="line">    container_name: yapi</span><br><span class="line">    environment:</span><br><span class="line">      - VERSION&#x3D;1.5.6</span><br><span class="line">      - LOG_PATH&#x3D;&#x2F;tmp&#x2F;yapi.log</span><br><span class="line">      - HOME&#x3D;&#x2F;home</span><br><span class="line">      - PORT&#x3D;3000</span><br><span class="line">      - ADMIN_EMAIL&#x3D;me@jinfeijie.cn</span><br><span class="line">      - DB_SERVER&#x3D;mongo</span><br><span class="line">      - DB_NAME&#x3D;yapi</span><br><span class="line">      - DB_PORT&#x3D;27017</span><br><span class="line">    # restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 127.0.0.1:3000:3000</span><br><span class="line">    volumes:</span><br><span class="line">      - ~&#x2F;docker&#x2F;yapi&#x2F;log&#x2F;yapi.log:&#x2F;home&#x2F;vendors&#x2F;log # log dir</span><br><span class="line">    depends_on:</span><br><span class="line">      - mongo</span><br><span class="line">    entrypoint: &quot;bash &#x2F;wait-for-it.sh mongo:27017 -- entrypoint.sh&quot;</span><br><span class="line">    networks:</span><br><span class="line">      - back-net</span><br><span class="line">  mongo:</span><br><span class="line">    image: mongo</span><br><span class="line">    container_name: mongo</span><br><span class="line">    # restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 127.0.0.1:27017:27017</span><br><span class="line">    volumes:</span><br><span class="line">      - ~&#x2F;docker&#x2F;yapi&#x2F;mongo-data:&#x2F;data&#x2F;db #db dir</span><br><span class="line">    networks:</span><br><span class="line">      - back-net</span><br><span class="line">networks:</span><br><span class="line">  back-net:</span><br><span class="line">    external: true</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Linux 版:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">version: &#39;2.1&#39;</span><br><span class="line">services:</span><br><span class="line">  yapi:</span><br><span class="line">    image: mrjin&#x2F;yapi:latest</span><br><span class="line">    # build: .&#x2F;</span><br><span class="line">    container_name: yapi</span><br><span class="line">    environment:</span><br><span class="line">      - VERSION&#x3D;1.5.6</span><br><span class="line">      - LOG_PATH&#x3D;&#x2F;tmp&#x2F;yapi.log</span><br><span class="line">      - HOME&#x3D;&#x2F;home</span><br><span class="line">      - PORT&#x3D;3000</span><br><span class="line">      - ADMIN_EMAIL&#x3D;samlai@qq.com</span><br><span class="line">      - DB_SERVER&#x3D;mongo</span><br><span class="line">      - DB_NAME&#x3D;yapi</span><br><span class="line">      - DB_PORT&#x3D;27017</span><br><span class="line">    # restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 3000:3000</span><br><span class="line">    volumes:</span><br><span class="line">      - &#x2F;project&#x2F;yapi&#x2F;log&#x2F;yapi.log:&#x2F;home&#x2F;vendors&#x2F;log # log dir</span><br><span class="line">    depends_on:</span><br><span class="line">      - mongo</span><br><span class="line">    entrypoint: &quot;bash &#x2F;wait-for-it.sh mongo:27017 -- entrypoint.sh&quot;</span><br><span class="line">    networks:</span><br><span class="line">      - back-net</span><br><span class="line">  mongo:</span><br><span class="line">    image: mongo</span><br><span class="line">    container_name: mongo</span><br><span class="line">    # restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 127.0.0.1:27017:27017</span><br><span class="line">    volumes:</span><br><span class="line">      - &#x2F;project&#x2F;yapi&#x2F;mongo-data:&#x2F;data&#x2F;db #db dir</span><br><span class="line">    networks:</span><br><span class="line">      - back-net</span><br><span class="line">networks:</span><br><span class="line">  back-net:</span><br><span class="line">    external: true</span><br></pre></td></tr></table></figure><p>步骤 :</p><p>修改docker-compose.yml文件里面相关参数</p><p>创建network：docker network create back-net</p><p>启动服务：docker-compose up -d</p><p>访问 <a href="http://localhost:3000" target="_blank" rel="noopener">http://localhost:3000</a> 登录账号 <a href="mailto:admin@admin.com">admin@admin.com</a>，密码 ymfe.org</p><p>需要个人注册一个账号</p>]]></content>
    
    <summary type="html">
    
      开发简约化docker安装软件
    
    </summary>
    
    
      <category term="docker" scheme="https://zuoyoulai.github.io/categories/docker/"/>
    
    
      <category term="rocketmq" scheme="https://zuoyoulai.github.io/tags/rocketmq/"/>
    
      <category term="docker" scheme="https://zuoyoulai.github.io/tags/docker/"/>
    
      <category term="redis" scheme="https://zuoyoulai.github.io/tags/redis/"/>
    
      <category term="mysql" scheme="https://zuoyoulai.github.io/tags/mysql/"/>
    
      <category term="kafka" scheme="https://zuoyoulai.github.io/tags/kafka/"/>
    
  </entry>
  
  <entry>
    <title>docker-rocketmq</title>
    <link href="https://zuoyoulai.github.io/2020/03/23/docker-rocketmq/"/>
    <id>https://zuoyoulai.github.io/2020/03/23/docker-rocketmq/</id>
    <published>2020-03-23T09:12:05.000Z</published>
    <updated>2020-03-23T15:43:11.678Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="dan-ji-ban-docker-rocketmq">单机版 : Docker rocketMq</span><a href="#dan-ji-ban-docker-rocketmq" class="header-anchor"></a></h2><h3><span id="xia-zai-jing-xiang">下载镜像</span><a href="#xia-zai-jing-xiang" class="header-anchor"></a></h3><ul><li>docker pull foxiswho/rocketmq:server</li><li>docker pull foxiswho/rocketmq:broker</li><li>docker pull styletang/rocketmq-console-ng</li></ul><h3><span id="server-fu-wu">server服务</span><a href="#server-fu-wu" class="header-anchor"></a></h3><ul><li>docker run -d -p 9876:9876 –name rmqserver  foxiswho/rocketmq:server</li></ul><h3><span id="broker-fu-wu">broker服务</span><a href="#broker-fu-wu" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 10911:10911 -p 10909:10909 --name rmqbroker --link rmqserver:namesrv \</span><br><span class="line">-e &quot;NAMESRV_ADDR&#x3D;namesrv:9876&quot; \</span><br><span class="line">-e &quot;JAVA_OPTS&#x3D;-Duser.home&#x3D;&#x2F;opt&quot;  \</span><br><span class="line">-e &quot;JAVA_OPT_EXT&#x3D;-server -Xms128m -Xmx128m -Xmn128m&quot; \</span><br><span class="line">-v &#x2F;Users&#x2F;haodalai&#x2F;docker&#x2F;rocketmq&#x2F;broker.conf:&#x2F;etc&#x2F;rocketmq&#x2F;broker.conf \</span><br><span class="line">foxiswho&#x2F;rocketmq:broker</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">需要新建一份 broker 文件:  注意 brokerIP1一定需要写docker 宿主 ip 地址</span><br><span class="line"></span><br><span class="line">brokerClusterName &#x3D; DefaultCluster</span><br><span class="line">brokerName &#x3D; broker-a</span><br><span class="line">brokerId &#x3D; 0</span><br><span class="line">deleteWhen &#x3D; 04</span><br><span class="line">fileReservedTime &#x3D; 48</span><br><span class="line">brokerRole &#x3D; ASYNC_MASTER</span><br><span class="line">flushDiskType &#x3D; ASYNC_FLUSH</span><br><span class="line">brokerIP1&#x3D;172.16.176.1</span><br></pre></td></tr></table></figure><ul><li>docker run –name rmqconsole –link rmqserver:namesrv -e “JAVA_OPTS=-Drocketmq.namesrv.addr=namesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false” -p 8180:8080 -t styletang/rocketmq-console-ng</li></ul><h3><span id="zhi-ling-de-hui-zong">指令的汇总</span><a href="#zhi-ling-de-hui-zong" class="header-anchor"></a></h3><ul><li><p>server:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 9876:9876 --name rmqserver  foxiswho&#x2F;rocketmq:server</span><br></pre></td></tr></table></figure></li><li><p>broker: [一定需要带上 broker.conf 文件 不然执行报错 docker 宿主 ip 地址]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 10911:10911 -p 10909:10909 --name rmqbroker --link rmqserver:namesrv \</span><br><span class="line">-e &quot;NAMESRV_ADDR&#x3D;namesrv:9876&quot; \</span><br><span class="line">-e &quot;JAVA_OPTS&#x3D;-Duser.home&#x3D;&#x2F;opt&quot;  \</span><br><span class="line">-e &quot;JAVA_OPT_EXT&#x3D;-server -Xms128m -Xmx128m -Xmn128m&quot; \</span><br><span class="line">-v &#x2F;Users&#x2F;haodalai&#x2F;docker&#x2F;rocketmq&#x2F;broker.conf:&#x2F;etc&#x2F;rocketmq&#x2F;broker.conf \</span><br><span class="line">foxiswho&#x2F;rocketmq:broker</span><br></pre></td></tr></table></figure></li><li><p>console: [控制台服务]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name rmqconsole --link rmqserver:namesrv -e &quot;JAVA_OPTS&#x3D;-Drocketmq.namesrv.addr&#x3D;namesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel&#x3D;false&quot; -p 8180:8080 -t styletang&#x2F;rocketmq-console-ng</span><br></pre></td></tr></table></figure></li></ul><h3><span id="can-kao-wen-zhang">参考文章</span><a href="#can-kao-wen-zhang" class="header-anchor"></a></h3><ul><li><a href="https://github.com/ZuoYouLai/docker-rocketmq" target="_blank" rel="noopener">https://github.com/ZuoYouLai/docker-rocketmq</a></li></ul>]]></content>
    
    <summary type="html">
    
      docker rocketmq安装
    
    </summary>
    
    
      <category term="rocketmq" scheme="https://zuoyoulai.github.io/categories/rocketmq/"/>
    
    
      <category term="rocketmq" scheme="https://zuoyoulai.github.io/tags/rocketmq/"/>
    
      <category term="docker" scheme="https://zuoyoulai.github.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>jenkins学习</title>
    <link href="https://zuoyoulai.github.io/2020/03/21/jenkins%E5%AD%A6%E4%B9%A0/"/>
    <id>https://zuoyoulai.github.io/2020/03/21/jenkins%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-03-21T08:41:37.000Z</published>
    <updated>2020-04-05T07:09:34.882Z</updated>
    
    <content type="html"><![CDATA[<h1><span id="jenkin-xue-xi">jenkin 学习</span><a href="#jenkin-xue-xi" class="header-anchor"></a></h1><ul><li>官网 ： <a href="https://jenkins.io/" target="_blank" rel="noopener">https://jenkins.io/</a></li></ul><h3><span id="xue-xi-bo-ke-jiao-cheng">学习博客教程</span><a href="#xue-xi-bo-ke-jiao-cheng" class="header-anchor"></a></h3><ul><li><a href="http://surenpi.com/blog/devops/jenkins/" target="_blank" rel="noopener">http://surenpi.com/blog/devops/jenkins/</a></li><li>非常的详细的 jenkins 教程 : <a href="http://www.eryajf.net/2415.html" target="_blank" rel="noopener">http://www.eryajf.net/2415.html</a></li></ul><h2><span id="centos-an-zhuang">centos安装</span><a href="#centos-an-zhuang" class="header-anchor"></a></h2><ul><li>文章参考 ： <a href="https://www.cnblogs.com/loveyouyou616/p/8714544.html" target="_blank" rel="noopener">https://www.cnblogs.com/loveyouyou616/p/8714544.html</a></li><li>安装 openjdk-1.8  <code>yum install -y java-1.8.0-openjdk java-1.8.0-openjdk-devel</code></li><li>安装 jenkins :    <code></code></li></ul><h2><span id="docker-an-zhuang">docker 安装</span><a href="#docker-an-zhuang" class="header-anchor"></a></h2><ul><li><p>docker 下载 jenkins 的镜像: <code>docker pull jenkinszh/jenkins-zh:lts</code></p></li><li><p>安装前的准备且出现的问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 新建jenkins目录放日志与 jenkins 持久化配置信息,配置</span><br><span class="line">&gt; mkdir -p &#x2F;home&#x2F;jenkins&#x2F;data</span><br><span class="line"></span><br><span class="line">执行 docker run 挂卷出现权限的问题:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#检查一下之前启动方式的&quot;&#x2F;var&#x2F;jenkins_home&quot;目录权限，查看Jenkins容器的当前用户: 当前用户是&quot;jenkins&quot;而且&quot;&#x2F;var&#x2F;jenkins_home&quot;目录是属于jenkins用户拥有的</span><br><span class="line"></span><br><span class="line">&gt; </span><br><span class="line">docker run -ti --rm --entrypoint&#x3D;&quot;&#x2F;bin&#x2F;bash&quot; jenkins&#x2F;jenkins:2.83 -c &quot;whoami &amp;&amp; id&quot;</span><br><span class="line">jenkins</span><br><span class="line"></span><br><span class="line">jenkins</span><br><span class="line">uid&#x3D;1000(jenkins) gid&#x3D;1000(jenkins) groups&#x3D;1000(jenkins)</span><br></pre></td></tr></table></figure></li><li><p>卷的权限问题解决</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">解决的权限问题，只需要把文件目录权限 给 jenkins 用户:</span><br><span class="line"></span><br><span class="line">&gt;  sudo chown -R 1000 &#x2F;home&#x2F;jenkins&#x2F;data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 赋权限之后就可以进行执行 docker run 指令了 正常的执行 jenkins 服务</span><br></pre></td></tr></table></figure></li><li><p>初始化jenkins服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;</span><br><span class="line">cat &gt; &#x2F;home&#x2F;jenkins&#x2F;data&#x2F;log.properties &lt;&lt;EOF</span><br><span class="line">handlers&#x3D;java.util.logging.ConsoleHandler</span><br><span class="line">jenkins.level&#x3D;FINEST</span><br><span class="line">java.util.logging.ConsoleHandler.level&#x3D;FINEST</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;</span><br><span class="line">docker run --name jenkins -p 80:8080 -p 50000:50000 --env JAVA_OPTS&#x3D;\&quot;-Djava.util.logging.config.file&#x3D;&#x2F;var&#x2F;jenkins_home&#x2F;log.properties\&quot; -v &#x2F;home&#x2F;jenkins&#x2F;data:&#x2F;var&#x2F;jenkins_home jenkinszh&#x2F;jenkins-zh:lts</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>启动的时候发现插件下载异常 : <b>An error occurred during installation: No such plugin: cloudbees-folder</b></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">解决方法:</span><br><span class="line"></span><br><span class="line">&gt; cd &#x2F;home&#x2F;jenkins&#x2F;data&#x2F;plugins</span><br><span class="line"></span><br><span class="line">&gt; wget http:&#x2F;&#x2F;ftp.icm.edu.pl&#x2F;packages&#x2F;jenkins&#x2F;plugins&#x2F;cloudbees-folder&#x2F;6.11&#x2F;cloudbees-folder.hpi</span><br><span class="line"></span><br><span class="line">&gt; docker restart jenkins</span><br></pre></td></tr></table></figure></li></ul><ul><li>查看 jenkins 的密钥进行服务的初始化  <code>cat /home/jenkins/data/secrets/initialAdminPassword</code></li></ul><h2><span id="docker-zai-ci-an-zhuang-guo-nei-zhong-wen-ban-zhe-chong-fang-shi-an-zhuang-yu-xia-zai-cha-jian-du-fei-chang-de-kuai-su">docker 再次安装  :  国内中文版  这种方式安装与下载插件都非常的快速</span><a href="#docker-zai-ci-an-zhuang-guo-nei-zhong-wen-ban-zhe-chong-fang-shi-an-zhuang-yu-xia-zai-cha-jian-du-fei-chang-de-kuai-su" class="header-anchor"></a></h2><ul><li><p>docker 下载 jenkins 的镜像: <code>docker pull jenkinszh/jenkins-zh:lts</code></p></li><li><p>docker run 操作:</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">先执行:</span><br><span class="line">&gt;</span><br><span class="line">cat &gt; &#x2F;home&#x2F;jenkins&#x2F;data&#x2F;log.properties &lt;&lt;EOF</span><br><span class="line">handlers&#x3D;java.util.logging.ConsoleHandler</span><br><span class="line">jenkins.level&#x3D;FINEST</span><br><span class="line">java.util.logging.ConsoleHandler.level&#x3D;FINEST</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker run \</span><br><span class="line">  --name jenkins \</span><br><span class="line">  -u root \</span><br><span class="line">  --rm \</span><br><span class="line">  -d \</span><br><span class="line">  -p 80:8080 \</span><br><span class="line">  -p 50000:50000 \</span><br><span class="line">  --env JAVA_OPTS&#x3D;\&quot;-Djava.util.logging.config.file&#x3D;&#x2F;var&#x2F;jenkins_home&#x2F;log.properties\&quot; \</span><br><span class="line">  -v &#x2F;home&#x2F;jenkins&#x2F;data:&#x2F;var&#x2F;jenkins_home  \</span><br><span class="line">  -v &#x2F;home&#x2F;jenkins&#x2F;data&#x2F;downloads:&#x2F;var&#x2F;jenkins_home&#x2F;downloads \</span><br><span class="line">  -v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock \</span><br><span class="line">  jenkinszh&#x2F;jenkins-zh:lts</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  jdk 的安装:</span><br><span class="line">  jdk 安装包放到 &#x2F;home&#x2F;jenkins&#x2F;data&#x2F;downloads 目录下</span><br><span class="line"></span><br><span class="line">  跳转到 Manage Jenkins – Global Tool Configuration 和 *JDK 安装部分*。单击 Add JDK 按钮。默认情况下，java.sun.com 会添加安装程序。我们不会使用这个，所以删除它并添加一个 Extract *.zip&#x2F;*.tar.gzinstaller。根据下面的屏幕截图填写字段。二进制存档的路径是 file:&#x2F;var&#x2F;jenkins_home&#x2F;downloads&#x2F;OpenJDK11U-jdk_x64_linux_hotspot_11.0.1_13.tar.gz。Label 留空是很重要的；否则，JDK的安装将失败</span><br><span class="line"></span><br><span class="line">  file:&#x2F;var&#x2F;jenkins_home&#x2F;downloads&#x2F;jdk-8u144-linux-i586.tar.gz</span><br><span class="line"></span><br><span class="line">  安装的 jdk 文件的目录:</span><br><span class="line">  &#x2F;var&#x2F;jenkins_home&#x2F;tools&#x2F;hudson.model.JDK&#x2F;jdk&#x2F;jdk1.8.0_144</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  解压目录一定需要写正确:  </span><br><span class="line"></span><br><span class="line">  名称 : jdk</span><br><span class="line">  目录 : &#x2F;jdk1.8.0_144</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  查看本地环境变量:</span><br><span class="line">  &gt; env</span><br><span class="line"></span><br><span class="line">  这个工具本是就是有安装 openjdk  在安装设置上设置相应的路径就可以  :   &#x2F;usr&#x2F;local&#x2F;openjdk-8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  跳转到 *Manage Jenkins – Configure System*，到 Global properties 部分并启用 *环境变量*。为其添加环境变量 JAVA_HOME 并填充路径 &#x2F;var&#x2F;jenkins_home&#x2F;tools&#x2F;hudson.model.JDK&#x2F;JDK11&#x2F;jdk-11.0.1+13</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  maven 的安装:</span><br><span class="line">  maven 安装包放到 &#x2F;home&#x2F;jenkins&#x2F;data&#x2F;downloads 目录下</span><br><span class="line"></span><br><span class="line">  在 jenkins 的全局工具配置进行 maven 的安装:</span><br><span class="line">     Manage Jenkins – Global Tool Configuration 和 Maven 安装部分。单击 Add Maven 按钮。默认情况下，Apache 会添加安装程序。我们不会使用这个，所以删除它并添加一个 Extract *.zip&#x2F;*.tar.gzinstaller。根据下面的屏幕截图填写字段。二进制存档的路径是 file:&#x2F;var&#x2F;jenkins_home&#x2F;downloads&#x2F;apache-maven-3.6.0-bin.tar.gz。Label 留空是很重要的；否则，Maven 的安装将失败。将子目录设置为 apache-maven-3.6.0 也很重要；否则，Maven 主目录没有正确设置，mvn 可执行文件将无法找到。</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> file:&#x2F;var&#x2F;jenkins_home&#x2F;downloads&#x2F;apache-maven-3.6.3-bin.tar.gz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> 安装完maven文件之后:</span><br><span class="line"> 会出现这个目录:  docker 容器内 :   </span><br><span class="line"> 会出现仓库的目录:</span><br><span class="line">   var&#x2F;jenkins_home&#x2F;.m2&#x2F;repository  里面就是 maven 的仓库内容了</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> 安装的 maven 文件的目录:</span><br><span class="line">   &#x2F;var&#x2F;jenkins_home&#x2F;tools&#x2F;hudson.tasks.Maven_MavenInstallation&#x2F;maven&#x2F;apache-maven-3.6.3&#x2F;conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">宿主机的 maven 仓库目录是: &#x2F;opt&#x2F;maven&#x2F;jars    --&gt;   &#x2F;var&#x2F;jenkins_home&#x2F;.m2&#x2F;repository</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">这一切都是在安装完 maven 的插件之后才可以进行关联 maven 的仓库 与 setting 文件的内容:</span><br><span class="line"></span><br><span class="line">所以改下仓库的目录:</span><br><span class="line"></span><br><span class="line"> docker run \</span><br><span class="line">  --name jenkins \</span><br><span class="line">  -u root \</span><br><span class="line">  --rm \</span><br><span class="line">  -d \</span><br><span class="line">  -p 80:8080 \</span><br><span class="line">  -p 50000:50000 \</span><br><span class="line">  -v &#x2F;etc&#x2F;localtime:&#x2F;etc&#x2F;localtime \</span><br><span class="line">  --env JAVA_OPTS&#x3D;\&quot;-Djava.util.logging.config.file&#x3D;&#x2F;var&#x2F;jenkins_home&#x2F;log.properties\&quot; \</span><br><span class="line">  -v &#x2F;home&#x2F;jenkins&#x2F;data:&#x2F;var&#x2F;jenkins_home  \</span><br><span class="line">  -v &#x2F;opt&#x2F;maven&#x2F;jars:&#x2F;opt&#x2F;maven&#x2F;jars  \</span><br><span class="line">  -v &#x2F;opt&#x2F;maven&#x2F;config&#x2F;settings.xml:&#x2F;var&#x2F;jenkins_home&#x2F;tools&#x2F;hudson.tasks.Maven_MavenInstallation&#x2F;maven&#x2F;apache-maven-3.6.3&#x2F;conf&#x2F;settings.xml  \</span><br><span class="line">  -v &#x2F;home&#x2F;jenkins&#x2F;data&#x2F;downloads:&#x2F;var&#x2F;jenkins_home&#x2F;downloads \</span><br><span class="line">  -v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock \</span><br><span class="line">  jenkinszh&#x2F;jenkins-zh:lts</span><br></pre></td></tr></table></figure><h2><span id="a-li-yun-jenkins">阿里云jenkins</span><a href="#a-li-yun-jenkins" class="header-anchor"></a></h2><ul><li>参考文章: <a href="https://blog.csdn.net/u014249394/article/details/93466047" target="_blank" rel="noopener">https://blog.csdn.net/u014249394/article/details/93466047</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">image:</span><br><span class="line">registry-vpc.cn-shenzhen.aliyuncs.com&#x2F;img-x&#x2F;jenkins.lastest</span><br><span class="line"></span><br><span class="line">新建目录:</span><br><span class="line"></span><br><span class="line">mkdir -p &#x2F;home&#x2F;jenkins&#x2F;data&#x2F;downloads</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker run \</span><br><span class="line">  --name jenkins \</span><br><span class="line">  -u root \</span><br><span class="line">  --rm \</span><br><span class="line">  -d \</span><br><span class="line">  -p 8080:8080 \</span><br><span class="line">  -p 50000:50000 \</span><br><span class="line">  --env JAVA_OPTS&#x3D;\&quot;-Djava.util.logging.config.file&#x3D;&#x2F;var&#x2F;jenkins_home&#x2F;log.properties\&quot; \</span><br><span class="line">  -v &#x2F;home&#x2F;jenkins&#x2F;data:&#x2F;var&#x2F;jenkins_home  \</span><br><span class="line">  -v &#x2F;home&#x2F;jenkins&#x2F;data&#x2F;downloads:&#x2F;var&#x2F;jenkins_home&#x2F;downloads \</span><br><span class="line">  -v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock \</span><br><span class="line">  registry.cn-shenzhen.aliyuncs.com&#x2F;img-x&#x2F;jenkins.lastest</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">访问 jenkins 服务:</span><br><span class="line">localhost:8080</span><br><span class="line"></span><br><span class="line">访问密钥:</span><br><span class="line">cat &#x2F;home&#x2F;jenkins&#x2F;data&#x2F;secrets&#x2F;initialAdminPassword</span><br><span class="line"></span><br><span class="line">安装 jenkins 的 ssh 插件:</span><br><span class="line">在jenkins系统管理&gt;系统设置往下拉找到publish over ssh,没有的话到系统设置&gt;插件中心下载publish over ssh插件</span><br><span class="line">  </span><br><span class="line">下载 maven:</span><br><span class="line">wget https:&#x2F;&#x2F;mirror.bit.edu.cn&#x2F;apache&#x2F;maven&#x2F;maven-3&#x2F;3.6.3&#x2F;binaries&#x2F;apache-maven-3.6.3-bin.tar.gz</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">密钥的操作 jenkins 主机的操作:</span><br><span class="line">mkdir ~&#x2F;.ssh &amp;&amp; cd ~&#x2F;.ssh</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">jenkins首页，系统管理 -&gt; 系统设置 -&gt; 下拉，找到Publish over SSH，填写Key 和 SSH Server -&gt; 保存</span><br><span class="line">&#96;&#96;&#96;text</span><br><span class="line">1.Passphrase  选择 samlai 的 jenkins 用户的密码</span><br><span class="line">2.Key 则是 jenkins 里面的 privatekey</span><br><span class="line">3.新增 SSH Server : 填写相应的 ip 地址  用户名称  直接测试是否可以链接   【测试为: success】</span><br></pre></td></tr></table></figure></li></ul><p>maven 的安装:<br>maven 安装包放到 /home/jenkins/data/downloads 目录下</p><p>在 jenkins 的全局工具配置进行 maven 的安装:<br>     Manage Jenkins – Global Tool Configuration 和 Maven 安装部分。单击 Add Maven 按钮。默认情况下，Apache 会添加安装程序。我们不会使用这个，所以删除它并添加一个 Extract <em>.zip/</em>.tar.gzinstaller。根据下面的屏幕截图填写字段。二进制存档的路径是 file:/var/jenkins_home/downloads/apache-maven-3.6.0-bin.tar.gz。Label 留空是很重要的；否则，Maven 的安装将失败。将子目录设置为 apache-maven-3.6.0 也很重要；否则，Maven 主目录没有正确设置，mvn 可执行文件将无法找到。</p><p>file:/var/jenkins_home/downloads/apache-maven-3.6.3-bin.tar.gz</p><p>npm 执行操作:<br>npm run dev –registry=<a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a></p><p>docker run <br>  –name jenkins <br>  -u root <br>  –rm <br>  -d <br>  -p 8080:8080 <br>  -p 50000:50000 <br>  -v /etc/localtime:/etc/localtime <br>  –env JAVA_OPTS=&quot;-Djava.util.logging.config.file=/var/jenkins_home/log.properties&quot; <br>  -v /home/jenkins/data:/var/jenkins_home  <br>  -v /home/jenkins/data/downloads:/var/jenkins_home/downloads <br>  -v /var/run/docker.sock:/var/run/docker.sock <br>  -v /opt/maven/jars:/project/jars  <br>  -v /opt/maven/config/settings.xml:/var/jenkins_home/tools/hudson.tasks.Maven_MavenInstallation/maven3.6.3/apache-maven-3.6.3/conf/settings.xml  <br>  registry.cn-shenzhen.aliyuncs.com/img-x/jenkins.lastest</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">### docker-jenkins 使用宿主的 docker 指令:</span><br><span class="line">+ 参考链接 :  https:&#x2F;&#x2F;www.jianshu.com&#x2F;p&#x2F;8b72eece7df8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 安装的插件</span><br><span class="line">+ git parameter</span><br><span class="line">+ Extended choice parameter</span><br><span class="line">+ 在jenkins系统管理&gt;系统设置往下拉找到publish over ssh,没有的话到系统设置&gt;插件中心下载publish over ssh插件</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### docker-jenkins 安装 ssh 链接</span><br><span class="line">&#96;&#96;&#96;text</span><br><span class="line">说明:</span><br><span class="line">    jenkins 的 docker 镜像是用来控制的作用来的,真正工作的是宿主主机</span><br><span class="line">    宿主主机有安装很多软件，方便我们 </span><br><span class="line">    1.git clone 代码</span><br><span class="line">    2.编译</span><br><span class="line">    3.打包</span><br><span class="line">    4.测试</span><br><span class="line">    5.docker 操作镜像</span><br></pre></td></tr></table></figure><ul><li>docker-jenkins ssh 连接宿主主机进行工作参考文章 : <a href="https://www.cnblogs.com/Erick-L/p/8818697.html" target="_blank" rel="noopener">https://www.cnblogs.com/Erick-L/p/8818697.html</a></li><li>在宿主机器安装 ssh 服务  参考文章: <a href="https://blog.csdn.net/trackle400/article/details/52755571" target="_blank" rel="noopener">https://blog.csdn.net/trackle400/article/details/52755571</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install openssh-server</span><br></pre></td></tr></table></figure></li><li>开启了宿主的主机服务后 : 添加公钥到宿主机  将id_rsa.pub中字符串添加到authorized_keys</li><li>测试在 jenkin 服务内: <code>ssh 172.16.182.141</code>  直接进入了 jenkins 服务器（就是宿主主机）</li><li>jenkins首页，系统管理 -&gt; 系统设置 -&gt; 下拉，找到Publish over SSH，填写Key 和 SSH Server -&gt; 保存<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.Passphrase  选择 samlai 的 jenkins 用户的密码</span><br><span class="line">2.Key 则是 jenkins 里面的 privatekey</span><br><span class="line">3.新增 SSH Server : 填写相应的 ip 地址  用户名称  直接测试是否可以链接   【测试为: success】</span><br></pre></td></tr></table></figure></li><li>连接远程的主机: ssh <a href="mailto:root@120.24.239.99">root@120.24.239.99</a></li><li>新建一个任务 &gt; 构建环境：选择Send files or execute commands over SSH after the build runs，选择服务器，以及添加Exec command。保存</li></ul><h3><span id="jenkins-shi-yong-su-zhu-ji-de-maven-zhi-ling-de-cao-zuo">jenkins  使用宿主机的 maven 指令的操作</span><a href="#jenkins-shi-yong-su-zhu-ji-de-maven-zhi-ling-de-cao-zuo" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;opt&#x2F;maven&#x2F;jars</span><br><span class="line">mkdir &#x2F;opt&#x2F;project</span><br><span class="line"></span><br><span class="line">拉取的项目代码: img-project</span><br><span class="line"></span><br><span class="line">在 &#x2F;opt&#x2F;maven&#x2F;jars 目录下新建一个 setting 文件: settings-docker.xml</span><br><span class="line">&lt;settings xmlns&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;SETTINGS&#x2F;1.0.0&quot;</span><br><span class="line">  xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot;</span><br><span class="line">  xsi:schemaLocation&#x3D;&quot;http:&#x2F;&#x2F;maven.apache.org&#x2F;SETTINGS&#x2F;1.0.0</span><br><span class="line">                      https:&#x2F;&#x2F;maven.apache.org&#x2F;xsd&#x2F;settings-1.0.0.xsd&quot;&gt;</span><br><span class="line">  &lt;localRepository&gt;&#x2F;usr&#x2F;share&#x2F;maven&#x2F;ref&#x2F;repository&lt;&#x2F;localRepository&gt;</span><br><span class="line">&lt;mirrors&gt;</span><br><span class="line"> &lt;mirror&gt;</span><br><span class="line">      &lt;id&gt;alimaven&lt;&#x2F;id&gt;</span><br><span class="line">      &lt;name&gt;aliyun maven&lt;&#x2F;name&gt;</span><br><span class="line">      &lt;url&gt;http:&#x2F;&#x2F;maven.aliyun.com&#x2F;nexus&#x2F;content&#x2F;groups&#x2F;public&#x2F;&lt;&#x2F;url&gt;</span><br><span class="line">      &lt;mirrorOf&gt;central&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">   &lt;&#x2F;mirror&gt;</span><br><span class="line">&lt;&#x2F;mirrors&gt;</span><br><span class="line">&lt;&#x2F;settings&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker run --rm --name maven -v &#x2F;opt&#x2F;maven&#x2F;jars:&#x2F;root&#x2F;.m2 \</span><br><span class="line">-v &#x2F;opt&#x2F;project&#x2F;img-project:&#x2F;usr&#x2F;src&#x2F;mvn -w &#x2F;usr&#x2F;src&#x2F;mvn&#x2F; \</span><br><span class="line">maven mvn clean install -Dmaven.test.skip&#x3D;true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第二种方式: cpoy 自己的 setting 文件内容</span><br><span class="line">mkdir &#x2F;opt&#x2F;maven&#x2F;jars</span><br><span class="line">mkdir &#x2F;opt&#x2F;project</span><br><span class="line"></span><br><span class="line">docker pull maven:3.5-jdk-8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker run -it --rm -v &#x2F;opt&#x2F;project&#x2F;img-project:&#x2F;usr&#x2F;src&#x2F;mymaven \</span><br><span class="line"> -v &#x2F;opt&#x2F;maven&#x2F;jars:&#x2F;project&#x2F;jars\</span><br><span class="line"> -v &#x2F;opt&#x2F;maven&#x2F;config&#x2F;settings.xml:&#x2F;usr&#x2F;share&#x2F;maven&#x2F;conf&#x2F;settings.xml \</span><br><span class="line"> -w &#x2F;usr&#x2F;src&#x2F;mymaven maven:3.5-jdk-8 \</span><br><span class="line"> mvn clean package -Dmaven.test.skip&#x3D;true -Ptest</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      jenkins 学习
    
    </summary>
    
    
      <category term="jenkins" scheme="https://zuoyoulai.github.io/categories/jenkins/"/>
    
    
      <category term="jenkins" scheme="https://zuoyoulai.github.io/tags/jenkins/"/>
    
  </entry>
  
  <entry>
    <title>k8s-kubeadm1.7安装</title>
    <link href="https://zuoyoulai.github.io/2020/03/20/k8s-kubeadm1-7%E5%AE%89%E8%A3%85/"/>
    <id>https://zuoyoulai.github.io/2020/03/20/k8s-kubeadm1-7%E5%AE%89%E8%A3%85/</id>
    <published>2020-03-20T03:00:54.000Z</published>
    <updated>2020-03-30T06:21:40.774Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="can-kao-wen-zhang">参考文章</span><a href="#can-kao-wen-zhang" class="header-anchor"></a></h2><ul><li><a href="https://yq.aliyun.com/articles/702158" target="_blank" rel="noopener">https://yq.aliyun.com/articles/702158</a></li><li><a href="https://juejin.im/post/5e550b3ff265da57570476db" target="_blank" rel="noopener">https://juejin.im/post/5e550b3ff265da57570476db</a></li></ul><h2><span id="mac-chong-xin-an-zhuang-liao-xu-ni-ji-xu-yao-geng-xin-know-host-wen-jian">mac 重新安装了虚拟机 需要更新 know_host 文件</span><a href="#mac-chong-xin-an-zhuang-liao-xu-ni-ji-xu-yao-geng-xin-know-host-wen-jian" class="header-anchor"></a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -R 172.16.182.130</span><br><span class="line">ssh-keygen -R 172.16.182.131</span><br><span class="line">ssh-keygen -R 172.16.182.132</span><br><span class="line">ssh-keygen -R 172.16.182.139</span><br><span class="line">ssh-keygen -R 172.16.182.140</span><br></pre></td></tr></table></figure><ul><li>时间同步 :   <code>yum install -y ntpdate</code>    <code>ntpdate ntp.api.bz</code></li></ul><h2><span id="an-zhuang-1-7-kube-ban-ben">安装1.7 kube版本</span><a href="#an-zhuang-1-7-kube-ban-ben" class="header-anchor"></a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y kubeadm-1.17.3-0 kubelet-1.17.3-0 kubectl-1.17.3-0</span><br></pre></td></tr></table></figure><h2><span id="xia-zai-flannel-wen-jian">下载 flannel 文件</span><a href="#xia-zai-flannel-wen-jian" class="header-anchor"></a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coreos&#x2F;flannel&#x2F;oligarch&#x2F;Documentation&#x2F;kube-flannel.yml</span><br></pre></td></tr></table></figure><h2><span id="xia-zai-flannel-v12-0-ban-ben-de-jing-xiang">下载 flannel v12.0版本的镜像</span><a href="#xia-zai-flannel-v12-0-ban-ben-de-jing-xiang" class="header-anchor"></a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">打上标签:</span><br><span class="line">docker tag quay.io&#x2F;coreos&#x2F;flannel:v0.12.0-arm64 registry.cn-shenzhen.aliyuncs.com&#x2F;stool&#x2F;flannel:v12.0</span><br><span class="line"></span><br><span class="line">推送镜像:</span><br><span class="line">docker push registry.cn-shenzhen.aliyuncs.com&#x2F;stool&#x2F;flannel:v12.0</span><br><span class="line"></span><br><span class="line">拉取镜像:</span><br><span class="line">docker pull registry.cn-shenzhen.aliyuncs.com&#x2F;stool&#x2F;flannel:v12.0 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker tag registry.cn-shenzhen.aliyuncs.com&#x2F;stool&#x2F;flannel:v12.0  quay.io&#x2F;coreos&#x2F;flannel:v0.12.0-arm64</span><br></pre></td></tr></table></figure><h2><span id="an-zhuang-zhun-bei-hao-yi-xie-zhu-ji-de-gong-neng-jin-xing-guan-bi-zhu-ji-ran-hou-zai-ke-long">安装准备好一些主机的功能,进行关闭主机然后再克隆</span><a href="#an-zhuang-zhun-bei-hao-yi-xie-zhu-ji-de-gong-neng-jin-xing-guan-bi-zhu-ji-ran-hou-zai-ke-long" class="header-anchor"></a></h2><ul><li>添加主机名与IP对应关系（记得设置主机名）：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cat &#x2F;etc&#x2F;hosts</span><br><span class="line">172.16.182.130 k8s-oligarch</span><br><span class="line">172.16.182.139 k8s-node1</span><br><span class="line">172.16.182.140 k8s-node2</span><br></pre></td></tr></table></figure><ul><li><p>最新文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">scp ~&#x2F;Desktop&#x2F;1.7flannel.yml root@172.16.182.130:&#x2F;root&#x2F;kube-flannel.yml</span><br><span class="line"></span><br><span class="line">&gt; kubectl apply -f .&#x2F;kube-flannel.yml</span><br></pre></td></tr></table></figure></li><li><p>设置 hostname </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname k8s-oligarch</span><br><span class="line">hostnamectl set-hostname k8s-node1</span><br><span class="line">hostnamectl set-hostname k8s-node2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hostnamectl set-hostname c-k8s-oligarch</span><br><span class="line">hostnamectl set-hostname c-k8s-node1</span><br><span class="line">hostnamectl set-hostname c-k8s-node2</span><br><span class="line">hostnamectl set-hostname c-k8s-node3</span><br><span class="line">hostnamectl set-hostname c-k8s-node3</span><br></pre></td></tr></table></figure></li></ul><h3><span id="zhi-xing-de-cao-zuo-1-oligarch-2-node">执行的操作 ： 1 oligarch  2 node</span><a href="#zhi-xing-de-cao-zuo-1-oligarch-2-node" class="header-anchor"></a></h3><ul><li>init  oligarch 节点<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">kubeadm init \</span><br><span class="line">  --apiserver-advertise-address&#x3D;172.16.182.130 \</span><br><span class="line">  --image-repository registry.aliyuncs.com&#x2F;google_containers \</span><br><span class="line">  --kubernetes-version v1.17.3 \</span><br><span class="line">  --service-cidr&#x3D;10.1.0.0&#x2F;16 \</span><br><span class="line">  --pod-network-cidr&#x3D;10.244.0.0&#x2F;16</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; systemctl enable kubelet</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">result ：</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p $HOME&#x2F;.kube</span><br><span class="line">  sudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config</span><br><span class="line">  sudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:</span><br><span class="line">  https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;concepts&#x2F;cluster-administration&#x2F;addons&#x2F;</span><br><span class="line"></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm join 172.16.182.130:6443 --token 8ljs63.gnehsbfhvt8vbp4m \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:879064f5fe917a84788cfd5601ab29a666167f37881ea0084c707afc82164fc1</span><br></pre></td></tr></table></figure></li></ul><h3><span id="shi-yong-kubectl-gong-ju">使用kubectl工具</span><a href="#shi-yong-kubectl-gong-ju" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&gt; mkdir -p $HOME&#x2F;.kube</span><br><span class="line"></span><br><span class="line">&gt; sudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config</span><br><span class="line"></span><br><span class="line">&gt; sudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 查看节点内容进行测试 kubectl 是否安装成功</span><br><span class="line"></span><br><span class="line">&gt; kubectl get nodes </span><br><span class="line"></span><br><span class="line"># 显示内容  成功安装</span><br><span class="line"></span><br><span class="line">NAME                    STATUS     ROLES    AGE     VERSION</span><br><span class="line">localhost.localdomain   NotReady   oligarch   4m26s   v1.15.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; 查看的 k8s的全部服务的运行的情况 : kubectl get pods --all-namespaces</span><br><span class="line"></span><br><span class="line">[root@k8s-oligarch ~]# kubectl get pods --all-namespaces</span><br><span class="line">NAMESPACE     NAME                                 READY   STATUS    RESTARTS   AGE</span><br><span class="line">kube-system   coredns-9d85f5447-492bj              0&#x2F;1     Pending   0          3m23s</span><br><span class="line">kube-system   coredns-9d85f5447-bwzpq              0&#x2F;1     Pending   0          3m23s</span><br><span class="line">kube-system   etcd-k8s-oligarch                      1&#x2F;1     Running   0          3m19s</span><br><span class="line">kube-system   kube-apiserver-k8s-oligarch            1&#x2F;1     Running   0          3m19s</span><br><span class="line">kube-system   kube-controller-manager-k8s-oligarch   1&#x2F;1     Running   0          3m19s</span><br><span class="line">kube-system   kube-proxy-tfz8j                     1&#x2F;1     Running   0          3m23s</span><br><span class="line">kube-system   kube-scheduler-k8s-oligarch            1&#x2F;1     Running   0          3m19s</span><br></pre></td></tr></table></figure><ul><li><p>添加网络服务: flannel</p></li><li><p>参考文章 : <a href="https://yq.aliyun.com/articles/702158" target="_blank" rel="noopener">https://yq.aliyun.com/articles/702158</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">docker pull quay.io&#x2F;coreos&#x2F;flannel:v0.12.0-arm64</span><br><span class="line"></span><br><span class="line">kubectl apply -f .&#x2F;kube-flannel.yml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">来自一篇文章:</span><br><span class="line"></span><br><span class="line">推荐等到 node1 状态 Ready 之后再安装 flannel</span><br><span class="line">因为 flannel 中的有些镜像在 quay-mirror.qiniu.com，国内无法访问，故可以转到阿里云镜像中心获取，然后再将其重新打 tag 为 quay.io&#x2F;coreos&#x2F;flannel:v0.11.0-amd64 中的名称即可。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@oligarch ~]# cat processFlannelImage.sh</span><br><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">docker pull quay-mirror.qiniu.com&#x2F;coreos&#x2F;flannel:v0.11.0-amd64</span><br><span class="line">docker tag quay-mirror.qiniu.com&#x2F;coreos&#x2F;flannel:v0.11.0-amd64 quay.io&#x2F;coreos&#x2F;flannel:v0.11.0-amd64</span><br><span class="line">[root@oligarch ~]# chmod +x processFlannelImage.sh</span><br><span class="line">[root@oligarch ~]# .&#x2F;processFlannelImage.sh</span><br></pre></td></tr></table></figure></li></ul><ul><li>查看详情内容:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[root@k8s-oligarch ~]# kubectl get pods --all-namespaces</span><br><span class="line">NAMESPACE     NAME                                 READY   STATUS     RESTARTS   AGE</span><br><span class="line">kube-system   coredns-9d85f5447-492bj              0&#x2F;1     Pending    0          8m16s</span><br><span class="line">kube-system   coredns-9d85f5447-bwzpq              0&#x2F;1     Pending    0          8m16s</span><br><span class="line">kube-system   etcd-k8s-oligarch                      1&#x2F;1     Running    0          8m12s</span><br><span class="line">kube-system   kube-apiserver-k8s-oligarch            1&#x2F;1     Running    0          8m12s</span><br><span class="line">kube-system   kube-controller-manager-k8s-oligarch   1&#x2F;1     Running    0          8m12s</span><br><span class="line">kube-system   kube-flannel-ds-amd64-qc7hw          0&#x2F;1     Init:0&#x2F;1   0          3m39s</span><br><span class="line">kube-system   kube-flannel-ds-amd64-r6wsc          0&#x2F;1     Init:0&#x2F;1   0          4m21s</span><br><span class="line">kube-system   kube-flannel-ds-amd64-s964n          0&#x2F;1     Init:0&#x2F;1   0          3m33s</span><br><span class="line">kube-system   kube-proxy-587kh                     1&#x2F;1     Running    0          3m39s</span><br><span class="line">kube-system   kube-proxy-pnhfw                     1&#x2F;1     Running    0          3m33s</span><br><span class="line">kube-system   kube-proxy-tfz8j                     1&#x2F;1     Running    0          8m16s</span><br><span class="line">kube-system   kube-scheduler-k8s-oligarch            1&#x2F;1     Running    0          8m12s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查看详情:</span><br><span class="line">kubectl describe pods kube-flannel-ds-amd64-qc7h -n kube-system</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">发现在 docker pull 镜像内容:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker pull quay.io&#x2F;coreos&#x2F;flannel:v0.12.0-amd64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mac 机器下载比较快:</span><br><span class="line">docker save -o ~&#x2F;Desktop&#x2F;k8s&#x2F;flannel&#x2F;f-image quay.io&#x2F;coreos&#x2F;flannel:v0.12.0-amd64</span><br><span class="line"></span><br><span class="line">scp ~&#x2F;Desktop&#x2F;k8s&#x2F;flannel&#x2F;f-image root@172.16.182.139:&#x2F;root&#x2F;flannel</span><br><span class="line">scp ~&#x2F;Desktop&#x2F;k8s&#x2F;flannel&#x2F;f-image root@172.16.182.140:&#x2F;root&#x2F;flannel</span><br></pre></td></tr></table></figure></li></ul><h3><span id="zhong-yu-cheng-gong-de-ba-wang-luo-flannel-zhuang-dao-fu-wu-shang">终于成功的把网络flannel装到 服务上</span><a href="#zhong-yu-cheng-gong-de-ba-wang-luo-flannel-zhuang-dao-fu-wu-shang" class="header-anchor"></a></h3><ul><li><p>进行简单的测试 nginx 部署到3个节点上的 k8s 发布:</p></li><li><p>pod 文件内容 nginx-deployment.yaml</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps&#x2F;v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-deployment</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx</span><br><span class="line">spec:</span><br><span class="line">  replicas: 3</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: nginx</span><br><span class="line">        image: nginx:1.7.9</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br></pre></td></tr></table></figure></li><li><p>执行 pod 指令 :  <code>kubectl apply -f nginx-pod.yaml</code></p></li><li><p>service 文件内容 nginx-service.yaml:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-service</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 88</span><br><span class="line">    targetPort: 80</span><br><span class="line">  selector:</span><br><span class="line">    app: nginx</span><br><span class="line">  type: NodePort</span><br></pre></td></tr></table></figure></li><li><p>执行 service 指令 :  <code>kubectl create -f nginx-service.yaml</code>  为了让主机访问 k8s 提供的nginx 服务，我们需要在 nginx-service.yaml 规范 spec 中指定 type 为 NodePort</p></li><li><p>为了让主机访问 k8s 提供的nginx 服务，我们需要在 nginx-service.yaml 规范 spec 中指定 type 为 NodePort</p></li><li><p>查看服务执行的情况:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&gt; kubectl get pod,svc</span><br><span class="line">NAME                                    READY   STATUS    RESTARTS   AGE</span><br><span class="line">pod&#x2F;nginx-deployment-54f57cf6bf-69b29   1&#x2F;1     Running   0          2m29s</span><br><span class="line">pod&#x2F;nginx-deployment-54f57cf6bf-ch6dg   1&#x2F;1     Running   0          2m29s</span><br><span class="line">pod&#x2F;nginx-deployment-54f57cf6bf-lzmkh   1&#x2F;1     Running   0          2m29s</span><br><span class="line"></span><br><span class="line">NAME                    TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE</span><br><span class="line">service&#x2F;kubernetes      ClusterIP   10.1.0.1       &lt;none&gt;        443&#x2F;TCP        57m</span><br><span class="line">service&#x2F;nginx-service   NodePort    10.1.167.218   &lt;none&gt;        88:32342&#x2F;TCP   18s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">+ 查看服务的详情:</span><br><span class="line">&#96;&#96;&#96;text</span><br><span class="line">&gt; kubectl get service&#x2F;nginx-service</span><br><span class="line"></span><br><span class="line">service&#x2F;nginx-service   NodePort    10.1.167.218   &lt;none&gt;        88:32342&#x2F;TCP   18s</span><br></pre></td></tr></table></figure></li><li><p>根据信息,可以访问:  MasterIP:NodePort   –&gt;   172.16.182.130:32342  正常的访问.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">进入 node 节点下进行 </span><br><span class="line">docker logs -f  &lt;id&gt;</span><br><span class="line">打印日志信息 可以正常的负载均衡到3台的 nginx 的机器上</span><br></pre></td></tr></table></figure></li></ul><h2><span id="zong-jie">总结</span><a href="#zong-jie" class="header-anchor"></a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">不需要配置 ssh, 有些文档中写需要配置，但是没必要</span><br><span class="line">部署前一定要对部署的环境变量设置</span><br><span class="line">配置信息尽量脚本化</span><br><span class="line">oligarch 初始化时的参数一定要指定正确并知道其含义</span><br><span class="line">在初始化好 oligarch 节点后，先不要部署网络相关的内容，先将 node 加入集群，并等到 node 的状态为 Ready 后再部署网络相关的组件</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      k8s-kubeadm1.7安装
    
    </summary>
    
    
      <category term="k8s" scheme="https://zuoyoulai.github.io/categories/k8s/"/>
    
    
      <category term="k8s" scheme="https://zuoyoulai.github.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>k8s学习</title>
    <link href="https://zuoyoulai.github.io/2020/03/18/k8s%E5%AD%A6%E4%B9%A0/"/>
    <id>https://zuoyoulai.github.io/2020/03/18/k8s%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-03-18T14:07:23.000Z</published>
    <updated>2020-03-23T15:33:03.501Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="k8s">K8S</span><a href="#k8s" class="header-anchor"></a></h2><h3><span id="zi-liao-can-kao">资料参考</span><a href="#zi-liao-can-kao" class="header-anchor"></a></h3><ul><li><a href="https://www.jianshu.com/p/d0933d6ae162" target="_blank" rel="noopener">https://www.jianshu.com/p/d0933d6ae162</a></li></ul><h3><span id="ji-qun-de-tiao-jian">集群的条件</span><a href="#ji-qun-de-tiao-jian" class="header-anchor"></a></h3><ul><li>集群中所有机器之间网络互通</li><li>可以访问外网，需要拉取镜像</li><li>禁止swap分区</li></ul><h3><span id="mac-ben-di-an-zhuang-xu-ni-ji">Mac 本地安装虚拟机</span><a href="#mac-ben-di-an-zhuang-xu-ni-ji" class="header-anchor"></a></h3><ul><li>配置: 2C4G  50G</li><li>修改网络配置:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt;cd &#x2F;etc&#x2F;sysconfig&#x2F;network-scripts&#x2F;</span><br><span class="line"></span><br><span class="line">&gt; vi ifcfg-eno-33</span><br><span class="line"></span><br><span class="line">设置 :</span><br><span class="line"></span><br><span class="line">ONBOOT&#x3D;yes </span><br><span class="line"></span><br><span class="line">&gt; service network restart</span><br><span class="line"></span><br><span class="line">&gt; ping baidu.com   # 测试虚拟机是否可以进行连外网</span><br><span class="line"></span><br><span class="line">&gt; ip addr  #  查看 ip 地址</span><br></pre></td></tr></table></figure></li></ul><h3><span id="huan-jing-de-zhun-bei">环境的准备</span><a href="#huan-jing-de-zhun-bei" class="header-anchor"></a></h3><ul><li>关闭防火墙：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&gt;  systemctl stop firewalld</span><br><span class="line"></span><br><span class="line">&gt;  systemctl disable firewalld</span><br></pre></td></tr></table></figure><ul><li><p>关闭selinux：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&gt;  sed -i &#39;s&#x2F;enforcing&#x2F;disabled&#x2F;&#39; &#x2F;etc&#x2F;selinux&#x2F;config </span><br><span class="line"></span><br><span class="line">&gt;  setenforce 0</span><br></pre></td></tr></table></figure></li><li><p>关闭swap：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; swapoff -a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; vi &#x2F;etc&#x2F;fstab  </span><br><span class="line">把 swap 那一行进行注释掉  ： # &#x2F;dev&#x2F;mapper&#x2F;centos-swap swap swap default 0</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">+ 添加主机名与IP对应关系（记得设置主机名）：</span><br><span class="line">$ cat &#x2F;etc&#x2F;hosts</span><br><span class="line">192.168.31.60 k8s-oligarch</span><br><span class="line">192.168.31.61 k8s-node1</span><br><span class="line">192.168.31.62 k8s-node2</span><br></pre></td></tr></table></figure><ul><li>将桥接的IPv4流量传递到iptables的链：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&gt; cat &gt; &#x2F;etc&#x2F;sysctl.d&#x2F;k8s.conf &lt;&lt; EOF</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables &#x3D; 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables &#x3D; 1</span><br><span class="line">EOF</span><br><span class="line">  </span><br><span class="line">&gt; sysctl --system</span><br></pre></td></tr></table></figure></li></ul><ul><li>时间同步 :   <code>yum install -y ntpdate</code>    <code>ntpdate ntp.api.bz</code></li></ul><h3><span id="an-zhuang-de-docker-shi-yong-a-li-yun-jing-xiang-ku-lai-jin-xing-an-zhuang">安装的 docker  : 使用阿里云镜像库来进行安装</span><a href="#an-zhuang-de-docker-shi-yong-a-li-yun-jing-xiang-ku-lai-jin-xing-an-zhuang" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 下载工具的安装</span><br><span class="line">&gt; yum install wget</span><br><span class="line"></span><br><span class="line">&gt;  wget https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo -O &#x2F;etc&#x2F;yum.repos.d&#x2F;docker-ce.repo</span><br><span class="line"></span><br><span class="line">&gt;  yum -y install docker-ce-18.06.1.ce-3.el7</span><br><span class="line"></span><br><span class="line">&gt;  systemctl enable docker &amp;&amp; systemctl start docker</span><br><span class="line"></span><br><span class="line"># 更改cgroup driver为systemd,并且为docker添加镜像加速</span><br><span class="line"></span><br><span class="line">cat &gt; &#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver&#x3D;systemd&quot;],</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;c7lrovdh.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; docker version  #  校验 docker 版本</span><br></pre></td></tr></table></figure><h3><span id="tian-jia-a-li-yun-yum-ruan-jian-yuan">添加阿里云YUM软件源</span><a href="#tian-jia-a-li-yun-yum-ruan-jian-yuan" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt; </span><br><span class="line">cat &gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;kubernetes.repo &lt;&lt; EOF</span><br><span class="line">[kubernetes]</span><br><span class="line">name&#x3D;Kubernetes</span><br><span class="line">baseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;repos&#x2F;kubernetes-el7-x86_64</span><br><span class="line">enabled&#x3D;1</span><br><span class="line">gpgcheck&#x3D;0</span><br><span class="line">repo_gpgcheck&#x3D;0</span><br><span class="line">gpgkey&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;yum-key.gpg https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;rpm-package-key.gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3><span id="an-zhuang-kubeadm-kubelet-he-kubectl">安装kubeadm，kubelet和kubectl</span><a href="#an-zhuang-kubeadm-kubelet-he-kubectl" class="header-anchor"></a></h3><ul><li>指定 1.15版本<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; yum install -y kubelet-1.15.0 kubeadm-1.15.0 kubectl-1.15.0</span><br><span class="line"></span><br><span class="line">&gt; systemctl enable kubelet</span><br></pre></td></tr></table></figure></li></ul><h3><span id="bu-shu-k8s-oligarch">部署 k8s oligarch</span><a href="#bu-shu-k8s-oligarch" class="header-anchor"></a></h3><ul><li>oligarch node : 172.16.182.130<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&gt;</span><br><span class="line">kubeadm init \</span><br><span class="line">  --apiserver-advertise-address&#x3D;172.16.182.137 \</span><br><span class="line">  --image-repository registry.aliyuncs.com&#x2F;google_containers \</span><br><span class="line">  --kubernetes-version v1.15.0 \</span><br><span class="line">  --service-cidr&#x3D;10.1.0.0&#x2F;16 \</span><br><span class="line">  --pod-network-cidr&#x3D;10.244.0.0&#x2F;16</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">成功安装之后:</span><br><span class="line"></span><br><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line">    </span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p $HOME&#x2F;.kube</span><br><span class="line">  sudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config</span><br><span class="line">  sudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:</span><br><span class="line">  https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;concepts&#x2F;cluster-administration&#x2F;addons&#x2F;</span><br><span class="line"></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm join 172.16.182.134:6443 --token 7p4yoc.np5kdlji6mtflldc \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:a1f6d5775eaed1f13a1eb654416b0971b9b9d5e112138d2793e4f3ffd5c4d24c</span><br></pre></td></tr></table></figure></li></ul><h3><span id="shi-yong-kubectl-gong-ju">使用kubectl工具</span><a href="#shi-yong-kubectl-gong-ju" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&gt; mkdir -p $HOME&#x2F;.kube</span><br><span class="line"></span><br><span class="line">&gt; sudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config</span><br><span class="line"></span><br><span class="line">&gt; sudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 查看节点内容进行测试 kubectl 是否安装成功</span><br><span class="line"></span><br><span class="line">&gt; kubectl get nodes </span><br><span class="line"></span><br><span class="line"># 显示内容  成功安装</span><br><span class="line"></span><br><span class="line">NAME                    STATUS     ROLES    AGE     VERSION</span><br><span class="line">localhost.localdomain   NotReady   oligarch   4m26s   v1.15.0</span><br></pre></td></tr></table></figure><h3><span id="an-zhuang-pod-wang-luo-cha-jian">安装Pod网络插件</span><a href="#an-zhuang-pod-wang-luo-cha-jian" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&gt; kubectl apply -f https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coreos&#x2F;flannel&#x2F;a70459be0084506e4ec919aa1c114638878db11b&#x2F;Documentation&#x2F;kube-flannel.yml</span><br><span class="line"></span><br><span class="line">执行的会报错.被墙了</span><br><span class="line"></span><br><span class="line">&gt; wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coreos&#x2F;flannel&#x2F;a70459be0084506e4ec919aa1c114638878db11b&#x2F;Documentation&#x2F;kube-flannel.yml</span><br><span class="line"></span><br><span class="line"># 本地就有相应的 kube-flannel.yml 文件, ls 查看</span><br><span class="line"></span><br><span class="line">需要修改配置文件的 image 的地址:</span><br><span class="line"></span><br><span class="line">quay.io&#x2F;coreos&#x2F;flannel:v0.11.0-amd64    &gt;    lizhenliang&#x2F;flannel:v0.11.0-amd64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">scp ~&#x2F;Desktop&#x2F;kube-flannel.yml root@172.16.182.137:&#x2F;root&#x2F;kube-flannel.yml</span><br><span class="line">scp ~&#x2F;Desktop&#x2F;kube-flannel.yml root@172.16.182.136:&#x2F;root&#x2F;kube-flannel.yml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt; docker pull lizhenliang&#x2F;flannel:v0.11.0-amd64</span><br><span class="line"></span><br><span class="line">&gt; kubectl apply -f .&#x2F;kube-flannel.yml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">还有一种方法:</span><br><span class="line"></span><br><span class="line">kubectl apply -f  https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coreos&#x2F;flannel&#x2F;oligarch&#x2F;Documentation&#x2F;kube-flannel.yml</span><br></pre></td></tr></table></figure><h3><span id="zheng-ge-an-zhuang-xia-lai-jiu-you-xiang-ying-de-k8s-an-zhuang-bao-liao-ran-hou-jiu-ke-yi-jin-xing-xu-ni-ji-de-fu-zhi-cao-zuo-rang-qi-ta-de-node-du-you-xiang-ying-de-an-zhuang-bao-yi-yang-de-huan-jing">整个安装下来就有相应的 k8s 安装包了，然后就可以进行虚拟机的复制操作。让其他的 node 都有相应的安装包，一样的环境</span><a href="#zheng-ge-an-zhuang-xia-lai-jiu-you-xiang-ying-de-k8s-an-zhuang-bao-liao-ran-hou-jiu-ke-yi-jin-xing-xu-ni-ji-de-fu-zhi-cao-zuo-rang-qi-ta-de-node-du-you-xiang-ying-de-an-zhuang-bao-yi-yang-de-huan-jing" class="header-anchor"></a></h3><ul><li><p>关机操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; shutdown -h now ：立即关机</span><br></pre></td></tr></table></figure></li><li><p>克隆镜像</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">先关机操作 &gt;  进行设置克隆  &gt;  copy 出 k8s oligarch node  2个节点:</span><br><span class="line">ip 地址:</span><br><span class="line">k8s-node-1 :  172.16.182.131</span><br><span class="line">k8s-node-2 :  172.16.182.132</span><br></pre></td></tr></table></figure></li><li><p>开机重新的初始化 k8s</p></li><li><p>本地已经存在 kubeadm 服务了，需要重启 :  <code>kubeadm reset</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&gt;</span><br><span class="line">kubeadm init \</span><br><span class="line">  --apiserver-advertise-address&#x3D;172.16.182.134 \</span><br><span class="line">  --image-repository registry.aliyuncs.com&#x2F;google_containers \</span><br><span class="line">  --kubernetes-version v1.15.0 \</span><br><span class="line">  --service-cidr&#x3D;10.1.0.0&#x2F;16 \</span><br><span class="line">  --pod-network-cidr&#x3D;10.244.0.0&#x2F;16 \</span><br><span class="line">  --ignore-preflight-errors&#x3D;all</span><br><span class="line">  </span><br><span class="line">再执行:</span><br><span class="line">  mkdir -p $HOME&#x2F;.kube</span><br><span class="line">  sudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config</span><br><span class="line">  sudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br><span class="line">  </span><br><span class="line">执行的结果:</span><br><span class="line"></span><br><span class="line">kubeadm join 172.16.182.134:6443 --token vg18ba.q937acgy9ifamuog \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:356e42541d06ac75084508e3db76a1f7902fa6cb88e5dfa139e1eeb9bc1674a7</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kubeadm join 172.16.182.130:6443 --token 52szaz.t3mr0nmth4e4trmb \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:4341cb5fec285e14780ade60fa1935997fbce44a91baef05c50a5959896aca31 \</span><br><span class="line">    --ignore-preflight-errors&#x3D;all</span><br></pre></td></tr></table></figure></li></ul><h3><span id="huan-shi-you-wen-ti">还是有问题</span><a href="#huan-shi-you-wen-ti" class="header-anchor"></a></h3><ul><li><p>执行 kubectl get nodes</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">The connection to the server localhost:8080 was refused - did you specify the right host or port?</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">将 oligarch 的 admin 文件 copy 到 node 节点上:</span><br><span class="line"></span><br><span class="line">&gt;  scp &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf root@172.16.182.131:&#x2F;etc&#x2F;kubernetes&#x2F;admin.conf</span><br><span class="line">&gt;  scp &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf root@172.16.182.132:&#x2F;etc&#x2F;kubernetes&#x2F;admin.conf</span><br><span class="line">&gt;  scp &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf root@172.16.182.133:&#x2F;etc&#x2F;kubernetes&#x2F;admin.conf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mkdir -p $HOME&#x2F;.kube</span><br><span class="line">sudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config</span><br><span class="line">sudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br><span class="line"></span><br><span class="line">在 node 节点:</span><br><span class="line">echo &quot;export KUBECONFIG&#x3D;&#x2F;etc&#x2F;kubernetes&#x2F;admin.conf&quot; &gt;&gt; ~&#x2F;.bash_profile</span><br><span class="line"></span><br><span class="line">source ~&#x2F;.bash_profile</span><br></pre></td></tr></table></figure></li><li><p>在从节点会报 oligarch 的节点的错误，因为我 oligarch 执行过 kubeadm init 指令导致镜像还有证书信息.故需要执行: <code>kubeadm reset</code> 还有把 swap 关掉  <code>swapoff -a</code></p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">删除文件: rm -rf $HOME&#x2F;.kube</span><br><span class="line"></span><br><span class="line">重启服务: kubeadm reset</span><br><span class="line"></span><br><span class="line">关掉swap : swapoff -a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">iptables -F &amp;&amp; iptables -t nat -F &amp;&amp; iptables -t mangle -F &amp;&amp; iptables -X</span><br></pre></td></tr></table></figure><ul><li>从节点就可以执行 kubeadm join 指令了,查看</li></ul><h3><span id="tian-jia-de-node-jie-dian-de-host">添加的 node 节点的 host</span><a href="#tian-jia-de-node-jie-dian-de-host" class="header-anchor"></a></h3><p>172.16.182.134 k8s-oligarch<br>172.16.182.135 k8s-node1<br>172.16.182.136 k8s-node2<br>172.16.182.137 k8s-node3</p><p>172.16.182.137 k8s-oligarch</p><p>172.16.182.130 k8s-oligarch<br>172.16.182.131 k8s-node1<br>172.16.182.132 k8s-node2<br>172.16.182.133 k8s-node3<br>172.16.182.134 k8s-node4<br>172.16.182.135 k8s-node5</p><h3><span id="chuang-jian-pod-jie-dian-nei-rong">创建 pod 节点内容</span><a href="#chuang-jian-pod-jie-dian-nei-rong" class="header-anchor"></a></h3><ul><li><p>docker pull hub.c.163.com/public/nginx:1.2.1</p></li><li><p>kubectl create deployment nginx-test –image=hub.c.163.com/public/nginx:1.2.1</p></li><li><p>kubectl expose deployment nginx-test –port=80 –type=NodePort</p></li><li><p>kubectl get pod,</p></li></ul><ul><li><p>kubectl create deployment nginx-k –image=hub.c.163.com/public/nginx:1.2.1</p></li><li><p>kubectl expose deployment nginx-k –port=81 –type=NodePort</p></li><li><p>kubectl get pod,svc</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zg8cgy.lljuzh1uyoktnrad</span><br></pre></td></tr></table></figure><h2><span id="fa-xian-pod-yun-xing-de-shi-hou-bao-cuo">发现 pod 运行的时候报错</span><a href="#fa-xian-pod-yun-xing-de-shi-hou-bao-cuo" class="header-anchor"></a></h2><p>[root@localhost kubernetes]# kubectl get pod –namespace=kube-system<br>NAME                          READY   STATUS              RESTARTS   AGE<br>coredns-bccdc95cf-4rwkm       0/1     ContainerCreating   0          13h<br>coredns-bccdc95cf-pzlhl       0/1     ContainerCreating   0          13h<br>kube-flannel-ds-amd64-8fljt   0/1     Error               2          13h<br>kube-flannel-ds-amd64-zfkst   0/1     CrashLoopBackOff    4          60m<br>kube-proxy-gpsd7              1/1     Running             0          13h<br>kube-proxy-lml9w              1/1     Running             0          60m</p><ul><li>查看的 k8s的全部服务的运行的情况 : kubectl get pods –all-namespaces<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# kubectl get pods --all-namespaces</span><br><span class="line">NAMESPACE     NAME                                            READY   STATUS     RESTARTS   AGE</span><br><span class="line">default       nginx-test-79f9c95576-vdm2d                     0&#x2F;1     Pending    0          4m49s</span><br><span class="line">kube-system   coredns-bccdc95cf-dk9qn                         0&#x2F;1     Pending    0          15m</span><br><span class="line">kube-system   coredns-bccdc95cf-wdmf6                         0&#x2F;1     Pending    0          15m</span><br><span class="line">kube-system   etcd-localhost.localdomain                      1&#x2F;1     Running    0          14m</span><br><span class="line">kube-system   kube-apiserver-localhost.localdomain            1&#x2F;1     Running    0          14m</span><br><span class="line">kube-system   kube-controller-manager-localhost.localdomain   1&#x2F;1     Running    0          14m</span><br><span class="line">kube-system   kube-flannel-ds-amd64-blfvw                     0&#x2F;1     Init:0&#x2F;1   0          10m</span><br><span class="line">kube-system   kube-proxy-n7n86                                1&#x2F;1     Running    0          15m</span><br><span class="line">kube-system   kube-scheduler-localhost.localdomain            1&#x2F;1     Running    0          14m</span><br></pre></td></tr></table></figure></li></ul><ul><li>部署的 pod 一直在 pending 中:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# kubectl get pod</span><br><span class="line">NAME                          READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx-test-79f9c95576-vdm2d   0&#x2F;1     Pending   0          6m50s</span><br><span class="line"></span><br><span class="line"># 查看原因详情</span><br><span class="line">[root@localhost ~]# kubectl describe pods nginx-k-64bf97c5c7-9s7wm</span><br><span class="line">Name:           nginx-test-79f9c95576-vdm2d</span><br><span class="line">Namespace:      default</span><br><span class="line">Priority:       0</span><br><span class="line">Node:           &lt;none&gt;</span><br><span class="line">Labels:         app&#x3D;nginx-test</span><br><span class="line">                pod-template-hash&#x3D;79f9c95576</span><br><span class="line">Annotations:    &lt;none&gt;</span><br><span class="line">Status:         Pending</span><br><span class="line">IP:</span><br><span class="line">Controlled By:  ReplicaSet&#x2F;nginx-test-79f9c95576</span><br><span class="line">Containers:</span><br><span class="line">  nginx:</span><br><span class="line">    Image:        hub.c.163.com&#x2F;public&#x2F;nginx:1.2.1</span><br><span class="line">    Port:         &lt;none&gt;</span><br><span class="line">    Host Port:    &lt;none&gt;</span><br><span class="line">    Environment:  &lt;none&gt;</span><br><span class="line">    Mounts:</span><br><span class="line">      &#x2F;var&#x2F;run&#x2F;secrets&#x2F;kubernetes.io&#x2F;serviceaccount from default-token-6g6b8 (ro)</span><br><span class="line">Conditions:</span><br><span class="line">  Type           Status</span><br><span class="line">  PodScheduled   False</span><br><span class="line">Volumes:</span><br><span class="line">  default-token-6g6b8:</span><br><span class="line">    Type:        Secret (a volume populated by a Secret)</span><br><span class="line">    SecretName:  default-token-6g6b8</span><br><span class="line">    Optional:    false</span><br><span class="line">QoS Class:       BestEffort</span><br><span class="line">Node-Selectors:  &lt;none&gt;</span><br><span class="line">Tolerations:     node.kubernetes.io&#x2F;not-ready:NoExecute for 300s</span><br><span class="line">                 node.kubernetes.io&#x2F;unreachable:NoExecute for 300s</span><br><span class="line">Events:</span><br><span class="line">  Type     Reason            Age                 From               Message</span><br><span class="line">  ----     ------            ----                ----               -------</span><br><span class="line">  Warning  FailedScheduling  5s (x9 over 9m13s)  default-scheduler  0&#x2F;1 nodes are available: 1 node(s) had taints that the pod didn&#39;t tolerate.</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">+ 允许 oligarch 节点可以运行:</span><br><span class="line"></span><br><span class="line">NAME                    STATUS     ROLES    AGE   VERSION</span><br><span class="line">localhost.localdomain   NotReady   oligarch   36m   v1.15.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 主节点也可以进行工作而不是负载   没有解决问题</span><br><span class="line">kubectl taint nodes --all node-role.kubernetes.io&#x2F;oligarch-</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">## 查看日志内容</span><br><span class="line">journalctl -f -u kubelet.service</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">错误日志内容:</span><br><span class="line"></span><br><span class="line">3月 19 16:07:11 k8s-oligarch kubelet[4132]: E0319 16:07:11.163577    4132 kuberuntime_manager.go:688] createPodSandbox for pod &quot;coredns-bccdc95cf-wdmf6_kube-system(e9f67903-ef2c-4ee3-b74b-08390a50ca85)&quot; failed: rpc error: code &#x3D; Unknown desc &#x3D; failed to set up sandbox container &quot;2e5707bd73138ed55e6561f650b1fadc52c1fc1f10a16829672306081f2406c7&quot; network for pod &quot;coredns-bccdc95cf-wdmf6&quot;: NetworkPlugin cni failed to set up pod &quot;coredns-bccdc95cf-wdmf6_kube-system&quot; network: open &#x2F;run&#x2F;flannel&#x2F;subnet.env: no such file or directory</span><br><span class="line">3月 19 16:07:11 k8s-oligarch kubelet[4132]: E0319 16:07:11.163627    4132 pod_workers.go:190] Error syncing pod e9f67903-ef2c-4ee3-b74b-08390a50ca85 (&quot;coredns-bccdc95cf-wdmf6_kube-system(e9f67903-ef2c-4ee3-b74b-08390a50ca85)&quot;), skipping: failed to &quot;CreatePodSandbox&quot; for &quot;coredns-bccdc95cf-wdmf6_kube-system(e9f67903-ef2c-4ee3-b74b-08390a50ca85)&quot; with CreatePodSandboxError: &quot;CreatePodSandbox for pod \&quot;coredns-bccdc95cf-wdmf6_kube-system(e9f67903-ef2c-4ee3-b74b-08390a50ca85)\&quot; failed: rpc error: code &#x3D; Unknown desc &#x3D; failed to set up sandbox container \&quot;2e5707bd73138ed55e6561f650b1fadc52c1fc1f10a16829672306081f2406c7\&quot; network for pod \&quot;coredns-bccdc95cf-wdmf6\&quot;: NetworkPlugin cni failed to set up pod \&quot;coredns-bccdc95cf-wdmf6_kube-system\&quot; network: open &#x2F;run&#x2F;flannel&#x2F;subnet.env: no such file or directory&quot;</span><br><span class="line">3月 19 16:07:11 k8s-oligarch kubelet[4132]: E0319 16:07:11.240120    4132 remote_runtime.go:105] RunPodSandbox from runtime service failed: rpc error: code &#x3D; Unknown desc &#x3D; failed to set up sandbox container &quot;767300ea7c8db979280b1a0addea975c05654cdb041eb1f8c2c476cd70fede60&quot; network for pod &quot;nginx-k-64bf97c5c7-9s7wm&quot;: NetworkPlugin cni failed to set up pod &quot;nginx-k-64bf97c5c7-9s7wm_default&quot; network: open &#x2F;run&#x2F;flannel&#x2F;subnet.env: no such file or directory</span><br><span class="line">3月 19 16:07:11 k8s-oligarch kubelet[4132]: E0319 16:07:11.240154    4132 kuberuntime_sandbox.go:68] CreatePodSandbox for pod &quot;nginx-k-64bf97c5c7-9s7wm_default(453a9e1c-2a96-4c24-a7d9-2ea8895c1637)&quot; failed: rpc error: code &#x3D; Unknown desc &#x3D; failed to set up sandbox container &quot;767300ea7c8db979280b1a0addea975c05654cdb041eb1f8c2c476cd70fede60&quot; network for pod &quot;nginx-k-64bf97c5c7-9s7wm&quot;: NetworkPlugin cni failed to set up pod &quot;nginx-k-64bf97c5c7-9s7wm_default&quot; network: open &#x2F;run&#x2F;flannel&#x2F;subnet.env: no such file or directory</span><br><span class="line">3月 19 16:07:11 k8s-oligarch kubelet[4132]: E0319 16:07:11.240172    4132 kuberuntime_manager.go:688] createPodSandbox for pod &quot;nginx-k-64bf97c5c7-9s7wm_default(453a9e1c-2a96-4c24-a7d9-2ea8895c1637)&quot; failed: rpc error: code &#x3D; Unknown desc &#x3D; failed to set up sandbox container &quot;767300ea7c8db979280b1a0addea975c05654cdb041eb1f8c2c476cd70fede60&quot; network for pod &quot;nginx-k-64bf97c5c7-9s7wm&quot;: NetworkPlugin cni failed to set up pod &quot;nginx-k-64bf97c5c7-9s7wm_default&quot; network: open &#x2F;run&#x2F;flannel&#x2F;subnet.env: no such file or directory</span><br><span class="line">3月 19 16:07:11 k8s-oligarch kubelet[4132]: E0319 16:07:11.240207    4132 pod_workers.go:190] Error syncing pod 453a9e1c-2a96-4c24-a7d9-2ea8895c1637 (&quot;nginx-k-64bf97c5c7-9s7wm_default(453a9e1c-2a96-4c24-a7d9-2ea8895c1637)&quot;), skipping: failed to &quot;CreatePodSandbox&quot; for &quot;nginx-k-64bf97c5c7-9s7wm_default(453a9e1c-2a96-4c24-a7d9-2ea8895c1637)&quot; with CreatePodSandboxError: &quot;CreatePodSandbox for pod \&quot;nginx-k-64bf97c5c7-9s7wm_default(453a9e1c-2a96-4c24-a7d9-2ea8895c1637)\&quot; failed: rpc error: code &#x3D; Unknown desc &#x3D; failed to set up sandbox container \&quot;767300ea7c8db979280b1a0addea975c05654cdb041eb1f8c2c476cd70fede60\&quot; network for pod \&quot;nginx-k-64bf97c5c7-9s7wm\&quot;: NetworkPlugin cni failed to set up pod \&quot;nginx-k-64bf97c5c7-9s7wm_default\&quot; network: open &#x2F;run&#x2F;flannel&#x2F;subnet.env: no such file or directory&quot;</span><br><span class="line">3月 19 16:07:11 k8s-oligarch kubelet[4132]: E0319 16:07:11.244832    4132 cni.go:331] Error adding kube-system_coredns-bccdc95cf-dk9qn&#x2F;a3c254c236a377a21243c739164b3678ad43591095fc2bdd80511b54bb3ef735 to network flannel&#x2F;cbr0: open &#x2F;run&#x2F;flannel&#x2F;subnet.env: no such file or directory</span><br><span class="line">3月 19 16:07:11 k8s-oligarch kubelet[4132]: E0319 16:07:11.334985    4132 remote_runtime.go:105] RunPodSandbox from runtime service failed: rpc error: code &#x3D; Unknown desc &#x3D; failed to set up sandbox container &quot;62d3f366a81cb3b7a9ea01311ba45c64723c92e38b1eb450387db5790f5fb89f&quot; network for pod &quot;nginx-test-79f9c95576-vdm2d&quot;: NetworkPlugin cni failed to set up pod &quot;nginx-test-79f9c95576-vdm2d_default&quot; network: open &#x2F;run&#x2F;flannel&#x2F;subnet.env: no such file or directory</span><br><span class="line">3月 19 16:07:11 k8s-oligarch kubelet[4132]: E0319 16:07:11.335069    4132 kuberuntime_sandbox.go:68] CreatePodSandbox for pod &quot;nginx-test-79f9c95576-vdm2d_default(acd00deb-5e92-440f-834e-398348066f7a)&quot; failed: rpc error: code &#x3D; Unknown desc &#x3D; failed to set up sandbox container &quot;62d3f366a81cb3b7a9ea01311ba45c64723c92e38b1eb450387db5790f5fb89f&quot; network for pod &quot;nginx-test-79f9c95576-vdm2d&quot;: NetworkPlugin cni failed to set up pod &quot;nginx-test-79f9c95576-vdm2d_default&quot; network: open &#x2F;run&#x2F;flannel&#x2F;subnet.env: no such file or directory</span><br><span class="line">3月 19 16:07:11 k8s-oligarch kubelet[4132]: E0319 16:07:11.335090    4132 kuberuntime_manager.go:688] createPodSandbox for pod &quot;nginx-test-79f9c95576-vdm2d_default(acd00deb-5e92-440f-834e-398348066f7a)&quot; failed: rpc error: code &#x3D; Unknown desc &#x3D; failed to set up sandbox container &quot;62d3f366a81cb3b7a9ea01311ba45c64723c92e38b1eb450387db5790f5fb89f&quot; network for pod &quot;nginx-test-79f9c95576-vdm2d&quot;: NetworkPlugin cni failed to set up pod &quot;nginx-test-79f9c95576-vdm2d_default&quot; network: open &#x2F;run&#x2F;flannel&#x2F;subnet.env: no such file or directory</span><br><span class="line">3月 19 16:07:11 k8s-oligarch kubelet[4132]: E0319 16:07:11.335140    4132 pod_workers.go:190] Error syncing pod acd00deb-5e92-440f-834e-398348066f7a (&quot;nginx-test-79f9c95576-vdm2d_default(acd00deb-5e92-440f-834e-398348066f7a)&quot;), skipping: failed to &quot;CreatePodSandbox&quot; for &quot;nginx-test-79f9c95576-vdm2d_default(acd00deb-5e92-440f-834e-398348066f7a)&quot; with CreatePodSandboxError: &quot;CreatePodSandbox for pod \&quot;nginx-test-79f9c95576-vdm2d_default(acd00deb-5e92-440f-834e-398348066f7a)\&quot; failed: rpc error: code &#x3D; Unknown desc &#x3D; failed to set up sandbox container \&quot;62d3f366a81cb3b7a9ea01311ba45c64723c92e38b1eb450387db5790f5fb89f\&quot; network for pod \&quot;nginx-test-79f9c95576-vdm2d\&quot;: NetworkPlugin cni failed to set up pod \&quot;nginx-test-79f9c95576-vdm2d_default\&quot; network: open &#x2F;run&#x2F;flannel&#x2F;subnet.env: no such file or directory&quot;</span><br><span class="line">3月 19 16:07:11 k8s-oligarch kubelet[4132]: E0319 16:07:11.391284    4132 remote_runtime.go:105] RunPodSandbox from runtime service failed: rpc error: code &#x3D; Unknown desc &#x3D; failed to set up sandbox container &quot;a3c254c236a377a21243c739164b3678ad43591095fc2bdd80511b54bb3ef735&quot; network for pod &quot;coredns-bccdc95cf-dk9qn&quot;: NetworkPlugin cni failed to set up pod &quot;coredns-bccdc95cf-dk9qn_kube-system&quot; network: open &#x2F;run&#x2F;flannel&#x2F;subnet.env: no such file or directory</span><br><span class="line">3月 19 16:07:11 k8s-oligarch kubelet[4132]: E0319 16:07:11.391328    4132 kuberuntime_sandbox.go:68] CreatePodSandbox for pod &quot;coredns-bccdc95cf-dk9qn_kube-system(533e9a3e-ae7f-4bff-a85e-8dc2b884462e)&quot; failed: rpc error: code &#x3D; Unknown desc &#x3D; failed to set up sandbox container &quot;a3c254c236a377a21243c739164b3678ad43591095fc2bdd80511b54bb3ef735&quot; network for pod &quot;coredns-bccdc95cf-dk9qn&quot;: NetworkPlugin cni failed to set up pod &quot;coredns-bccdc95cf-dk9qn_kube-system&quot; network: open &#x2F;run&#x2F;flannel&#x2F;subnet.env: no such file or directory</span><br><span class="line">3月 19 16:07:11 k8s-oligarch kubelet[4132]: E0319 16:07:11.391346    4132 kuberuntime_manager.go:688] createPodSandbox for pod &quot;coredns-bccdc95cf-dk9qn_kube-system(533e9a3e-ae7f-4bff-a85e-8dc2b884462e)&quot; failed: rpc error: code &#x3D; Unknown desc &#x3D; failed to set up sandbox container &quot;a3c254c236a377a21243c739164b3678ad43591095fc2bdd80511b54bb3ef735&quot; network for pod &quot;coredns-bccdc95cf-dk9qn&quot;: NetworkPlugin cni failed to set up pod &quot;coredns-bccdc95cf-dk9qn_kube-system&quot; network: open &#x2F;run&#x2F;flannel&#x2F;subnet.env: no such file or directory</span><br><span class="line">3月 19 16:07:11 k8s-oligarch kubelet[4132]: E0319 16:07:11.391392    4132 pod_workers.go:190] Error syncing pod 533e9a3e-ae7f-4bff-a85e-8dc2b884462e (&quot;coredns-bccdc95cf-dk9qn_kube-system(533e9a3e-ae7f-4bff-a85e-8dc2b884462e)&quot;), skipping: failed to &quot;CreatePodSandbox&quot; for &quot;coredns-bccdc95cf-dk9qn_kube-system(533e9a3e-ae7f-4bff-a85e-8dc2b884462e)&quot; with CreatePodSandboxError: &quot;CreatePodSandbox for pod \&quot;coredns-bccdc95cf-dk9qn_kube-system(533e9a3e-ae7f-4bff-a85e-8dc2b884462e)\&quot; failed: rpc error: code &#x3D; Unknown desc &#x3D; failed to set up sandbox container \&quot;a3c254c236a377a21243c739164b3678ad43591095fc2bdd80511b54bb3ef735\&quot; network for pod \&quot;coredns-bccdc95cf-dk9qn\&quot;: NetworkPlugin cni failed to set up pod \&quot;coredns-bccdc95cf-dk9qn_kube-system\&quot; network: open &#x2F;run&#x2F;flannel&#x2F;subnet.env: no such file or directory&quot;</span><br></pre></td></tr></table></figure></li></ul><h3><span id="37-ji-qi-de-zai-ci-chang-shi">37机器的再次尝试</span><a href="#37-ji-qi-de-zai-ci-chang-shi" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">iptables -F &amp;&amp; iptables -t nat -F &amp;&amp; iptables -t mangle -F &amp;&amp; iptables -X</span><br><span class="line"></span><br><span class="line">rm -rf $HOME&#x2F;.kube</span><br><span class="line"></span><br><span class="line">kubeadm reset &amp;&amp; \</span><br><span class="line">kubeadm init \</span><br><span class="line">  --apiserver-advertise-address&#x3D;172.16.182.137 \</span><br><span class="line">  --image-repository registry.aliyuncs.com&#x2F;google_containers \</span><br><span class="line">  --kubernetes-version v1.15.0 \</span><br><span class="line">  --service-cidr&#x3D;10.1.0.0&#x2F;16 \</span><br><span class="line">  --pod-network-cidr&#x3D;10.244.0.0&#x2F;16 \</span><br><span class="line">  --ignore-preflight-errors&#x3D;all</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p $HOME&#x2F;.kube</span><br><span class="line">  sudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config</span><br><span class="line">  sudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:</span><br><span class="line">  https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;concepts&#x2F;cluster-administration&#x2F;addons&#x2F;</span><br><span class="line"></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kubeadm join 172.16.182.137:6443 --token 01ew9e.ejtqp3kd9gn41mq8 \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:0e1d4e69f388bcfd7c8104baa213fd1e1cc4cb38f41a4211d26b655a8990fb83</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">export KUBECONFIG&#x3D;&#x2F;etc&#x2F;kubernetes&#x2F;admin.conf</span><br><span class="line">  </span><br><span class="line">scp flannel 文件</span><br><span class="line"></span><br><span class="line">kubectl apply -f .&#x2F;kube-flannel.yml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@common ~]# kubectl get pods --all-namespaces</span><br><span class="line">NAMESPACE     NAME                             READY   STATUS                  RESTARTS   AGE</span><br><span class="line">kube-system   coredns-bccdc95cf-s2jw7          0&#x2F;1     Pending                 0          9m16s</span><br><span class="line">kube-system   coredns-bccdc95cf-xqksb          0&#x2F;1     Pending                 0          9m16s</span><br><span class="line">kube-system   etcd-common                      1&#x2F;1     Running                 0          9m34s</span><br><span class="line">kube-system   kube-apiserver-common            1&#x2F;1     Running                 0          9m34s</span><br><span class="line">kube-system   kube-controller-manager-common   1&#x2F;1     Running                 0          9m35s</span><br><span class="line">kube-system   kube-flannel-ds-amd64-pjmcf      0&#x2F;1     Init:ImagePullBackOff   0          6m48s</span><br><span class="line">kube-system   kube-proxy-8zvkx                 1&#x2F;1     Running                 0          9m17s</span><br><span class="line">kube-system   kube-scheduler-common            1&#x2F;1     Running                 0          9m34s</span><br><span class="line"></span><br><span class="line">查看错误信息:</span><br><span class="line"></span><br><span class="line">kubectl -n kube-system logs kube-flannel-ds-amd64-pjmcf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[root@common ~]# kubectl -n kube-system logs kube-flannel-ds-amd64-pjmcf</span><br><span class="line">Error from server (BadRequest): container &quot;kube-flannel&quot; in pod &quot;kube-flannel-ds-amd64-pjmcf&quot; is waiting to start: PodInitializing</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kubectl describe -n kube-system pod&#x2F;coredns-bccdc95cf-s2jw7</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kubectl taint nodes --all node-role.kubernetes.io&#x2F;oligarch-</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kubectl apply -f https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coreos&#x2F;flannel&#x2F;oligarch&#x2F;Documentation&#x2F;k8s-manifests&#x2F;kube-flannel-legacy.yml</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p $HOME&#x2F;.kube</span><br><span class="line">  sudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config</span><br><span class="line">  sudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:</span><br><span class="line">  https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;concepts&#x2F;cluster-administration&#x2F;addons&#x2F;</span><br><span class="line"></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm join 172.16.182.137:6443 --token 3a45vi.tnn6ssxhrt92f3zn \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:72d88308670db12e00ff425698ebcdb3ce49810b18cc7e906fcb845cae543072</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">+ docker pull hub.c.163.com&#x2F;public&#x2F;nginx:1.2.1</span><br><span class="line"></span><br><span class="line">+ kubectl create deployment nginx-test --image&#x3D;hub.c.163.com&#x2F;public&#x2F;nginx:1.2.1</span><br><span class="line"></span><br><span class="line">+ kubectl expose deployment nginx-test --port&#x3D;80 --type&#x3D;NodePort</span><br><span class="line"></span><br><span class="line">+ kubectl get pod,svc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">删除某个 pod:</span><br><span class="line"></span><br><span class="line">kubectl delete pod kube-flannel-ds-amd64-4gb49 -n kube-system</span><br><span class="line"></span><br><span class="line">kubectl delete pod coredns-5df4c9fcf6-thd9m -n kube-system</span><br><span class="line">kubectl delete pod coredns-bccdc95cf-mcrst7 -n kube-system</span><br><span class="line">kubectl delete pod coredns-bccdc95cf-xqksb -n kube-system</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kubectl get pods --all-namespaces</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">default       nginx-test-79f9c95576-6f4zz      0&#x2F;1     Pending            0          18m</span><br><span class="line">kube-system   coredns-5df4c9fcf6-thd9m         0&#x2F;1     Pending            0          43m</span><br><span class="line">kube-system   coredns-bccdc95cf-mcrst          0&#x2F;1     Pending            0          21m</span><br><span class="line">kube-system   coredns-bccdc95cf-xqksb          0&#x2F;1     Pending            0          66m</span><br><span class="line">kube-system   etcd-common                      1&#x2F;1     Running            0          66m</span><br><span class="line">kube-system   kube-apiserver-common            1&#x2F;1     Running            0          66m</span><br><span class="line">kube-system   kube-controller-manager-common   1&#x2F;1     Running            0          22m</span><br><span class="line">kube-system   kube-flannel-ds-amd64-pjmcf      0&#x2F;1     CrashLoopBackOff   8          64m</span><br><span class="line">kube-system   kube-proxy-8zvkx                 1&#x2F;1     Running            0          66m</span><br><span class="line">kube-system   kube-scheduler-common            1&#x2F;1     Running            0          66m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查看日志内容</span><br><span class="line">kubectl logs kube-flannel-ds-amd64-4gb49 -n kube-system</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">I0319 10:36:28.198574       1 main.go:514] Determining IP address of default interface</span><br><span class="line">I0319 10:36:28.199846       1 main.go:527] Using interface with name ens33 and address 172.16.182.137</span><br><span class="line">I0319 10:36:28.199863       1 main.go:544] Defaulting external address to interface address (172.16.182.137)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker ps | grep flanneld</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">docker logs e79ca7012968</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">I0319 10:40:05.096184       1 main.go:514] Determining IP address of default interface</span><br><span class="line">I0319 10:40:05.097347       1 main.go:527] Using interface with name ens33 and address 172.16.182.137</span><br><span class="line">I0319 10:40:05.097444       1 main.go:544] Defaulting external address to interface address (172.16.182.137)</span><br><span class="line">E0319 10:40:35.301107       1 main.go:241] Failed to create SubnetManager: error retrieving pod spec for &#39;kube-system&#x2F;kube-flannel-ds-amd64-rmxz2&#39;: Get https:&#x2F;&#x2F;10.1.0.1:443&#x2F;api&#x2F;v1&#x2F;namespaces&#x2F;kube-system&#x2F;pods&#x2F;kube-flannel-ds-amd64-rmxz2: dial tcp 10.1.0.1:443: i&#x2F;o timeout</span><br></pre></td></tr></table></figure><h3><span id="zai-lai-yi-ci-de-chang-shi-cao-zuo">再来一次的尝试操作</span><a href="#zai-lai-yi-ci-de-chang-shi-cao-zuo" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">iptables -F &amp;&amp; iptables -t nat -F &amp;&amp; iptables -t mangle -F &amp;&amp; iptables -X</span><br><span class="line"></span><br><span class="line">rm -rf $HOME&#x2F;.kube</span><br><span class="line"></span><br><span class="line">kubeadm reset </span><br><span class="line"></span><br><span class="line">kubeadm init \</span><br><span class="line">  --apiserver-advertise-address&#x3D;172.16.182.137 \</span><br><span class="line">  --image-repository registry.aliyuncs.com&#x2F;google_containers \</span><br><span class="line">  --kubernetes-version v1.15.0 \</span><br><span class="line">  --service-cidr&#x3D;10.1.0.0&#x2F;16 \</span><br><span class="line">  --pod-network-cidr&#x3D;10.244.0.0&#x2F;16 \</span><br><span class="line">  --ignore-preflight-errors&#x3D;all</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">## 主要是添加flannel网络</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  mkdir -p $HOME&#x2F;.kube</span><br><span class="line">  sudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config</span><br><span class="line">  sudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run &quot;kubectl apply -f [podnetwork].yaml&quot; with one of the options listed at:</span><br><span class="line">  https:&#x2F;&#x2F;kubernetes.io&#x2F;docs&#x2F;concepts&#x2F;cluster-administration&#x2F;addons&#x2F;</span><br><span class="line"></span><br><span class="line">Then you can join any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm join 172.16.182.137:6443 --token 5ckarf.hnhi2cgm2zi7w9aa \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:f50feb41918e489c6b75b9dabc49d2039f870f4a995a478d9928860b5d2313f8</span><br><span class="line"></span><br><span class="line">kubectl apply -f  https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;coreos&#x2F;flannel&#x2F;a70459be0084506e4ec919aa1c114638878db11b&#x2F;Documentation&#x2F;kube-flannel.yml</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">查看详情:</span><br><span class="line">kubectl describe pods kube-flannel-ds-amd64-rmxz2 -n kube-system</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kubectl delete pod kube-flannel-ds-amd64-rmxz29 -n kube-system</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      k8s学习初窥
    
    </summary>
    
    
      <category term="k8s" scheme="https://zuoyoulai.github.io/categories/k8s/"/>
    
    
      <category term="k8s" scheme="https://zuoyoulai.github.io/tags/k8s/"/>
    
  </entry>
  
  <entry>
    <title>mac操作虚拟机</title>
    <link href="https://zuoyoulai.github.io/2020/03/16/mac%E6%93%8D%E4%BD%9C%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    <id>https://zuoyoulai.github.io/2020/03/16/mac%E6%93%8D%E4%BD%9C%E8%99%9A%E6%8B%9F%E6%9C%BA/</id>
    <published>2020-03-15T16:22:09.000Z</published>
    <updated>2020-03-20T05:01:23.073Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="an-zhuang-vmvare-funshion">安装 Vmvare Funshion</span><a href="#an-zhuang-vmvare-funshion" class="header-anchor"></a></h3><h3><span id="she-zhi-xu-ni-ji-de-nei-cun-yu-cun-chu">设置虚拟机的内存与存储</span><a href="#she-zhi-xu-ni-ji-de-nei-cun-yu-cun-chu" class="header-anchor"></a></h3><ul><li>进入控制台输入立即关机的操作: shutdown -h now</li></ul><h3><span id="an-zhuang-xiang-ying-de-jing-xiang">安装相应的镜像</span><a href="#an-zhuang-xiang-ying-de-jing-xiang" class="header-anchor"></a></h3><ul><li>查看的 ip 地址的设置: <a href="https://www.cnblogs.com/mmx8861/p/9217445.html" target="_blank" rel="noopener">https://www.cnblogs.com/mmx8861/p/9217445.html</a></li></ul><h3><span id="ssh-yu-ben-di-lian-jie">ssh与本地连接</span><a href="#ssh-yu-ben-di-lian-jie" class="header-anchor"></a></h3><h2><span id="mac-chong-xin-an-zhuang-liao-xu-ni-ji-xu-yao-geng-xin-know-host-wen-jian">mac 重新安装了虚拟机 需要更新 know_host 文件</span><a href="#mac-chong-xin-an-zhuang-liao-xu-ni-ji-xu-yao-geng-xin-know-host-wen-jian" class="header-anchor"></a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -R 172.16.182.130</span><br><span class="line">ssh-keygen -R 172.16.182.131</span><br><span class="line">ssh-keygen -R 172.16.182.132</span><br><span class="line">ssh-keygen -R 172.16.182.139</span><br><span class="line">ssh-keygen -R 172.16.182.140</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3&gt;&lt;span id=&quot;an-zhuang-vmvare-funshion&quot;&gt;安装 Vmvare Funshion&lt;/span&gt;&lt;a href=&quot;#an-zhuang-vmvare-funshion&quot; class=&quot;header-anchor&quot;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;h3&gt;&lt;s
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>资源下载</title>
    <link href="https://zuoyoulai.github.io/2020/03/06/%E8%B5%84%E6%BA%90%E5%9C%A8%E7%BA%BF%E4%B8%8E%E4%B8%8B%E8%BD%BD/"/>
    <id>https://zuoyoulai.github.io/2020/03/06/%E8%B5%84%E6%BA%90%E5%9C%A8%E7%BA%BF%E4%B8%8E%E4%B8%8B%E8%BD%BD/</id>
    <published>2020-03-06T05:50:59.000Z</published>
    <updated>2020-03-18T08:35:12.436Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="tv-zi-yuan">Tv资源</span><a href="#tv-zi-yuan" class="header-anchor"></a></h3><ul><li>宅腐资源站 :  <a href="http://www.zhaifu.tv/" target="_blank" rel="noopener">http://www.zhaifu.tv/</a></li><li>fix 字幕组 : <a href="http://www.zimuxia.cn/" target="_blank" rel="noopener">http://www.zimuxia.cn/</a></li></ul><h3><span id="dian-ying-dian-shi-ju-xia-zai-zai-xian">电影电视剧下载在线</span><a href="#dian-ying-dian-shi-ju-xia-zai-zai-xian" class="header-anchor"></a></h3><ul><li>j8电影   :  <a href="https://www.j8dy.com/" target="_blank" rel="noopener">https://www.j8dy.com/</a></li><li>迅播动漫 - 动漫类 :  <a href="https://dm.xbdm.net/" target="_blank" rel="noopener">https://dm.xbdm.net/</a></li></ul>]]></content>
    
    <summary type="html">
    
      资源下载
    
    </summary>
    
    
      <category term="资源下载" scheme="https://zuoyoulai.github.io/categories/%E8%B5%84%E6%BA%90%E4%B8%8B%E8%BD%BD/"/>
    
    
      <category term="资源下载" scheme="https://zuoyoulai.github.io/tags/%E8%B5%84%E6%BA%90%E4%B8%8B%E8%BD%BD/"/>
    
      <category term="百度云" scheme="https://zuoyoulai.github.io/tags/%E7%99%BE%E5%BA%A6%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>es-head安装</title>
    <link href="https://zuoyoulai.github.io/2020/02/03/es-head%E5%AE%89%E8%A3%85/"/>
    <id>https://zuoyoulai.github.io/2020/02/03/es-head%E5%AE%89%E8%A3%85/</id>
    <published>2020-02-03T15:24:04.000Z</published>
    <updated>2020-02-13T13:37:38.712Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="es-head-an-zhuang">Es-Head 安装</span><a href="#es-head-an-zhuang" class="header-anchor"></a></h2><h3><span id="xiu-gai-es-de-pei-zhi-wen-jian">修改 Es 的配置文件</span><a href="#xiu-gai-es-de-pei-zhi-wen-jian" class="header-anchor"></a></h3><ul><li>主要为 Es 可以跨域请求操作,修改 Es 的配置文件: es.yml</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">cluster.name: &quot;docker-cluster&quot;</span><br><span class="line">network.host: 0.0.0.0</span><br><span class="line"></span><br><span class="line">discovery.zen.minimum_oligarch_nodes: 1</span><br><span class="line"></span><br><span class="line">#查看 head 的日志内容</span><br><span class="line">path.logs: &#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;logs</span><br><span class="line">http.cors.enabled: true</span><br><span class="line">http.cors.allow-origin: &quot;*&quot;</span><br><span class="line">xpack.security.audit.enabled: true</span><br></pre></td></tr></table></figure><h3><span id="docker-compose-wen-jian-an-zhuang-head-cha-jian">docker-compose 文件安装 head 插件</span><a href="#docker-compose-wen-jian-an-zhuang-head-cha-jian" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">version: &#39;2&#39;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line"></span><br><span class="line">  elasticsearch:</span><br><span class="line">    image: &quot;elasticsearch:$&#123;ELK_VERSION&#125;&quot;</span><br><span class="line">    container_name: elasticsearch</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;9200:9200&quot;</span><br><span class="line">      - &quot;9300:9300&quot;</span><br><span class="line">    environment:</span><br><span class="line">      ES_JAVA_OPTS: &quot;-Xmx1024m -Xms1024m&quot;</span><br><span class="line">    #command: [&quot;bash&quot;, &quot;-c&quot;, &quot;echo &#39;discovery.type: single-node&#39;&gt;&gt;&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;config&#x2F;elasticsearch.yml; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-entrypoint.sh eswrapper&quot;]</span><br><span class="line">    command: [&quot;bash&quot;, &quot;-c&quot;, &quot;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-entrypoint.sh eswrapper&quot;]</span><br><span class="line">    volumes:</span><br><span class="line">      - .&#x2F;es-plugin&#x2F;ik:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;plugins&#x2F;ik</span><br><span class="line">      - .&#x2F;node&#x2F;oligarch&#x2F;data:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;data:rw</span><br><span class="line">      - .&#x2F;node&#x2F;oligarch&#x2F;config&#x2F;es.yml:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;config&#x2F;elasticsearch.yml</span><br><span class="line">      - .&#x2F;node&#x2F;oligarch&#x2F;logs:&#x2F;user&#x2F;share&#x2F;elasticsearch&#x2F;logs:rw</span><br><span class="line">    networks:</span><br><span class="line">      - elk</span><br><span class="line"></span><br><span class="line">  logstash:</span><br><span class="line">    image: &quot;logstash:$&#123;ELK_VERSION&#125;&quot;</span><br><span class="line">    container_name: logstash</span><br><span class="line">    volumes:</span><br><span class="line">      - .&#x2F;logstash&#x2F;pipeline:&#x2F;usr&#x2F;share&#x2F;logstash&#x2F;pipeline:ro</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;5000:5000&quot;</span><br><span class="line">    environment:</span><br><span class="line">      LS_JAVA_OPTS: &quot;-Xmx256m -Xms256m&quot;</span><br><span class="line">    depends_on:</span><br><span class="line">      - elasticsearch</span><br><span class="line">    command: [&quot;bash&quot;, &quot;-c&quot;, &quot;echo &#39;path.config: &#x2F;usr&#x2F;share&#x2F;logstash&#x2F;pipeline&#39;&gt;&gt;&#x2F;usr&#x2F;share&#x2F;logstash&#x2F;config&#x2F;logstash.yml; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-entrypoint&quot;]</span><br><span class="line">    networks:</span><br><span class="line">      - elk</span><br><span class="line"></span><br><span class="line">  kibana:</span><br><span class="line">    image: &quot;kibana:$&#123;ELK_VERSION&#125;&quot;</span><br><span class="line">    container_name: kibana</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;5601:5601&quot;</span><br><span class="line">    depends_on:</span><br><span class="line">      - elasticsearch</span><br><span class="line">    networks:</span><br><span class="line">      - elk</span><br><span class="line"></span><br><span class="line">  es-head:</span><br><span class="line">    image: tobias74&#x2F;elasticsearch-head:6</span><br><span class="line">    container_name: es-head</span><br><span class="line">    networks:</span><br><span class="line">      - elk</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;9100:9100&quot;    </span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  elk:</span><br><span class="line">    driver: bridge</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      es-head安装
    
    </summary>
    
    
      <category term="es" scheme="https://zuoyoulai.github.io/categories/es/"/>
    
    
      <category term="es" scheme="https://zuoyoulai.github.io/tags/es/"/>
    
  </entry>
  
  <entry>
    <title>es性能优化篇</title>
    <link href="https://zuoyoulai.github.io/2020/02/03/es%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E7%AF%87/"/>
    <id>https://zuoyoulai.github.io/2020/02/03/es%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E7%AF%87/</id>
    <published>2020-02-03T15:24:04.000Z</published>
    <updated>2020-02-03T15:56:59.960Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="es-xing-neng-you-hua-pian">es性能优化篇</span><a href="#es-xing-neng-you-hua-pian" class="header-anchor"></a></h2><div class="toc"><!-- toc --><ul><li><a href="#suo-yin-fang-mian-de-you-hua">索引方面的优化</a></li><li><a href="#fu-wu-qi-fang-mian-de-you-hua">服务器方面的优化</a></li></ul><!-- tocstop --></div><ul><li><p>文章的参考来自: <a href="https://blog.csdn.net/u014646662/article/details/99293604" target="_blank" rel="noopener">https://blog.csdn.net/u014646662/article/details/99293604</a></p></li><li><p>优化的层面 : 索引方面  +  服务器层面</p></li></ul><h3><span id="suo-yin-fang-mian-de-you-hua">索引方面的优化</span><a href="#suo-yin-fang-mian-de-you-hua" class="header-anchor"></a></h3><h4><span id="zeng-jia-refresh-shi-jian-jian-ge">增加 Refresh 时间间隔</span><a href="#zeng-jia-refresh-shi-jian-jian-ge" class="header-anchor"></a></h4><ol><li><p>Elasticsearch 在写入数据时候，采用延迟写入的策略，即数据先写到内存中，当超过默认 1 秒</p></li><li><p>延长 refresh 时间间隔，可以有效的减少 segment 合并压力，提供索引速度。在做全链路跟踪的过程中，我们就将 index.refresh_interval 设置为 30s，减少 refresh 次数</p></li><li><p>在进行全量索引时，可以将 refresh 次数临时关闭，即 index.refresh_interval 设置为 -1，数据导入成功后再打开到正常模式，比如 30s</p></li><li><p>修改主配置文件 elasticsearch.yml 或者 Rest API 都可以对 index.refresh_interval 进行修改，增大该属性可以提升写入吞吐</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">PUT  &#x2F;_template&#x2F;&#123;TEMPLATE_NAME&#125;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;template&quot;:&quot;&#123;INDEX_PATTERN&#125;&quot;,</span><br><span class="line">  &quot;settings&quot; : &#123;</span><br><span class="line">    &quot;index.refresh_interval&quot; : &quot;30s&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">PUT &#123;INDEX_PAATERN&#125;&#x2F;_settings</span><br><span class="line">&#123;</span><br><span class="line">    &quot;index.refresh_interval&quot; : &quot;30s&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4><span id="jian-shao-fu-ben-shu-liang">减少副本数量</span><a href="#jian-shao-fu-ben-shu-liang" class="header-anchor"></a></h4><ul><li><p>Elasticsearch 默认副本数量为 3 个（7.x默认一个分片、一个副本），虽然这样会提高集群的可用性，增加搜索的并发数，但是同时也会影响写入索引的效率</p></li><li><p>在索引过程中，需要把更新的文档发到副本节点上，等副本节点生效后在进行返回结束。 使用 Elasticsearch 做业务搜索的时候，建议副本数目还是设置为 3 个，但是像内部 ELK 日志系统、分布式跟踪系统中，完全可以将副本数目设置为 1 个</p></li><li><p>在数据导入时，或是reindex的时候，可以将副本数改为0，等操作完毕后，在恢复事先定义的数目</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;settings&quot;: &#123;</span><br><span class="line">    &quot;number_of_replicas&quot;:0 </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4><span id="kai-qi-yi-bu-shua-xie">开启异步刷写</span><a href="#kai-qi-yi-bu-shua-xie" class="header-anchor"></a></h4><ul><li>如果允许数据丢失，可以对特定 index 开启异步刷写：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">PUT  &#x2F;_template&#x2F;&#123;TEMPLATE_NAME&#125;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;template&quot;:&quot;&#123;INDEX_PATTERN&#125;&quot;,</span><br><span class="line">  &quot;settings&quot; : &#123;</span><br><span class="line">    &quot;index.translog.durability&quot;: &quot;async&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">PUT  &#123;INDEX_PAATERN&#125;&#x2F;_settings</span><br><span class="line">&#123;</span><br><span class="line">  &quot;index.translog.durability&quot;: &quot;async&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4><span id="kai-qi-man-cha-xun-ri-zhi">开启慢查询日志</span><a href="#kai-qi-man-cha-xun-ri-zhi" class="header-anchor"></a></h4><ul><li>不论是数据库还是搜索引擎，对于问题的排查，开启慢查询日志是十分必要的，ES 开启慢查询的方式有多种，但是最常用的是调用模板 API 进行全局设置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">PUT  &#x2F;_template&#x2F;&#123;TEMPLATE_NAME&#125;</span><br><span class="line">&#123;</span><br><span class="line"> </span><br><span class="line">  &quot;template&quot;:&quot;&#123;INDEX_PATTERN&#125;&quot;,</span><br><span class="line">  &quot;settings&quot; : &#123;</span><br><span class="line">    &quot;index.indexing.slowlog.level&quot;: &quot;INFO&quot;,</span><br><span class="line">    &quot;index.indexing.slowlog.threshold.index.warn&quot;: &quot;10s&quot;,</span><br><span class="line">    &quot;index.indexing.slowlog.threshold.index.info&quot;: &quot;5s&quot;,</span><br><span class="line">    &quot;index.indexing.slowlog.threshold.index.debug&quot;: &quot;2s&quot;,</span><br><span class="line">    &quot;index.indexing.slowlog.threshold.index.trace&quot;: &quot;500ms&quot;,</span><br><span class="line">    &quot;index.indexing.slowlog.source&quot;: &quot;1000&quot;,</span><br><span class="line">    &quot;index.search.slowlog.level&quot;: &quot;INFO&quot;,</span><br><span class="line">    &quot;index.search.slowlog.threshold.query.warn&quot;: &quot;10s&quot;,</span><br><span class="line">    &quot;index.search.slowlog.threshold.query.info&quot;: &quot;5s&quot;,</span><br><span class="line">    &quot;index.search.slowlog.threshold.query.debug&quot;: &quot;2s&quot;,</span><br><span class="line">    &quot;index.search.slowlog.threshold.query.trace&quot;: &quot;500ms&quot;,</span><br><span class="line">    &quot;index.search.slowlog.threshold.fetch.warn&quot;: &quot;1s&quot;,</span><br><span class="line">    &quot;index.search.slowlog.threshold.fetch.info&quot;: &quot;800ms&quot;,</span><br><span class="line">    &quot;index.search.slowlog.threshold.fetch.debug&quot;: &quot;500ms&quot;,</span><br><span class="line">    &quot;index.search.slowlog.threshold.fetch.trace&quot;: &quot;200ms&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;version&quot;  : 1</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">PUT &#123;INDEX_PAATERN&#125;&#x2F;_settings</span><br><span class="line">&#123;</span><br><span class="line">    &quot;index.indexing.slowlog.level&quot;: &quot;INFO&quot;,</span><br><span class="line">    &quot;index.indexing.slowlog.threshold.index.warn&quot;: &quot;10s&quot;,</span><br><span class="line">    &quot;index.indexing.slowlog.threshold.index.info&quot;: &quot;5s&quot;,</span><br><span class="line">    &quot;index.indexing.slowlog.threshold.index.debug&quot;: &quot;2s&quot;,</span><br><span class="line">    &quot;index.indexing.slowlog.threshold.index.trace&quot;: &quot;500ms&quot;,</span><br><span class="line">    &quot;index.indexing.slowlog.source&quot;: &quot;1000&quot;,</span><br><span class="line">    &quot;index.search.slowlog.level&quot;: &quot;INFO&quot;,</span><br><span class="line">    &quot;index.search.slowlog.threshold.query.warn&quot;: &quot;10s&quot;,</span><br><span class="line">    &quot;index.search.slowlog.threshold.query.info&quot;: &quot;5s&quot;,</span><br><span class="line">    &quot;index.search.slowlog.threshold.query.debug&quot;: &quot;2s&quot;,</span><br><span class="line">    &quot;index.search.slowlog.threshold.query.trace&quot;: &quot;500ms&quot;,</span><br><span class="line">    &quot;index.search.slowlog.threshold.fetch.warn&quot;: &quot;1s&quot;,</span><br><span class="line">    &quot;index.search.slowlog.threshold.fetch.info&quot;: &quot;800ms&quot;,</span><br><span class="line">    &quot;index.search.slowlog.threshold.fetch.debug&quot;: &quot;500ms&quot;,</span><br><span class="line">    &quot;index.search.slowlog.threshold.fetch.trace&quot;: &quot;200ms&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">这样，在日志目录下的慢查询日志就会有输出记录必要的信息了:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#123;CLUSTER_NAME&#125;_index_indexing_slowlog.log</span><br><span class="line">&#123;CLUSTER_NAME&#125;_index_search_slowlog.log</span><br></pre></td></tr></table></figure><h3><span id="fu-wu-qi-fang-mian-de-you-hua">服务器方面的优化</span><a href="#fu-wu-qi-fang-mian-de-you-hua" class="header-anchor"></a></h3><h4><span id="nei-cun-she-zhi">内存设置</span><a href="#nei-cun-she-zhi" class="header-anchor"></a></h4><ul><li>由于ES构建基于lucene, 而lucene设计强大之处在于lucene能够很好的利用操作系统内存来缓存索引数据，以提供快速的查询性能。lucene的索引文件segements是存储在单文件中的，并且不可变，对于OS来说，能够很友好地将索引文件保持在cache中，以便快速访问；因此，我们很有必要将一半的物理内存留给lucene ; 另一半的物理内存留给ES（JVM heap )。所以， 在ES内存设置方面，可以遵循以下原则：</li></ul><ol><li>当机器内存小于64G时，遵循通用的原则，50%给ES，50%留给lucene。</li><li>当机器内存大于64G时，遵循以下原则： </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">      a. 如果主要的使用场景是全文检索, 那么建议给ES Heap分配 4~32G的内存即可；其它内存留给操作系统, 供lucene使用（segments cache), 以提供更快的查询性能。</span><br><span class="line">      b.  如果主要的使用场景是聚合或排序， 并且大多数是numerics, dates, geo_points 以及not_analyzed的字符类型， 建议分配给ES Heap分配 4~32G的内存即可，其它内存留给操作系统，供lucene使用(doc values cache)，提供快速的基于文档的聚类、排序性能。 </span><br><span class="line">      c.  如果使用场景是聚合或排序，并且都是基于analyzed 字符数据，这时需要更多的 heap size, 建议机器上运行多ES实例，每个实例保持不超过50%的ES heap设置(但不超过32G，堆内存设置32G以下时，JVM使用对象指标压缩技巧节省空间)，50%以上留给lucene。</span><br><span class="line">      d. 当机器内存大于等于64G时，我们都会采用 31 G 设置</span><br><span class="line">          -Xms 31g</span><br><span class="line">          -Xmx 31g</span><br></pre></td></tr></table></figure><ol start="3"><li>禁止swap，一旦允许内存与磁盘的交换，会引起致命的性能问题。 通过： 在elasticsearch.yml 中 bootstrap.memory_lock: true， 以保持JVM锁定内存，保证ES的性能。</li><li>GC设置原则：</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">      a. 保持GC的现有设置，默认设置为：Concurrent-Mark and Sweep (CMS)，别换成G1GC，因为目前G1还有很多BUG。</span><br><span class="line">      b. 保持线程池的现有设置，目前ES的线程池较1.X有了较多优化设置，保持现状即可；默认线程池大小等于CPU核心数。如果一定要改，按公式（（CPU核心数* 3）&#x2F; 2）+ 1 设置；不能超过CPU核心数的2倍；但是不建议修改默认配置，否则会对CPU造成硬伤。</span><br><span class="line">      c.调整  elasticsearch.yml ，对 bulk&#x2F;flush 线程池进行调优</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    threadpool.bulk.type:fixed</span><br><span class="line">    threadpool.bulk.size:8 #(CPU核数)</span><br><span class="line">    threadpool.flush.type:fixed</span><br><span class="line">    threadpool.flush.size:8 #(CPU核数)</span><br></pre></td></tr></table></figure><h4><span id="ji-qun-fen-pian-she-zhi">集群分片设置</span><a href="#ji-qun-fen-pian-she-zhi" class="header-anchor"></a></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">ES一旦创建好索引后，就无法调整分片的设置，而在ES中，一个分片实际上对应一个lucene 索引，而lucene索引的读写会占用很多的系统资源，因此，分片数不能设置过大；所以，在创建索引时，合理配置分片数是非常重要的。一般来说，我们遵循一些原则：</span><br><span class="line">    6.1 控制每个分片占用的硬盘容量不超过ES的最大JVM的堆空间设置（一般设置不超过32G，参加上文的JVM设置原则），因此，如果索引的总容量在500G左右，那分片大小在16个左右即可；当然，最好同时考虑原则6.2。</span><br><span class="line">    6.2 考虑一下node数量，一般一个节点有时候就是一台物理机，如果分片数过多，大大超过了节点数，很可能会导致一个节点上存在多个分片，一旦该节点故障，即使保持了1个以上的副本，同样有可能会导致数据丢失，集群无法恢复。所以， 一般都设置分片数不超过节点数的3倍。</span><br></pre></td></tr></table></figure><h4><span id="mapping-jian-mo">Mapping建模</span><a href="#mapping-jian-mo" class="header-anchor"></a></h4><ul><li>尽量避免使用nested或 parent/child，能不用就不用；nested query慢， parent/child query 更慢，比nested query慢上百倍；因此能在mapping设计阶段搞定的（大宽表设计或采用比较smart的数据结构），就不要用父子关系的mapping。</li><li>如果一定要使用nested fields，保证nested fields字段不能过多，目前ES默认限制是50。参考：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    index.mapping.nested_fields.limit ：50</span><br><span class="line">    因为针对1个document, 每一个nested field, 都会生成一个独立的document, 这将使Doc数量剧增，影响查询效率，尤其是JOIN的效率。</span><br></pre></td></tr></table></figure><ul><li>避免使用动态值作字段(key),  动态递增的mapping，会导致集群崩溃；同样，也需要控制字段的数量，业务中不使用的字段，就不要索引。控制索引的字段数量、mapping深度、索引字段的类型，对于ES的性能优化是重中之重。以下是ES关于字段数、mapping深度的一些默认设置：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    index.mapping.nested_objects.limit :10000</span><br><span class="line">    index.mapping.total_fields.limit:1000</span><br><span class="line">    index.mapping.depth.limit: 20</span><br></pre></td></tr></table></figure><h4><span id="suo-yin-you-hua-she-zhi">索引优化设置</span><a href="#suo-yin-you-hua-she-zhi" class="header-anchor"></a></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">8.1 设置refresh_interval 为-1，同时设置number_of_replicas 为0，通过关闭refresh间隔周期，同时不设置副本来提高写性能。 </span><br><span class="line">    8.2 修改index_buffer_size 的设置，可以设置成百分数，也可设置成具体的大小，大小可根据集群的规模做不同的设置测试。 </span><br><span class="line">        indices.memory.index_buffer_size：10%（默认）</span><br><span class="line">        indices.memory.min_index_buffer_size： 48mb（默认）</span><br><span class="line">        indices.memory.max_index_buffer_size</span><br><span class="line">    8.3 修改translog相关的设置：</span><br><span class="line">        a. 控制数据从内存到硬盘的操作频率，以减少硬盘IO。可将sync_interval的时间设置大一些。</span><br><span class="line">            index.translog.sync_interval：5s(默认)。</span><br><span class="line">        b. 控制tranlog数据块的大小，达到threshold大小时，才会flush到lucene索引文件。</span><br><span class="line">            index.translog.flush_threshold_size：512mb(默认)</span><br><span class="line">    8.4 _id字段的使用，应尽可能避免自定义_id, 以避免针对ID的版本管理；建议使用ES的默认ID生成策略或使用数字类型ID做为主键。</span><br><span class="line">    8.5 _all字段及_source字段的使用，应该注意场景和需要，_all字段包含了所有的索引字段，方便做全文检索，如果无此需求，可以禁用；_source存储了原始的document内容，如果没有获取原始文档数据的需求，可通过设置includes、excludes 属性来定义放入_source的字段。</span><br><span class="line">    8.6 合理的配置使用index属性，analyzed 和not_analyzed，根据业务需求来控制字段是否分词或不分词。只有 groupby需求的字段，配置时就设置成not_analyzed, 以提高查询或聚类的效率。</span><br></pre></td></tr></table></figure><h4><span id="cha-xun-you-hua">查询优化</span><a href="#cha-xun-you-hua" class="header-anchor"></a></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">9.1 query_string 或 multi_match的查询字段越多， 查询越慢。可以在mapping阶段，利用copy_to属性将多字段的值索引到一个新字段，multi_match时，用新的字段查询。</span><br><span class="line">    9.2 日期字段的查询， 尤其是用now 的查询实际上是不存在缓存的，因此， 可以从业务的角度来考虑是否一定要用now, 毕竟利用query cache 是能够大大提高查询效率的。</span><br><span class="line">    9.3 查询结果集的大小不能随意设置成大得离谱的值， 如query.setSize不能设置成 Integer.MAX_VALUE， 因为ES内部需要建立一个数据结构来放指定大小的结果集数据。</span><br><span class="line">    9.4 尽量避免使用script，万不得已需要使用的话，选择painless &amp; experssions 引擎。一旦使用script查询，一定要注意控制返回，千万不要有死循环（如下错误的例子），因为ES没有脚本运行的超时控制，只要当前的脚本没执行完，该查询会一直阻塞。</span><br><span class="line">    9.5 避免层级过深的聚合查询， 层级过深的group by , 会导致内存、CPU消耗，建议在服务层通过程序来组装业务，也可以通过pipeline的方式来优化。</span><br><span class="line">    9.6 复用预索引数据方式来提高AGG性能：</span><br><span class="line">    如通过 terms aggregations 替代 range aggregations， 如要根据年龄来分组，分组目标是: 少年（14岁以下） 青年（14-28） 中年（29-50） 老年（51以上）， 可以在索引的时候设置一个age_group字段，预先将数据进行分类。从而不用按age来做range aggregations, 通过age_group字段就可以了。</span><br><span class="line">    9.7. Cache的设置及使用：</span><br><span class="line">        a) QueryCache: ES查询的时候，使用filter查询会使用query cache, 如果业务场景中的过滤查询比较多，建议将querycache设置大一些，以提高查询速度。</span><br><span class="line">        indices.queries.cache.size： 10%（默认），可设置成百分比，也可设置成具体值，如256mb。</span><br><span class="line">        当然也可以禁用查询缓存（默认是开启）， 通过index.queries.cache.enabled：false设置。</span><br><span class="line">        b) FieldDataCache: 在聚类或排序时，field data cache会使用频繁，因此，设置字段数据缓存的大小，在聚类或排序场景较多的情形下很有必要，可通过indices.fielddata.cache.size：30% 或具体值10GB来设置。但是如果场景或数据变更比较频繁，设置cache并不是好的做法，因为缓存加载的开销也是特别大的。</span><br><span class="line">        c) ShardRequestCache: 查询请求发起后，每个分片会将结果返回给协调节点(Coordinating Node), 由协调节点将结果整合。</span><br><span class="line">        如果有需求，可以设置开启;  通过设置index.requests.cache.enable: true来开启。</span><br><span class="line">        不过，shard request cache只缓存hits.total, aggregations, suggestions类型的数据，并不会缓存hits的内容。也可以通过设置indices.requests.cache.size: 1%（默认）来控制缓存空间大小。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      es性能优化篇
    
    </summary>
    
    
      <category term="es" scheme="https://zuoyoulai.github.io/categories/es/"/>
    
    
      <category term="es" scheme="https://zuoyoulai.github.io/tags/es/"/>
    
  </entry>
  
  <entry>
    <title>Windows安装SecureCRT</title>
    <link href="https://zuoyoulai.github.io/2020/02/01/Windows%E5%AE%89%E8%A3%85SecureCRT/"/>
    <id>https://zuoyoulai.github.io/2020/02/01/Windows%E5%AE%89%E8%A3%85SecureCRT/</id>
    <published>2020-02-01T13:41:50.000Z</published>
    <updated>2020-02-01T16:56:17.838Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="an-zhuang-jiao-cheng-can-kao-lian-jie">安装教程参考链接</span><a href="#an-zhuang-jiao-cheng-can-kao-lian-jie" class="header-anchor"></a></h3><ul><li><p><a href="https://www.jianshu.com/p/2bfd1fbf31bc" target="_blank" rel="noopener">https://www.jianshu.com/p/2bfd1fbf31bc</a></p></li><li><p>资料分享 : 链接：<a href="https://pan.baidu.com/s/1I3wgOL25tlb_AOoIDaJZxA" target="_blank" rel="noopener">https://pan.baidu.com/s/1I3wgOL25tlb_AOoIDaJZxA</a>  提取码：i7iz</p></li><li><p>SecureCRT注册机：链接：YPSuperKey Unlocked<a href="https://pan.baidu.com/s/1mZzUo9dswJ0vMl7d-96_3w" target="_blank" rel="noopener">https://pan.baidu.com/s/1mZzUo9dswJ0vMl7d-96_3w</a> 密码：lajx</p></li></ul><ul><li>具体详情的步骤:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">亲测可以哦</span><br><span class="line">一、 SecureCRT安装教程</span><br><span class="line">1、下载好安装包，双击“scrt814-x64”，进行安装</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">双击“scrt814-x64”</span><br><span class="line"></span><br><span class="line">2、点击next</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">点击next</span><br><span class="line"></span><br><span class="line">3、选择I accept the terms in the license agreement，在点击next</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">选择接受</span><br><span class="line"></span><br><span class="line">4、直接默认的配置，点击next</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">默认的配置即可</span><br><span class="line"></span><br><span class="line">5、默认配置，点击next</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">默认配置</span><br><span class="line"></span><br><span class="line">6、两个都选择，在点击next</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">两个都选</span><br><span class="line"></span><br><span class="line">7、安装路径不能改变，直接点击Install。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">安装</span><br><span class="line"></span><br><span class="line">8、三个选项的√都去掉，不去掉也可以，不去掉点击完成后会弹出网页。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">完成</span><br><span class="line"></span><br><span class="line">注意：完成之后先不要打开软件，先进行破解操作</span><br><span class="line">二、破解过程</span><br><span class="line">破解之前首先将杀毒软件关闭，或者只是将病毒与威胁防护实时保护关掉，不然，文件中的破解软件会被自动删除，关掉之后，如果破解软件已经被删除，就再重新解压一下压缩包就可以了。</span><br><span class="line"></span><br><span class="line">1、将破解包中的8.x 注册机文件夹下的keygen移动到SecureCRT 的安装路径下C:\Program Files\VanDyke Software\SecureCRT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">移动keygen</span><br><span class="line"></span><br><span class="line">2、右键、以管理员身份运行，点击patch</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">管理员身份运行</span><br><span class="line"></span><br><span class="line">3、在弹出的框中先选择SecureCRT，再点击打开，之后会弹出成功页面</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">先选择、再点击打开</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">成功</span><br><span class="line"></span><br><span class="line">4、点击确认之后，有弹出文件选择界面，先选LicenseHelper，在点击打开，再次弹出成功界面，点击确定，放心，这次不会再弹出选择页面了0.0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">先选择，再打开</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">成功</span><br><span class="line"></span><br><span class="line">5、不要关闭keygen，打开SecureCRT，弹出的页面直接点击ok即可，再选择Enter License Data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">点击ok</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">6、什么也不填，直接下一步</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">直接下一步</span><br><span class="line"></span><br><span class="line">7、弹出的页面点击Enter License Manually</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">8、填入Keygen中的Name和Company，下一步</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ctrl c ctrl v</span><br><span class="line"></span><br><span class="line">9、填入Keygen中的Serial number和License key，下一步</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ctrl c ctrl v</span><br><span class="line"></span><br><span class="line">10、填入Issue date，下一步</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ctrl c ctrl v</span><br><span class="line"></span><br><span class="line">11、破解完成</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">完成</span><br><span class="line"></span><br><span class="line">12 、选择without a configuration passphrase，点击ok</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">选择第二个，点击ok</span><br><span class="line"></span><br><span class="line">13、破解完成，enjoy it！</span><br><span class="line">————————————————</span><br><span class="line">版权声明：本文为CSDN博主「xiaozhegaa」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。</span><br><span class="line">原文链接：https:&#x2F;&#x2F;blog.csdn.net&#x2F;xiaozhegaa&#x2F;article&#x2F;details&#x2F;89662874</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Windows安装SecureCRT
    
    </summary>
    
    
      <category term="SecureCRT" scheme="https://zuoyoulai.github.io/categories/SecureCRT/"/>
    
    
      <category term="SecureCRT" scheme="https://zuoyoulai.github.io/tags/SecureCRT/"/>
    
  </entry>
  
  <entry>
    <title>Java 操作 Es 查询操作</title>
    <link href="https://zuoyoulai.github.io/2020/01/31/java-es-02/"/>
    <id>https://zuoyoulai.github.io/2020/01/31/java-es-02/</id>
    <published>2020-01-30T16:06:24.000Z</published>
    <updated>2020-02-01T17:13:46.230Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="java-cao-zuo-es-cha-xun-cao-zuo">Java 操作 Es 查询操作</span><a href="#java-cao-zuo-es-cha-xun-cao-zuo" class="header-anchor"></a></h2><div class="toc"><!-- toc --><ul><li><a href="#xue-xi-can-kao-wen-zhang">学习参考文章</a></li></ul><!-- tocstop --></div><h3><span id="xue-xi-can-kao-wen-zhang">学习参考文章</span><a href="#xue-xi-can-kao-wen-zhang" class="header-anchor"></a></h3><ul><li><a href="https://blog.csdn.net/u014646662/category_8747782.html" target="_blank" rel="noopener">https://blog.csdn.net/u014646662/category_8747782.html</a></li></ul><ul><li>Es 的核心查询操作: 检索查询,聚合查询</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.demo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.search.SearchResponse;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.transport.TransportClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.settings.Settings;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.transport.TransportAddress;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.index.query.QueryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.index.query.QueryBuilders;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.SearchHit;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.aggregations.AggregationBuilder;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.aggregations.AggregationBuilders;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.aggregations.metrics.avg.Avg;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.aggregations.metrics.max.Max;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.aggregations.metrics.min.Min;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.aggregations.metrics.sum.Sum;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.transport.client.PreBuiltTransportClient;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 参考文章:</span></span><br><span class="line"><span class="comment"> *  https://www.jianshu.com/p/a584848da515</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * es 服务:</span></span><br><span class="line"><span class="comment"> *  http://localhost:9200/</span></span><br><span class="line"><span class="comment"> *  来查看 :  cluster.name</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * kibana 服务:</span></span><br><span class="line"><span class="comment"> *  http://localhost:5601/app/kibana#/dev_tools/console?_g=()</span></span><br><span class="line"><span class="comment"> *  来验证数据是否正确</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    TransportClient transportClient = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String hostName = <span class="string">"localhost"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Integer port = <span class="number">9300</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Integer poolSize = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String index = <span class="string">"db-1"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String type = <span class="string">"tab-1"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 配置信息</span></span><br><span class="line">            Settings esSetting = Settings.builder()</span><br><span class="line">                    .put(<span class="string">"cluster.name"</span>, <span class="string">"docker-cluster"</span>) <span class="comment">//集群名字</span></span><br><span class="line"><span class="comment">//                    .put("client.transport.sniff", true)//增加嗅探机制，找到ES集群</span></span><br><span class="line">                    .put(<span class="string">"thread_pool.search.size"</span>, poolSize)<span class="comment">//增加线程池个数，暂时设为5</span></span><br><span class="line">                    .build();</span><br><span class="line">            <span class="comment">//配置信息Settings自定义</span></span><br><span class="line">            transportClient = <span class="keyword">new</span> PreBuiltTransportClient(esSetting);</span><br><span class="line">            TransportAddress transportAddress = <span class="keyword">new</span> TransportAddress(InetAddress.getByName(hostName), port);</span><br><span class="line">            transportClient.addTransportAddresses(transportAddress);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(<span class="string">"elasticsearch TransportClient create error!!"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  根据条件进行查询的操作</span></span><br><span class="line"><span class="comment">     *  match query   知道分词器的存在，会对filed进行分词操作，然后再查询</span></span><br><span class="line"><span class="comment">     *  match_all:    查询所有文档</span></span><br><span class="line"><span class="comment">     *  multi_match:  可以指定多个字段</span></span><br><span class="line"><span class="comment">     *  match_phrase: 短语匹配查询，ElasticSearch引擎首先分析（analyze）查询字符串，从分析后的文本中构建短语查询，这意味着必须匹配短语中的所有分词，并且保证各个分词的相对位置不变</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">matchQuery</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 对 age = 28 匹配</span></span><br><span class="line">        QueryBuilder fieldQuery = QueryBuilders.matchQuery(<span class="string">"age"</span>, <span class="number">98</span>);</span><br><span class="line">        log.info(<span class="string">"对 age = 28 匹配"</span>);</span><br><span class="line">        mathquery(fieldQuery);</span><br><span class="line">        log.info(<span class="string">"查询所有"</span>);</span><br><span class="line">        QueryBuilder allQuery = QueryBuilders.matchAllQuery();</span><br><span class="line">        mathquery(allQuery);</span><br><span class="line">        log.info(<span class="string">"matchPhrase查询"</span>);</span><br><span class="line">        log.info(<span class="string">"词语匹配短语 :    内容  --&gt;"</span>);</span><br><span class="line">        QueryBuilder matchQuery = QueryBuilders.matchPhraseQuery(<span class="string">"content"</span>, <span class="string">"内容  --&gt;1"</span>);</span><br><span class="line">        mathquery(matchQuery);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * term query会去倒排索引中寻找确切的term，它并不知道分词器的存在。这种查询适合keyword 、numeric、date</span></span><br><span class="line"><span class="comment">     * term:查询某个字段里含有某个关键词的文档</span></span><br><span class="line"><span class="comment">     * terms:查询某个字段里含有多个关键词的文档</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">termTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//content 字段有 "90" 字符</span></span><br><span class="line">        QueryBuilder oneTermBuilder = QueryBuilders.termQuery(<span class="string">"content"</span>, <span class="string">"90"</span>);</span><br><span class="line">        mathquery(oneTermBuilder);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">"---------"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//contetn 字段有 "内容1" 或 "97" 字符</span></span><br><span class="line">        QueryBuilder termsBuilder = QueryBuilders.termsQuery(<span class="string">"content"</span>, <span class="string">"内容1"</span>, <span class="string">"97"</span>);</span><br><span class="line">        mathquery(termsBuilder);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 聚合查询:</span></span><br><span class="line"><span class="comment">     * 求最大值 最小值 平均值 和值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">jhTest</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//最大值</span></span><br><span class="line">        String maxName = <span class="string">"ageMax"</span>;</span><br><span class="line">        AggregationBuilder max = AggregationBuilders.max(maxName).field(<span class="string">"age"</span>);</span><br><span class="line">        log.info(<span class="string">" query DSL  :   &#123;&#125;"</span>, max.toString());</span><br><span class="line">        SearchResponse sr = transportClient.prepareSearch(index).addAggregation(max).get();</span><br><span class="line">        Max maxValue = sr.getAggregations().get(maxName);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">" data  :  &#123;&#125;"</span>, maxValue.toString());</span><br><span class="line">        log.info(<span class="string">" max value  :  &#123;&#125;"</span>, maxValue.getValue());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//最小值</span></span><br><span class="line">        String minName = <span class="string">"ageMin"</span>;</span><br><span class="line">        AggregationBuilder min = AggregationBuilders.min(minName).field(<span class="string">"age"</span>);</span><br><span class="line">        log.info(<span class="string">" query DSL  :   &#123;&#125;"</span>, min.toString());</span><br><span class="line">        SearchResponse mrep = transportClient.prepareSearch(index).addAggregation(min).get();</span><br><span class="line">        Min minValue = mrep.getAggregations().get(minName);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">" data  :  &#123;&#125;"</span>, minValue.toString());</span><br><span class="line">        log.info(<span class="string">" min value  :  &#123;&#125;"</span>, minValue.getValue());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//平均值</span></span><br><span class="line">        String avgName = <span class="string">"avgName"</span>;</span><br><span class="line">        AggregationBuilder avg = AggregationBuilders.avg(avgName).field(<span class="string">"age"</span>);</span><br><span class="line">        log.info(<span class="string">" query DSL  :   &#123;&#125;"</span>, avg.toString());</span><br><span class="line">        SearchResponse avgrep = transportClient.prepareSearch(index).addAggregation(avg).get();</span><br><span class="line">        Avg avgValue = avgrep.getAggregations().get(avgName);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">" data  :  &#123;&#125;"</span>, avgValue.toString());</span><br><span class="line">        log.info(<span class="string">" avg value  :  &#123;&#125;"</span>, avgValue.getValue());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//求和</span></span><br><span class="line">        String sumName = <span class="string">"avgName"</span>;</span><br><span class="line">        AggregationBuilder sum = AggregationBuilders.sum(sumName).field(<span class="string">"age"</span>);</span><br><span class="line">        log.info(<span class="string">" query DSL  :   &#123;&#125;"</span>, sum.toString());</span><br><span class="line">        SearchResponse sumrep = transportClient.prepareSearch(index).addAggregation(sum).get();</span><br><span class="line">        Sum sumValue = sumrep.getAggregations().get(sumName);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">" data  :  &#123;&#125;"</span>, sumValue.toString());</span><br><span class="line">        log.info(<span class="string">" avg value  :  &#123;&#125;"</span>, sumValue.getValue());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 返回结果:</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * 00:03:15.444 [main] INFO com.demo.QueryTest -  query DSL  :   &#123;"ageMax":&#123;"max":&#123;"field":"age"&#125;&#125;&#125;</span></span><br><span class="line"><span class="comment">         * 00:03:15.556 [main] INFO com.demo.QueryTest -  data  :  &#123;"ageMax":&#123;"value":109.0&#125;&#125;</span></span><br><span class="line"><span class="comment">         * 00:03:15.556 [main] INFO com.demo.QueryTest -  max value  :  109.0</span></span><br><span class="line"><span class="comment">         * 00:03:15.556 [main] INFO com.demo.QueryTest -  query DSL  :   &#123;"ageMin":&#123;"min":&#123;"field":"age"&#125;&#125;&#125;</span></span><br><span class="line"><span class="comment">         * 00:03:15.572 [main] INFO com.demo.QueryTest -  data  :  &#123;"ageMin":&#123;"value":10.0&#125;&#125;</span></span><br><span class="line"><span class="comment">         * 00:03:15.572 [main] INFO com.demo.QueryTest -  min value  :  10.0</span></span><br><span class="line"><span class="comment">         * 00:03:15.572 [main] INFO com.demo.QueryTest -  query DSL  :   &#123;"avgName":&#123;"avg":&#123;"field":"age"&#125;&#125;&#125;</span></span><br><span class="line"><span class="comment">         * 00:03:15.587 [main] INFO com.demo.QueryTest -  data  :  &#123;"avgName":&#123;"value":67.77697841726619&#125;&#125;</span></span><br><span class="line"><span class="comment">         * 00:03:15.587 [main] INFO com.demo.QueryTest -  avg value  :  67.77697841726619</span></span><br><span class="line"><span class="comment">         * 00:03:15.588 [main] INFO com.demo.QueryTest -  query DSL  :   &#123;"avgName":&#123;"sum":&#123;"field":"age"&#125;&#125;&#125;</span></span><br><span class="line"><span class="comment">         * 00:03:15.607 [main] INFO com.demo.QueryTest -  data  :  &#123;"avgName":&#123;"value":9421.0&#125;&#125;</span></span><br><span class="line"><span class="comment">         * 00:03:15.607 [main] INFO com.demo.QueryTest -  avg value  :  9421.0</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">mathquery</span><span class="params">(QueryBuilder fieldQuery)</span> </span>&#123;</span><br><span class="line">        log.error(<span class="string">" query 语句 :  &#123;&#125;"</span>, fieldQuery.toString());</span><br><span class="line">        SearchResponse response = transportClient.prepareSearch(index).setQuery(fieldQuery).get();</span><br><span class="line">        <span class="keyword">for</span>(SearchHit hit:response.getHits()) &#123;</span><br><span class="line">            Map&lt;String, Object&gt; map = hit.getSourceAsMap();</span><br><span class="line">            log.info(<span class="string">"query data  :   &#123;&#125;"</span>, JSON.toJSONString(map));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Java 操作 Es 查询操作
    
    </summary>
    
    
      <category term="elk" scheme="https://zuoyoulai.github.io/categories/elk/"/>
    
    
      <category term="elk" scheme="https://zuoyoulai.github.io/tags/elk/"/>
    
      <category term="java" scheme="https://zuoyoulai.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>java 操作 Es 的 CURD 操作</title>
    <link href="https://zuoyoulai.github.io/2020/01/30/java-es/"/>
    <id>https://zuoyoulai.github.io/2020/01/30/java-es/</id>
    <published>2020-01-29T16:17:10.000Z</published>
    <updated>2020-02-01T17:13:38.264Z</updated>
    
    <content type="html"><![CDATA[<h3><span id="java-cao-zuo-es-de-curd-cao-zuo">java 操作 Es 的 CURD 操作</span><a href="#java-cao-zuo-es-de-curd-cao-zuo" class="header-anchor"></a></h3><div class="toc"><!-- toc --><ul><li><a href="#xue-xi-can-kao-wen-zhang">学习参考文章</a></li><li><a href="#maven-yin-ru">maven 引入</a></li><li><a href="#can-kao-nei-rong">参考内容</a></li><li><a href="#java-dai-ma-curd">Java 代码 CURD</a></li></ul><!-- tocstop --></div><h3><span id="xue-xi-can-kao-wen-zhang">学习参考文章</span><a href="#xue-xi-can-kao-wen-zhang" class="header-anchor"></a></h3><ul><li><a href="https://blog.csdn.net/u014646662/category_8747782.html" target="_blank" rel="noopener">https://blog.csdn.net/u014646662/category_8747782.html</a></li></ul><h3><span id="maven-yin-ru">maven 引入</span><a href="#maven-yin-ru" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;properties&gt;</span><br><span class="line">        &lt;es.version&gt;6.4.2&lt;&#x2F;es.version&gt;</span><br><span class="line">&lt;&#x2F;properties&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependencies&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;org.elasticsearch&#x2F;elasticsearch --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.elasticsearch&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;elasticsearch&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;es.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;org.elasticsearch.client&#x2F;transport --&gt;</span><br><span class="line">    &lt;dependency&gt;</span><br><span class="line">        &lt;groupId&gt;org.elasticsearch.client&lt;&#x2F;groupId&gt;</span><br><span class="line">        &lt;artifactId&gt;transport&lt;&#x2F;artifactId&gt;</span><br><span class="line">        &lt;version&gt;$&#123;es.version&#125;&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;exclusions&gt;</span><br><span class="line">            &lt;exclusion&gt;</span><br><span class="line">                &lt;groupId&gt;org.elasticsearch&lt;&#x2F;groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;elasticsearch&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;&#x2F;exclusion&gt;</span><br><span class="line">        &lt;&#x2F;exclusions&gt;</span><br><span class="line">    &lt;&#x2F;dependency&gt;</span><br><span class="line">&lt;&#x2F;dependencies&gt;</span><br></pre></td></tr></table></figure><h3><span id="can-kao-nei-rong">参考内容</span><a href="#can-kao-nei-rong" class="header-anchor"></a></h3><ul><li><p>参考文章 :  <a href="https://www.jianshu.com/p/a584848da515" target="_blank" rel="noopener">https://www.jianshu.com/p/a584848da515</a></p></li><li><p>验证数据 :  <a href="http://localhost:5601/app/kibana#/dev_tools" target="_blank" rel="noopener">http://localhost:5601/app/kibana#/dev_tools</a></p></li></ul><h3><span id="java-dai-ma-curd">Java 代码 CURD</span><a href="#java-dai-ma-curd" class="header-anchor"></a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.demo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSON;</span><br><span class="line"><span class="keyword">import</span> com.google.common.collect.Maps;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.admin.indices.delete.DeleteIndexResponse;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.admin.indices.exists.indices.IndicesExistsRequest;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.admin.indices.exists.indices.IndicesExistsResponse;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.delete.DeleteResponse;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.get.GetRequestBuilder;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.get.GetResponse;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.index.IndexResponse;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.search.SearchRequestBuilder;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.search.SearchResponse;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.search.SearchType;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.update.UpdateRequest;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.action.update.UpdateResponse;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.client.transport.TransportClient;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.settings.Settings;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.text.Text;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.common.transport.TransportAddress;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.index.query.QueryBuilder;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.index.query.QueryBuilders;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.SearchHit;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.fetch.subphase.highlight.HighlightBuilder;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.fetch.subphase.highlight.HighlightField;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.search.sort.SortOrder;</span><br><span class="line"><span class="keyword">import</span> org.elasticsearch.transport.client.PreBuiltTransportClient;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ExecutionException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 参考文章:</span></span><br><span class="line"><span class="comment"> *  https://www.jianshu.com/p/a584848da515</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * es 服务:</span></span><br><span class="line"><span class="comment"> *  http://localhost:9200/</span></span><br><span class="line"><span class="comment"> *  来查看 :  cluster.name</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * kibana 服务:</span></span><br><span class="line"><span class="comment"> *  http://localhost:5601/app/kibana#/dev_tools/console?_g=()</span></span><br><span class="line"><span class="comment"> *  来验证数据是否正确</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CurdTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    TransportClient transportClient = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String hostName = <span class="string">"localhost"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Integer port = <span class="number">9300</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> Integer poolSize = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String index = <span class="string">"db-1"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String type = <span class="string">"tab-1"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 配置信息</span></span><br><span class="line">            Settings esSetting = Settings.builder()</span><br><span class="line">                    .put(<span class="string">"cluster.name"</span>, <span class="string">"docker-cluster"</span>) <span class="comment">//集群名字</span></span><br><span class="line"><span class="comment">//                    .put("client.transport.sniff", true)//增加嗅探机制，找到ES集群</span></span><br><span class="line">                    .put(<span class="string">"thread_pool.search.size"</span>, poolSize)<span class="comment">//增加线程池个数，暂时设为5</span></span><br><span class="line">                    .build();</span><br><span class="line">            <span class="comment">//配置信息Settings自定义</span></span><br><span class="line">            transportClient = <span class="keyword">new</span> PreBuiltTransportClient(esSetting);</span><br><span class="line">            TransportAddress transportAddress = <span class="keyword">new</span> TransportAddress(InetAddress.getByName(hostName), port);</span><br><span class="line">            transportClient.addTransportAddresses(transportAddress);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.error(<span class="string">"elasticsearch TransportClient create error!!"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  新增操作</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">oneInsert</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        String data = <span class="string">"&#123;\n"</span> +</span><br><span class="line">                <span class="string">"  \"cn-name\":\"java 赖\",\n"</span> +</span><br><span class="line">                <span class="string">"  \"en-name\":\"java es lai\",\n"</span> +</span><br><span class="line">                <span class="string">"  \"age\":28,\n"</span> +</span><br><span class="line">                <span class="string">"  \"content\":\"code 操作....\"\n"</span> +</span><br><span class="line">                <span class="string">"&#125;"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//这个版本需要把 json 字符串转为 map 对象  不然会报错</span></span><br><span class="line"></span><br><span class="line">        Map map = JSON.parseObject(data, Map<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        IndexResponse response = transportClient.prepareIndex(index, type).setSource(map).get();</span><br><span class="line">        log.info(<span class="string">"addData response status:&#123;&#125;,id:&#123;&#125;"</span>, response.status().getStatus(), response.getId());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  批量的插入的操作</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">batchInsert</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        BulkRequestBuilder bulkRequest = transportClient.prepareBulk();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">60</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">                    Map map = Maps.newHashMap();</span><br><span class="line">                    map.put(<span class="string">"cn-name"</span>, <span class="string">"00"</span> + i);</span><br><span class="line">                    map.put(<span class="string">"en-name"</span>, <span class="string">"java samlai"</span> + i);</span><br><span class="line">                    map.put(<span class="string">"age"</span>, <span class="number">10</span> + i);</span><br><span class="line">                    map.put(<span class="string">"content"</span>, <span class="string">" 内容  --&gt;"</span> + i);</span><br><span class="line">                    IndexRequest request = transportClient.prepareIndex(index, type, String.valueOf(i)).setSource(map).request();</span><br><span class="line">                    bulkRequest.add(request);</span><br><span class="line">                &#125;</span><br><span class="line">        </span><br><span class="line">                bulkRequest.execute().actionGet();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  删除操作</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">del</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String id = <span class="string">"dpcY7G8BVtcun_3JK7HX"</span>;</span><br><span class="line">        DeleteResponse response = transportClient.prepareDelete(index, type, id).execute().actionGet();</span><br><span class="line">        log.info(<span class="string">"deleteDataById response status:&#123;&#125;,id:&#123;&#125;"</span>, response.status().getStatus(), response.getId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  删除 index 操作</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delIndex</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!isIndexExist(transportClient, index)) &#123;</span><br><span class="line">            log.info(<span class="string">"Index is not exits!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        DeleteIndexResponse dResponse = transportClient.admin().indices().prepareDelete(index).execute().actionGet();</span><br><span class="line">        <span class="keyword">if</span> (dResponse.isAcknowledged()) &#123;</span><br><span class="line">            log.info(<span class="string">"delete index "</span> + index + <span class="string">"  successfully!"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            log.info(<span class="string">"Fail to delete index "</span> + index);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        return dResponse.isAcknowledged();</span></span><br><span class="line">        log.info(<span class="string">"del Index  :   "</span> + dResponse.isAcknowledged());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改操作</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">()</span> <span class="keyword">throws</span> ExecutionException, InterruptedException </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        String data = <span class="string">"&#123;\n"</span> +</span><br><span class="line"><span class="comment">//                "  \"cn-name\":\"java 赖  update\"\n" +</span></span><br><span class="line">                <span class="string">"  \"cn-name\":\"java 赖  update\",\n"</span> +</span><br><span class="line">                <span class="string">"  \"en-name\":\"java es lai  ipdate\",\n"</span> +</span><br><span class="line">                <span class="string">"  \"age\":13,\n"</span> +</span><br><span class="line">                <span class="string">"  \"content\":\"update content\"\n"</span> +</span><br><span class="line">                <span class="string">"&#125;"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        String id = <span class="string">"d5dG7G8BVtcun_3JnrGp"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//这个版本需要把 json 字符串转为 map 对象  不然会报错</span></span><br><span class="line"></span><br><span class="line">        Map map = JSON.parseObject(data, Map<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">        UpdateRequest updateRequest = <span class="keyword">new</span> UpdateRequest();</span><br><span class="line">        updateRequest.index(index).type(type).id(id).doc(map);</span><br><span class="line">        transportClient.update(updateRequest);</span><br><span class="line"></span><br><span class="line">        UpdateResponse result = transportClient.update(updateRequest).get();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 默认情况下，不更改任何内容的更新会检测到它们不会更改任何内容，并返回“结果”：“noop”</span></span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">" result :  "</span> + JSON.toJSONString(result));</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">" update data  ：  "</span> + JSON.toJSONString(result.getResult()));</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">""</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据 id 来查找 es 的数据内容</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">queryId</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        String id = <span class="string">"d5dG7G8BVtcun_3JnrGp"</span>;</span><br><span class="line"></span><br><span class="line">        String fields = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        GetRequestBuilder getRequestBuilder = transportClient.prepareGet(index, type, id);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotEmpty(fields)) &#123;</span><br><span class="line">            getRequestBuilder.setFetchSource(fields.split(<span class="string">","</span>), <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        GetResponse getResponse = getRequestBuilder.execute().actionGet();</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">""</span>);</span><br><span class="line">        log.info(<span class="string">" reponse  data  :  "</span> + JSON.toJSONString(getResponse));</span><br><span class="line">        log.info(<span class="string">" data  :  "</span> + getResponse.getSource());</span><br><span class="line">        log.info(<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 使用分词查询,并分页</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index          索引名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> type           类型名称,可传入多个type逗号分隔</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> startPage      当前页</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> pageSize       每页显示条数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> query          查询条件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fields         需要显示的字段，逗号分隔（缺省为全部字段）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> sortField      排序字段</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> highlightField 高亮字段</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">queryPage</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        SearchRequestBuilder searchRequestBuilder = transportClient.prepareSearch(index);</span><br><span class="line"></span><br><span class="line">        String fields = <span class="string">"content,en-name"</span>;</span><br><span class="line">        String sortField = <span class="string">"age"</span>;</span><br><span class="line">        String highlightField = <span class="string">"content"</span>;</span><br><span class="line"><span class="comment">//        String highlightField = "cn-name";</span></span><br><span class="line">        QueryBuilder query = QueryBuilders.boolQuery();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> startPage = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> pageSize = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotEmpty(type)) &#123;</span><br><span class="line">            searchRequestBuilder.setTypes(type.split(<span class="string">","</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        searchRequestBuilder.setSearchType(SearchType.QUERY_THEN_FETCH);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 需要显示的字段，逗号分隔（缺省为全部字段）</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotEmpty(fields)) &#123;</span><br><span class="line">            searchRequestBuilder.setFetchSource(fields.split(<span class="string">","</span>), <span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//排序字段</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotEmpty(sortField)) &#123;</span><br><span class="line">            searchRequestBuilder.addSort(sortField, SortOrder.DESC);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 高亮（xxx=111,aaa=222）</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotEmpty(highlightField)) &#123;</span><br><span class="line"></span><br><span class="line">            HighlightBuilder highlightBuilder = <span class="keyword">new</span> HighlightBuilder();</span><br><span class="line"></span><br><span class="line">            highlightBuilder.preTags(<span class="string">"&lt;span style='color:red' &gt;"</span>);<span class="comment">//设置前缀</span></span><br><span class="line">            highlightBuilder.postTags(<span class="string">"&lt;/span&gt;"</span>);<span class="comment">//设置后缀</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 设置高亮字段</span></span><br><span class="line">            highlightBuilder.field(highlightField);</span><br><span class="line">            searchRequestBuilder.highlighter(highlightBuilder);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//searchRequestBuilder.setQuery(QueryBuilders.matchAllQuery());</span></span><br><span class="line">        searchRequestBuilder.setQuery(query);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 分页应用</span></span><br><span class="line">        searchRequestBuilder.setFrom(startPage).setSize(pageSize);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置是否按查询匹配度排序</span></span><br><span class="line">        searchRequestBuilder.setExplain(<span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//打印的内容 可以在 Elasticsearch head 和 Kibana  上执行查询</span></span><br><span class="line">        log.info(<span class="string">"\n&#123;&#125;"</span>, searchRequestBuilder);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 执行搜索,返回搜索响应信息</span></span><br><span class="line">        SearchResponse searchResponse = searchRequestBuilder.execute().actionGet();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">long</span> totalHits = searchResponse.getHits().totalHits;</span><br><span class="line">        <span class="keyword">long</span> length = searchResponse.getHits().getHits().length;</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">"共查询到[&#123;&#125;]条数据,处理数据条数[&#123;&#125;]"</span>, totalHits, length);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (searchResponse.status().getStatus() == <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="comment">// 解析对象</span></span><br><span class="line">            List&lt;Map&lt;String, Object&gt;&gt; sourceList = setSearchResponse(searchResponse, highlightField);</span><br><span class="line"></span><br><span class="line">            log.info(<span class="string">" "</span>);</span><br><span class="line">            log.info(<span class="string">" startPage  :  "</span> + startPage);</span><br><span class="line">            log.info(<span class="string">" pageSize  :  "</span> + pageSize);</span><br><span class="line">            log.info(<span class="string">" totalHits  :  "</span> + totalHits);</span><br><span class="line">            log.info(<span class="string">" sourceList  :  "</span> + JSON.toJSONString(sourceList));</span><br><span class="line">            log.info(<span class="string">" "</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断索引是否存在</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isIndexExist</span><span class="params">(TransportClient transportClient, String index)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        IndicesExistsResponse inExistsResponse = transportClient.admin().indices().exists(<span class="keyword">new</span> IndicesExistsRequest(index)).actionGet();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (inExistsResponse.isExists()) &#123;</span><br><span class="line">            log.info(<span class="string">"Index ["</span> + index + <span class="string">"] is exist!"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            log.info(<span class="string">"Index ["</span> + index + <span class="string">"] is not exist!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> inExistsResponse.isExists();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Description</span>: 判断inde下指定type是否存在</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isTypeExist</span><span class="params">(TransportClient transportClient, String index, String type)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> isIndexExist(transportClient, index)</span><br><span class="line">                ? transportClient.admin().indices().prepareTypesExists(index).setTypes(type).execute().actionGet().isExists()</span><br><span class="line">                : <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 高亮结果集 特殊处理</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> searchResponse</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> highlightField</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Map&lt;String, Object&gt;&gt; setSearchResponse(SearchResponse searchResponse, String highlightField) &#123;</span><br><span class="line">        List&lt;Map&lt;String, Object&gt;&gt; sourceList = <span class="keyword">new</span> ArrayList&lt;Map&lt;String, Object&gt;&gt;();</span><br><span class="line">        StringBuffer stringBuffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (SearchHit searchHit : searchResponse.getHits().getHits()) &#123;</span><br><span class="line">            searchHit.getSourceAsMap().put(<span class="string">"id"</span>, searchHit.getId());</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isNotEmpty(highlightField)) &#123;</span><br><span class="line"></span><br><span class="line">                log.info(<span class="string">"遍历 高亮结果集，覆盖 正常结果集"</span> + searchHit.getSourceAsMap());</span><br><span class="line"></span><br><span class="line">                HighlightField field = searchHit.getHighlightFields().get(highlightField);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (field != <span class="keyword">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">                    Text[] text = field.getFragments();</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (text != <span class="keyword">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">for</span> (Text str : text) &#123;</span><br><span class="line">                            stringBuffer.append(str.string());</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">//遍历 高亮结果集，覆盖 正常结果集</span></span><br><span class="line">                        searchHit.getSourceAsMap().put(highlightField, stringBuffer.toString());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            sourceList.add(searchHit.getSourceAsMap());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sourceList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      java 操作 Es 的 CURD 操作
    
    </summary>
    
    
      <category term="elk" scheme="https://zuoyoulai.github.io/categories/elk/"/>
    
    
      <category term="elk" scheme="https://zuoyoulai.github.io/tags/elk/"/>
    
      <category term="java" scheme="https://zuoyoulai.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>xxx-job 分布式定时任务系统</title>
    <link href="https://zuoyoulai.github.io/2020/01/28/xxx-job/"/>
    <id>https://zuoyoulai.github.io/2020/01/28/xxx-job/</id>
    <published>2020-01-28T04:09:50.000Z</published>
    <updated>2020-01-29T16:21:53.399Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="xxx-job-fen-bu-shi-ding-shi-ren-wu-xi-tong">xxx-job 分布式定时任务系统</span><a href="#xxx-job-fen-bu-shi-ding-shi-ren-wu-xi-tong" class="header-anchor"></a></h2><div class="toc"><!-- toc --><ul><li><a href="#lai-yuan">来源</a></li><li><a href="#huan-jing-zhun-bei">环境准备</a></li></ul><!-- tocstop --></div>### 来源<ul><li>官方文档 :  <a href="https://www.xuxueli.com/index.html" target="_blank" rel="noopener">https://www.xuxueli.com/index.html</a></li></ul><h3><span id="huan-jing-zhun-bei">环境准备</span><a href="#huan-jing-zhun-bei" class="header-anchor"></a></h3><ul><li>docker镜像</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull xuxueli&#x2F;xxl-job-admin:2.1.2</span><br></pre></td></tr></table></figure><ul><li>ip地址查看</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">~ » ifconfig | grep &quot;inet &quot; | grep -v 127.0.0.1                                                      haodalai@localhost</span><br><span class="line">inet 192.168.31.164 netmask 0xffffff00 broadcast 192.168.31.255</span><br></pre></td></tr></table></figure><ul><li>启动docker 镜像</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -e PARAMS&#x3D;&quot;--spring.datasource.url&#x3D;jdbc:mysql:&#x2F;&#x2F;192.168.31.164:3307&#x2F;xxl_job?Unicode&#x3D;true&amp;characterEncoding&#x3D;UTF-8   --spring.datasource.password&#x3D;samlai123&quot; -p 8787:8080 -v &#x2F;Users&#x2F;haodalai&#x2F;docker&#x2F;xxx-job&#x2F;logs:&#x2F;data&#x2F;applogs --name xxl-job-admin  -d xuxueli&#x2F;xxl-job-admin:2.1.2</span><br></pre></td></tr></table></figure><ul><li><p>访问地址 :  <a href="http://localhost:8787/xxl-job-admin" target="_blank" rel="noopener">http://localhost:8787/xxl-job-admin</a></p></li><li><p>访问的账号与密码: admin/123456</p></li></ul>]]></content>
    
    <summary type="html">
    
      分布式定时任务系统-job
    
    </summary>
    
    
      <category term="分布式定时任务系统" scheme="https://zuoyoulai.github.io/categories/%E5%88%86%E5%B8%83%E5%BC%8F%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="分布式定时任务系统" scheme="https://zuoyoulai.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="xxx-job" scheme="https://zuoyoulai.github.io/tags/xxx-job/"/>
    
  </entry>
  
  <entry>
    <title>docker 部署使用 ELk</title>
    <link href="https://zuoyoulai.github.io/2020/01/27/elk/"/>
    <id>https://zuoyoulai.github.io/2020/01/27/elk/</id>
    <published>2020-01-27T15:47:27.000Z</published>
    <updated>2020-02-02T12:41:45.359Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="docker-bu-shu-shi-yong-elk">docker 部署使用 ELk</span><a href="#docker-bu-shu-shi-yong-elk" class="header-anchor"></a></h2><div class="toc"><!-- toc --><ul><li><a href="#xue-xi-can-kao-wen-zhang">学习参考文章</a></li><li><a href="#ji-chu-la-qu-jing-xiang">基础 : 拉取镜像</a></li><li><a href="#ji-cheng-elk">集成:ELK</a><ul><li><a href="#fang-wen-fu-wu">访问服务</a></li><li><a href="#ik-fen-ci-qi-shi-fou-an-zhuang-cheng-gong-zai-kibana-shang-zhi-xing-cao-zuo">IK 分词器是否安装成功,在 kibana 上执行操作</a></li><li><a href="#kibana-cao-zuo-es-zeng-shan-gai-cha-cao-zuo">kibana 操作 Es 增删该查操作</a></li></ul></li><li><a href="#gai-nian">概念</a></li><li><a href="#kibana-dui-es-zeng-shan-gai-cha">kibana 对 es 增删改查</a><ul><li><a href="#es-yu-fa-gao-liang-cha-xun">Es 语法高亮查询</a></li><li><a href="#es-cha-xun-fen-lei-query-string-search-query-dsl">Es 查询分类 :  query string search  /  query DSL</a></li><li><a href="#full-text-search-quan-wen-jian-suo-phrase-search-duan-yu-sou-suo">full-text search 全文检索   |   phrase search  短语搜索</a></li><li><a href="#es-pi-liang-de-cao-zuo">Es批量的操作</a></li><li><a href="#es-he-xin-de-cao-zuo-huan-shi-cha-xun-cao-zuo-shi-yong-query-dsl-qing-qiu-cha-xun">Es 核心的操作还是查询操作: 使用query DSL 请求查询</a></li></ul></li></ul><!-- tocstop --></div><h3><span id="xue-xi-can-kao-wen-zhang">学习参考文章</span><a href="#xue-xi-can-kao-wen-zhang" class="header-anchor"></a></h3><ul><li><a href="https://blog.csdn.net/u014646662/category_8747782.html" target="_blank" rel="noopener">https://blog.csdn.net/u014646662/category_8747782.html</a></li></ul><h3><span id="ji-chu-la-qu-jing-xiang">基础 : 拉取镜像</span><a href="#ji-chu-la-qu-jing-xiang" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker pull elasticsearch:6.5.4</span><br><span class="line">docker pull kibana:6.5.4</span><br><span class="line">docker pull logstash:6.5.4</span><br></pre></td></tr></table></figure><h3><span id="ji-cheng-elk">集成:ELK</span><a href="#ji-cheng-elk" class="header-anchor"></a></h3><ul><li><p>工具: docker-compose</p></li><li><p>版本的指定: 在 compose 文件下有.env 文件写上相应的版本号内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ELK_VERSION&#x3D;6.5.4</span><br></pre></td></tr></table></figure></li><li><p>添加相应版本分词插件:IK (github 地址版本: <a href="https://github.com/medcl/elasticsearch-analysis-ik/releases?after=v6.5.2" target="_blank" rel="noopener">https://github.com/medcl/elasticsearch-analysis-ik/releases?after=v6.5.2</a>)</p></li><li><p>Ik 的说明文章: <a href="https://github.com/medcl/elasticsearch-analysis-ik" target="_blank" rel="noopener">https://github.com/medcl/elasticsearch-analysis-ik</a></p></li><li><p>集成到 docker-compose 上:</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">下载相应的文件:</span><br><span class="line">wget https:&#x2F;&#x2F;github.com&#x2F;medcl&#x2F;elasticsearch-analysis-ik&#x2F;releases&#x2F;download&#x2F;v6.5.0&#x2F;elasticsearch-analysis-ik-6.5.0.zip</span><br><span class="line"></span><br><span class="line">解压到相应 compose文件根目录下:es-plugin&#x2F;ik 下  :  unzip ik.zip</span><br><span class="line"></span><br><span class="line">docker-compose 文件对 Es 的文件夹的指定:</span><br><span class="line"></span><br><span class="line">volumes:</span><br><span class="line">  - .&#x2F;es-plugin&#x2F;ik:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;plugins&#x2F;ik</span><br></pre></td></tr></table></figure><ul><li>compose 文件内容<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">version: &#39;2&#39;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line"></span><br><span class="line">  elasticsearch:</span><br><span class="line">    image: &quot;elasticsearch:$&#123;ELK_VERSION&#125;&quot;</span><br><span class="line">    container_name: elasticsearch</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;9200:9200&quot;</span><br><span class="line">      - &quot;9300:9300&quot;</span><br><span class="line">    environment:</span><br><span class="line">      ES_JAVA_OPTS: &quot;-Xmx1024m -Xms1024m&quot;</span><br><span class="line">    #command: [&quot;bash&quot;, &quot;-c&quot;, &quot;echo &#39;discovery.type: single-node&#39;&gt;&gt;&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;config&#x2F;elasticsearch.yml; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-entrypoint.sh eswrapper&quot;]</span><br><span class="line">    command: [&quot;bash&quot;, &quot;-c&quot;, &quot;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-entrypoint.sh eswrapper&quot;]</span><br><span class="line">    # Ik 分词器的安装</span><br><span class="line">    volumes:</span><br><span class="line">       - .&#x2F;es-plugin&#x2F;ik:&#x2F;usr&#x2F;share&#x2F;elasticsearch&#x2F;plugins&#x2F;ik</span><br><span class="line">    networks:</span><br><span class="line">      - elk</span><br><span class="line"></span><br><span class="line">  logstash:</span><br><span class="line">    image: &quot;logstash:$&#123;ELK_VERSION&#125;&quot;</span><br><span class="line">    container_name: logstash</span><br><span class="line">    volumes:</span><br><span class="line">      - .&#x2F;logstash&#x2F;pipeline:&#x2F;usr&#x2F;share&#x2F;logstash&#x2F;pipeline:ro</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;5000:5000&quot;</span><br><span class="line">    environment:</span><br><span class="line">      LS_JAVA_OPTS: &quot;-Xmx256m -Xms256m&quot;</span><br><span class="line">    depends_on:</span><br><span class="line">      - elasticsearch</span><br><span class="line">    command: [&quot;bash&quot;, &quot;-c&quot;, &quot;echo &#39;path.config: &#x2F;usr&#x2F;share&#x2F;logstash&#x2F;pipeline&#39;&gt;&gt;&#x2F;usr&#x2F;share&#x2F;logstash&#x2F;config&#x2F;logstash.yml; &#x2F;usr&#x2F;local&#x2F;bin&#x2F;docker-entrypoint&quot;]</span><br><span class="line">    networks:</span><br><span class="line">      - elk</span><br><span class="line"></span><br><span class="line">  kibana:</span><br><span class="line">    image: &quot;kibana:$&#123;ELK_VERSION&#125;&quot;</span><br><span class="line">    container_name: kibana</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;5601:5601&quot;</span><br><span class="line">    depends_on:</span><br><span class="line">      - elasticsearch</span><br><span class="line">    networks:</span><br><span class="line">      - elk</span><br><span class="line"></span><br><span class="line">networks:</span><br><span class="line">  elk:</span><br><span class="line">    driver: bridge</span><br></pre></td></tr></table></figure></li></ul><h2><span id="fang-wen-fu-wu">访问服务</span><a href="#fang-wen-fu-wu" class="header-anchor"></a></h2><ul><li>访问 Es :  <a href="http://localhost:9200/" target="_blank" rel="noopener">http://localhost:9200/</a></li><li>访问 kibana : <a href="http://localhost:5601" target="_blank" rel="noopener">http://localhost:5601</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 打开dev Tools</span><br><span class="line">2. 在窗口进行查询 :  GET &#x2F;_search</span><br></pre></td></tr></table></figure><h2><span id="ik-fen-ci-qi-shi-fou-an-zhuang-cheng-gong-zai-kibana-shang-zhi-xing-cao-zuo">IK 分词器是否安装成功,在 kibana 上执行操作</span><a href="#ik-fen-ci-qi-shi-fou-an-zhuang-cheng-gong-zai-kibana-shang-zhi-xing-cao-zuo" class="header-anchor"></a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">GET &#x2F;_analyze</span><br><span class="line">&#123;</span><br><span class="line">  &quot;analyzer&quot;: &quot;ik_max_word&quot;,</span><br><span class="line">  &quot;text&quot;:&quot;你好，我是中国人&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">返回的结果:</span><br><span class="line">&#123;</span><br><span class="line">  &quot;tokens&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;你好&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 0,</span><br><span class="line">      &quot;end_offset&quot; : 2,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 0</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;我&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 3,</span><br><span class="line">      &quot;end_offset&quot; : 4,</span><br><span class="line">      &quot;type&quot; : &quot;CN_CHAR&quot;,</span><br><span class="line">      &quot;position&quot; : 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;是&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 4,</span><br><span class="line">      &quot;end_offset&quot; : 5,</span><br><span class="line">      &quot;type&quot; : &quot;CN_CHAR&quot;,</span><br><span class="line">      &quot;position&quot; : 2</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;中国人&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 5,</span><br><span class="line">      &quot;end_offset&quot; : 8,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 3</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;中国&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 5,</span><br><span class="line">      &quot;end_offset&quot; : 7,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 4</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;token&quot; : &quot;国人&quot;,</span><br><span class="line">      &quot;start_offset&quot; : 6,</span><br><span class="line">      &quot;end_offset&quot; : 8,</span><br><span class="line">      &quot;type&quot; : &quot;CN_WORD&quot;,</span><br><span class="line">      &quot;position&quot; : 5</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="kibana-cao-zuo-es-zeng-shan-gai-cha-cao-zuo">kibana 操作 Es 增删该查操作</span><a href="#kibana-cao-zuo-es-zeng-shan-gai-cha-cao-zuo" class="header-anchor"></a></h2><h3><span id="gai-nian">概念</span><a href="#gai-nian" class="header-anchor"></a></h3><ul><li>类比:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Relational DB -&gt; Databases -&gt; Tables -&gt; Rows -&gt; Columns</span><br><span class="line">Elasticsearch -&gt; Indices   -&gt; Types  -&gt; Documents -&gt; Fields</span><br></pre></td></tr></table></figure><h3><span id="kibana-dui-es-zeng-shan-gai-cha">kibana 对 es 增删改查</span><a href="#kibana-dui-es-zeng-shan-gai-cha" class="header-anchor"></a></h3><ul><li><p>概念文档:  <a href="http://blog.didispace.com/books/elasticsearch-definitive-guide-cn/010_Intro/00_README.html" target="_blank" rel="noopener">http://blog.didispace.com/books/elasticsearch-definitive-guide-cn/010_Intro/00_README.html</a></p></li><li><p>例子文档:  <a href="https://blog.csdn.net/u014646662/category_8747782_2.html" target="_blank" rel="noopener">https://blog.csdn.net/u014646662/category_8747782_2.html</a></p></li></ul><ul><li>查看集群健康信息</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">GET &#x2F;_cat&#x2F;health?v</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Green（正常）</span><br><span class="line">Yellow（正常，但是一些副本还没有分配）</span><br><span class="line">Red（非正常）</span><br></pre></td></tr></table></figure><ul><li>查看集群，索引，分片情况:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">GET &#x2F;_cat&#x2F;indices?v&amp;h&#x3D;health,status,index</span><br></pre></td></tr></table></figure><ul><li>查看查询全部内容</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">GET &#x2F;_search</span><br></pre></td></tr></table></figure><ul><li>增加一个 document 内容,格式 : POST /{index}/{type}   不加 id 则系统默认给出一个 id</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">POST &#x2F;db-1&#x2F;tab-1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;cn-name&quot;:&quot;赖豪达&quot;,</span><br><span class="line">  &quot;en-name&quot;:&quot;samlai&quot;,</span><br><span class="line">  &quot;age&quot;:28,</span><br><span class="line">  &quot;content&quot;:&quot;我的简介操作....&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">返回的结果:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;_index&quot; : &quot;db-1&quot;,</span><br><span class="line">  &quot;_type&quot; : &quot;tab-1&quot;,</span><br><span class="line">  &quot;_id&quot; : &quot;dZc56m8BVtcun_3JvbEQ&quot;,</span><br><span class="line">  &quot;_version&quot; : 1,</span><br><span class="line">  &quot;result&quot; : &quot;created&quot;,</span><br><span class="line">  &quot;_shards&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : 2,</span><br><span class="line">    &quot;successful&quot; : 1,</span><br><span class="line">    &quot;failed&quot; : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;_seq_no&quot; : 1,</span><br><span class="line">  &quot;_primary_term&quot; : 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">or 自己指定一个 id :</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST &#x2F;db-1&#x2F;tab-1&#x2F;1</span><br><span class="line">&#123;</span><br><span class="line">  &quot;cn-name&quot;:&quot;赖豪达&quot;,</span><br><span class="line">  &quot;en-name&quot;:&quot;samlai&quot;,</span><br><span class="line">  &quot;age&quot;:28,</span><br><span class="line">  &quot;content&quot;:&quot;我的简介操作....&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>删除一个 document 内容: DELETE /{index}/{type}/{id}</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">DELETE db-1&#x2F;tab-1&#x2F;dJcs6m8BVtcun_3JbrGq</span><br></pre></td></tr></table></figure><ul><li>修改的操作,分覆盖全部 与 修改某些字段:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1. </span><br><span class="line"></span><br><span class="line">覆盖全部字段:</span><br><span class="line"></span><br><span class="line">PUT &#x2F;db-1&#x2F;tab-1&#x2F;2</span><br><span class="line">&#123;</span><br><span class="line">  &quot;cn-name&quot;:&quot;赖豪达0002  修改---&quot;,</span><br><span class="line">  &quot;en-name&quot;:&quot;samlai0002&quot;,</span><br><span class="line">  &quot;age&quot;:28,</span><br><span class="line">  &quot;content&quot;:&quot;我的简介操作....0002&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2.</span><br><span class="line"></span><br><span class="line">修改某些字段内容:</span><br><span class="line"></span><br><span class="line">POST db-1&#x2F;tab-1&#x2F;1&#x2F;_update</span><br><span class="line">&#123;</span><br><span class="line">  &quot;doc&quot;: &#123;</span><br><span class="line">    &quot;en-name&quot;:&quot;我的英文名字是:赖豪达&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">返回结果:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;_index&quot; : &quot;db-1&quot;,</span><br><span class="line">  &quot;_type&quot; : &quot;tab-1&quot;,</span><br><span class="line">  &quot;_id&quot; : &quot;1&quot;,</span><br><span class="line">  &quot;_version&quot; : 2,</span><br><span class="line">  &quot;result&quot; : &quot;noop&quot;,</span><br><span class="line">  &quot;_shards&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : 0,</span><br><span class="line">    &quot;successful&quot; : 0,</span><br><span class="line">    &quot;failed&quot; : 0</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>查询一个 document 内容 : GET /{index}/{type}/{id}</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">1.</span><br><span class="line"></span><br><span class="line">GET db-1&#x2F;tab-1&#x2F;dJcs6m8BVtcun_3JbrGq</span><br><span class="line"></span><br><span class="line">返回结果:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;_index&quot; : &quot;db-1&quot;,</span><br><span class="line">  &quot;_type&quot; : &quot;tab-1&quot;,</span><br><span class="line">  &quot;_id&quot; : &quot;dZc56m8BVtcun_3JvbEQ&quot;,</span><br><span class="line">  &quot;_version&quot; : 1,</span><br><span class="line">  &quot;found&quot; : true,</span><br><span class="line">  &quot;_source&quot; : &#123;</span><br><span class="line">    &quot;cn-name&quot; : &quot;赖豪达&quot;,</span><br><span class="line">    &quot;en-name&quot; : &quot;samlai&quot;,</span><br><span class="line">    &quot;age&quot; : 28,</span><br><span class="line">    &quot;content&quot; : &quot;我的简介操作....&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2.</span><br><span class="line"></span><br><span class="line">GET db-1&#x2F;tab-1&#x2F;dJcs6m8BVtcun_3JbrGq&#x2F;_source</span><br><span class="line"></span><br><span class="line">返回结果:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;cn-name&quot; : &quot;赖豪达&quot;,</span><br><span class="line">  &quot;en-name&quot; : &quot;samlai&quot;,</span><br><span class="line">  &quot;age&quot; : 28,</span><br><span class="line">  &quot;content&quot; : &quot;我的简介操作....&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="es-yu-fa-gao-liang-cha-xun">Es 语法高亮查询</span><a href="#es-yu-fa-gao-liang-cha-xun" class="header-anchor"></a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">GET db-1&#x2F;tab-1&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">  &quot;term&quot;: &#123;</span><br><span class="line">    &quot;cn-name&quot;: &quot;0018&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;highlight&quot;: &#123;</span><br><span class="line">    &quot;fields&quot;: &#123;</span><br><span class="line">      &quot;cn-name&quot;: &#123;</span><br><span class="line">        &quot;pre_tags&quot;:[&quot;&lt;mark&gt;&quot;],</span><br><span class="line">        &quot;post_tags&quot;:[&quot;&lt;&#x2F;mark&gt;&quot;]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">返回结果:</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;took&quot; : 46,</span><br><span class="line">  &quot;timed_out&quot; : false,</span><br><span class="line">  &quot;_shards&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : 5,</span><br><span class="line">    &quot;successful&quot; : 5,</span><br><span class="line">    &quot;skipped&quot; : 0,</span><br><span class="line">    &quot;failed&quot; : 0</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;hits&quot; : &#123;</span><br><span class="line">    &quot;total&quot; : 1,</span><br><span class="line">    &quot;max_score&quot; : 2.5389738,</span><br><span class="line">    &quot;hits&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;_index&quot; : &quot;db-1&quot;,</span><br><span class="line">        &quot;_type&quot; : &quot;tab-1&quot;,</span><br><span class="line">        &quot;_id&quot; : &quot;18&quot;,</span><br><span class="line">        &quot;_score&quot; : 2.5389738,</span><br><span class="line">        &quot;_source&quot; : &#123;</span><br><span class="line">          &quot;cn-name&quot; : &quot;0018&quot;,</span><br><span class="line">          &quot;en-name&quot; : &quot;java samlai18&quot;,</span><br><span class="line">          &quot;age&quot; : 28,</span><br><span class="line">          &quot;content&quot; : &quot; 内容  --&gt;18&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;highlight&quot; : &#123;</span><br><span class="line">          &quot;cn-name&quot; : [</span><br><span class="line">            &quot;&lt;mark&gt;0018&lt;&#x2F;mark&gt;&quot;</span><br><span class="line">          ]</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2><span id="es-cha-xun-fen-lei-query-string-search-query-dsl">Es 查询分类 :  query string search  /  query DSL</span><a href="#es-cha-xun-fen-lei-query-string-search-query-dsl" class="header-anchor"></a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">第一种：类似搜索全部商品： GET &#x2F;ecommerce&#x2F;product&#x2F;_search (参数直接拼接在请求上，不带json参数的)</span><br><span class="line"></span><br><span class="line">　　　　　　query  string search的由来，因为search参数都是以http请求的query string来附带的。</span><br><span class="line"></span><br><span class="line">　　　　　　搜索商品名称中包含yagao的商品，而且按照售价降序排列：</span><br><span class="line"></span><br><span class="line">　　　　　　　　 GET &#x2F;ecommerce&#x2F;product&#x2F;_search?q&#x3D;name:yagao&amp;sort&#x3D;price:desc</span><br><span class="line"></span><br><span class="line">　　　　　　适用于临时的在命令行使用一些工具，比如curl，快速的发出请求，来检索想要的信息；但是</span><br><span class="line"></span><br><span class="line">　　　　　　如果查询请求很复杂，是很难去构建的，所以在生产环境中，几乎很少使用query string search。</span><br><span class="line"></span><br><span class="line">　　第二种：DSL：Domain Specified Language,特定领域的语言</span><br><span class="line"></span><br><span class="line">　　　　　　http request body:请求体，可以用json的格式来构建查询语法，比较方便，可以构建各种复杂的语法，</span><br><span class="line"></span><br><span class="line">　　　　　　比query string search肯定强大太多了。</span><br></pre></td></tr></table></figure><h2><span id="full-text-search-quan-wen-jian-suo-phrase-search-duan-yu-sou-suo">full-text search 全文检索   |   phrase search  短语搜索</span><a href="#full-text-search-quan-wen-jian-suo-phrase-search-duan-yu-sou-suo" class="header-anchor"></a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">全文检索:</span><br><span class="line">会将输入的搜索串拆解开来，去索引里面去一一匹配，只要能匹配任意一个拆解后的单词，就可以作为结果返回</span><br><span class="line"></span><br><span class="line">短语搜索:</span><br><span class="line">要求输入的搜索串，必须在指定的字段文本中，完全包含一模一样的，才可以算匹配成功，才能作为结果返回</span><br></pre></td></tr></table></figure><ul><li>多条件查询中的字段描述</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">must：　　表示一定要满足；</span><br><span class="line"></span><br><span class="line">　　should：　　表示可以满足也可以不满足；</span><br><span class="line"></span><br><span class="line">　　must_not：　　表示不能满足该条件；</span><br><span class="line"></span><br><span class="line">　　minimum_should_match:1    ：表示最小匹配度，可以设置为百分之百，设置了这个值的时候就必须满足should里面的设置了，</span><br><span class="line"></span><br><span class="line">　　　　另外注意这边should里面同一字段设置的多个值，意思是当这个值等于X或者等于Y都成立，务必注意格式。</span><br></pre></td></tr></table></figure><h2><span id="es-pi-liang-de-cao-zuo">Es批量的操作</span><a href="#es-pi-liang-de-cao-zuo" class="header-anchor"></a></h2><ul><li>针对批量插入的限制: 一般建议是1000-5000个文档，大小建议是5-15MB，默认不能超过100M，可以在es的配置文件（即$ES_HOME下的config下的elasticsearch.yml）中</li></ul><ul><li>批量的查询(kibana操作)</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">GET &#x2F;_mget</span><br><span class="line">&#123;</span><br><span class="line">  &quot;docs&quot;:</span><br><span class="line">  [</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;_index&quot;  :  &quot;db-1&quot;,</span><br><span class="line">        &quot;_type&quot;   :  &quot;tab-1&quot;,</span><br><span class="line">        &quot;_id&quot;    :  &quot;1&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">   &#123;</span><br><span class="line">        &quot;_index&quot;  :  &quot;db-1&quot;,</span><br><span class="line">        &quot;_type&quot;   :  &quot;tab-1&quot;,</span><br><span class="line">        &quot;_id&quot;    :  &quot;2&quot;</span><br><span class="line">    &#125;</span><br><span class="line">   ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>批量查询 id 的集合的数据:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET db-1&#x2F;tab-1&#x2F;_mget</span><br><span class="line">&#123;</span><br><span class="line">  &quot;ids&quot;:[&quot;1&quot;,&quot;2&quot;,&quot;3&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>批量的增加: _bulk:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;db-1&#x2F;tab-1&#x2F;_bulk</span><br><span class="line">&#123;&quot;index&quot;:&#123;&quot;_id&quot;:1&#125;&#125;</span><br><span class="line">&#123;&quot;title&quot;:&quot;Java&quot;,&quot;price&quot;:55&#125;</span><br><span class="line">&#123;&quot;index&quot;:&#123;&quot;_id&quot;:2&#125;&#125;</span><br><span class="line">&#123;&quot;title&quot;:&quot;Html5&quot;,&quot;price&quot;:45&#125;</span><br><span class="line">&#123;&quot;index&quot;:&#123;&quot;_id&quot;:3&#125;&#125;</span><br><span class="line">&#123;&quot;title&quot;:&quot;Php&quot;,&quot;price&quot;:35&#125;</span><br><span class="line">&#123;&quot;index&quot;:&#123;&quot;_id&quot;:4&#125;&#125;</span><br><span class="line">&#123;&quot;title&quot;:&quot;Python&quot;,&quot;price&quot;:50&#125;</span><br></pre></td></tr></table></figure><h2><span id="es-he-xin-de-cao-zuo-huan-shi-cha-xun-cao-zuo-shi-yong-query-dsl-qing-qiu-cha-xun">Es 核心的操作还是查询操作: 使用query DSL 请求查询</span><a href="#es-he-xin-de-cao-zuo-huan-shi-cha-xun-cao-zuo-shi-yong-query-dsl-qing-qiu-cha-xun" class="header-anchor"></a></h2><ul><li>参考文章 :  <a href="https://www.cnblogs.com/liuqijia/p/11507494.html" target="_blank" rel="noopener">https://www.cnblogs.com/liuqijia/p/11507494.html</a> </li></ul><ul><li>match 分页查询:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET db-1&#x2F;tab-1&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">  &quot;match_all&quot; : &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;from&quot;: 0,</span><br><span class="line">  &quot;size&quot;: 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>根据字段 age 的倒序的查询:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET db-1&#x2F;tab-1&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_all&quot; : &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;sort&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;age&quot;: &quot;desc&quot;</span><br><span class="line">      &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>指定查询项 :  只查询出 content 的字段内容:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GET db-1&#x2F;tab-1&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">  &quot;match_all&quot; : &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;_source&quot;: &quot;content&quot;, </span><br><span class="line">  &quot;from&quot;: 0,</span><br><span class="line">  &quot;size&quot;: 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>matchAll 操作: 全查询 但显示仅仅是 5条记录</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">GET db-1&#x2F;tab-1&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">  &quot;match_all&quot; : &#123;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">返回结果:  5条记录</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">+ 过滤查询 : 匹配查询 cn-name &#x3D; ELK  </span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;text</span><br><span class="line"></span><br><span class="line">GET db-1&#x2F;tab-1&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot;: &#123;</span><br><span class="line">      &quot;must&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">          &quot;match&quot;: &#123;</span><br><span class="line">            &quot;cn-name&quot;: &quot;ELK&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>全文检索:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET db-1&#x2F;tab-1&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match&quot;: &#123;</span><br><span class="line">      &quot;content&quot;: &quot;97&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li>短语检索:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">GET db-1&#x2F;tab-1&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;match_phrase&quot;: &#123;</span><br><span class="line">      &quot;content&quot;: &quot; 内容  --&gt;9&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>复合查询:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">GET db-1&#x2F;tab-1&#x2F;_search</span><br><span class="line">&#123;</span><br><span class="line">  &quot;from&quot;: 10,</span><br><span class="line">  &quot;size&quot;: 20, </span><br><span class="line">  &quot;sort&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;age&quot;: &#123;</span><br><span class="line">        &quot;order&quot;: &quot;desc&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ], </span><br><span class="line">  &quot;query&quot;: &#123;</span><br><span class="line">    &quot;bool&quot; : &#123;</span><br><span class="line">    &quot;must&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;match&quot; : &#123;</span><br><span class="line">          &quot;content&quot; : &#123;</span><br><span class="line">            &quot;query&quot; : &quot; 内容&quot;,</span><br><span class="line">            &quot;operator&quot; : &quot;OR&quot;,</span><br><span class="line">            &quot;prefix_length&quot; : 0,</span><br><span class="line">            &quot;max_expansions&quot; : 50,</span><br><span class="line">            &quot;fuzzy_transpositions&quot; : true,</span><br><span class="line">            &quot;lenient&quot; : false,</span><br><span class="line">            &quot;zero_terms_query&quot; : &quot;NONE&quot;,</span><br><span class="line">            &quot;auto_generate_synonyms_phrase_query&quot; : true,</span><br><span class="line">            &quot;boost&quot; : 1.0</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;filter&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;range&quot; : &#123;</span><br><span class="line">          &quot;age&quot; : &#123;</span><br><span class="line">            &quot;from&quot; : &quot;5&quot;,</span><br><span class="line">            &quot;to&quot; : &quot;25&quot;,</span><br><span class="line">            &quot;include_lower&quot; : true,</span><br><span class="line">            &quot;include_upper&quot; : true,</span><br><span class="line">            &quot;boost&quot; : 1.0</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;must_not&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;term&quot; : &#123;</span><br><span class="line">          &quot;age&quot; : &#123;</span><br><span class="line">            &quot;value&quot; : &quot;90&quot;,</span><br><span class="line">            &quot;boost&quot; : 1.0</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;should&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;range&quot; : &#123;</span><br><span class="line">          &quot;age&quot; : &#123;</span><br><span class="line">            &quot;from&quot; : &quot;10&quot;,</span><br><span class="line">            &quot;to&quot; : &quot;20&quot;,</span><br><span class="line">            &quot;include_lower&quot; : true,</span><br><span class="line">            &quot;include_upper&quot; : true,</span><br><span class="line">            &quot;boost&quot; : 1.0</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;adjust_pure_negative&quot; : true,</span><br><span class="line">    &quot;boost&quot; : 1.0</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      docker 部署使用 ELk
    
    </summary>
    
    
      <category term="elk" scheme="https://zuoyoulai.github.io/categories/elk/"/>
    
    
      <category term="docker" scheme="https://zuoyoulai.github.io/tags/docker/"/>
    
      <category term="elk" scheme="https://zuoyoulai.github.io/tags/elk/"/>
    
  </entry>
  
  <entry>
    <title>mybatis-batch 批处理</title>
    <link href="https://zuoyoulai.github.io/2020/01/22/mybatis-batch/"/>
    <id>https://zuoyoulai.github.io/2020/01/22/mybatis-batch/</id>
    <published>2020-01-22T07:27:01.000Z</published>
    <updated>2020-01-22T07:40:34.345Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#pi-liang-chu-li-fang-shi">批量处理方式</a></li><li><a href="#yi-shang-3-chong-de-you-lie">以上3种的优劣:</a></li><li><a href="#li-zi-demo">例子demo</a></li></ul><!-- tocstop --></div><h3><span id="pi-liang-chu-li-fang-shi">批量处理方式</span><a href="#pi-liang-chu-li-fang-shi" class="header-anchor"></a></h3><ul><li>原生的JDBC  :  这种方式最快，代码比较麻烦</li><li>Mybatis 的 ExecutorType.BATCH ：代码编写比较简单，数据库连接需要添加allowMultiQueries=true</li><li>Mybatis 动态 sql拼接方式</li></ul><h3><span id="yi-shang-3-chong-de-you-lie">以上3种的优劣:</span><a href="#yi-shang-3-chong-de-you-lie" class="header-anchor"></a></h3><ul><li><a href="https://blog.csdn.net/qq_40144558/article/details/93981183" target="_blank" rel="noopener">参考文章: 关于Mybatis批量插入使用JDBC原生batch批处理以及mybatis的ExecutorType.BATCH的批处理和Mybatis的动态sql语句批处理</a></li></ul><h3><span id="li-zi-demo">例子demo</span><a href="#li-zi-demo" class="header-anchor"></a></h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  batch insert</span></span><br><span class="line"><span class="comment">     *  表数据准备</span></span><br><span class="line"><span class="comment">     *  create table `kt_1_trigger_logs` like  kt_merchant_id_trigger_logs;</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *  批量处理 : 添加 200w条数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">batch</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.BATCH);</span><br><span class="line"></span><br><span class="line">            SubMerchantIdTriggerLogsMapper subMerchantIdTriggerLogsMapper = (SubMerchantIdTriggerLogsMapper) sqlSession.getMapper(SubMerchantIdTriggerLogsMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">200</span>; j++) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">                    SubMerchantIdTriggerLogs logs = <span class="keyword">new</span> SubMerchantIdTriggerLogs();</span><br><span class="line">                    logs.setAppId(appId);</span><br><span class="line">                    logs.setMerchantId(merchantId);</span><br><span class="line"></span><br><span class="line">                    logs.setSdkType(test_str);</span><br><span class="line">                    logs.setSource(test_str);</span><br><span class="line">                    logs.setTriggeredAt(<span class="keyword">new</span> Date());</span><br><span class="line">                    logs.setUserid(Tools.getRandStr());</span><br><span class="line">                    logs.setDeviceid(Tools.getRandStr(<span class="number">5</span>));</span><br><span class="line">                    logs.setConditions(<span class="string">""</span>);</span><br><span class="line">                    <span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                        logs.setIp(Tools.getRandStr(<span class="number">5</span>));</span><br><span class="line">                        logs.setUpdatedAt(<span class="keyword">new</span> Date());</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        logs.setIp(<span class="string">""</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    logs.setCreatedAt(<span class="keyword">new</span> Date());</span><br><span class="line">      </span><br><span class="line">                    subMerchantIdTriggerLogsMapper.insertSelective(logs);</span><br><span class="line">                &#125;</span><br><span class="line">                sqlSession.commit();</span><br><span class="line">            &#125;</span><br><span class="line">            sqlSession.close();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">            log.error(ex.getMessage(), ex);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  batch update</span></span><br><span class="line"><span class="comment">     *  批量的 update 的操作 :  校验出，有些字段有有些没有的话则相应的更新的</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">batchUpdate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.BATCH);</span><br><span class="line">            SubMerchantIdTriggerLogsMapper subMerchantIdTriggerLogsMapper = (SubMerchantIdTriggerLogsMapper) sqlSession.getMapper(SubMerchantIdTriggerLogsMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">                SubMerchantIdTriggerLogs subMerchantIdTriggerLogs = <span class="keyword">new</span> SubMerchantIdTriggerLogs();</span><br><span class="line">                subMerchantIdTriggerLogs.setMerchantId(merchantId);</span><br><span class="line">                subMerchantIdTriggerLogs.setId(i);</span><br><span class="line">                <span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    subMerchantIdTriggerLogs.setIp(<span class="string">""</span>);</span><br><span class="line">                    subMerchantIdTriggerLogs.setSdkVersion(<span class="string">""</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                subMerchantIdTriggerLogs.setUpdatedAt(<span class="keyword">new</span> Date());</span><br><span class="line">                subMerchantIdTriggerLogsMapper.updateByPrimaryKeySelective(subMerchantIdTriggerLogs);</span><br><span class="line">            &#125;</span><br><span class="line">            sqlSession.commit();</span><br><span class="line">            sqlSession.close();</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">            log.error(ex.getMessage(), ex);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 批量更新后的操作断言</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateAfterDo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            SqlSession sqlSession = sqlSessionFactory.openSession(ExecutorType.BATCH,Boolean.FALSE);</span><br><span class="line">            SubMerchantIdTriggerLogsMapper subMerchantIdTriggerLogsMapper = (SubMerchantIdTriggerLogsMapper) sqlSession.getMapper(SubMerchantIdTriggerLogsMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">            List&lt;SubMerchantIdTriggerLogs&gt; list = Lists.newArrayList();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">                SubMerchantIdTriggerLogs logs = <span class="keyword">new</span> SubMerchantIdTriggerLogs();</span><br><span class="line">                logs.setAppId(appId);</span><br><span class="line">                logs.setMerchantId(merchantId);</span><br><span class="line"></span><br><span class="line">                logs.setSdkType(test_str);</span><br><span class="line">                logs.setSource(test_str);</span><br><span class="line">                logs.setTriggeredAt(<span class="keyword">new</span> Date());</span><br><span class="line">                logs.setUserid(Tools.getRandStr());</span><br><span class="line">                logs.setDeviceid(Tools.getRandStr(<span class="number">5</span>));</span><br><span class="line">                logs.setConditions(<span class="string">""</span>);</span><br><span class="line">                <span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                    logs.setIp(Tools.getRandStr(<span class="number">5</span>));</span><br><span class="line">                    logs.setUpdatedAt(<span class="keyword">new</span> Date());</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    logs.setIp(<span class="string">""</span>);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                logs.setCreatedAt(<span class="keyword">new</span> Date());</span><br><span class="line">      </span><br><span class="line">                list.add(logs);</span><br><span class="line">                subMerchantIdTriggerLogsMapper.insertSelective(logs);</span><br><span class="line">            &#125;</span><br><span class="line">            sqlSession.commit();</span><br><span class="line">            <span class="comment">//刷新执行结果可以进行断言操作  [发现有无这个执行都可以拿到新增 insert data 的 id 的]</span></span><br><span class="line"><span class="comment">//            sqlSession.flushStatements();</span></span><br><span class="line">            <span class="comment">//清除缓存</span></span><br><span class="line"><span class="comment">//            sqlSession.clearCache();</span></span><br><span class="line">            sqlSession.close();</span><br><span class="line">            list.forEach(x-&gt;&#123;</span><br><span class="line">                log.info(JSON.toJSONString(x));</span><br><span class="line">            &#125;);</span><br><span class="line">            list.clear();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception ex) &#123;</span><br><span class="line">            log.error(ex.getMessage(), ex);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      mybatis-batch 批处理
    
    </summary>
    
    
      <category term="mybatis" scheme="https://zuoyoulai.github.io/categories/mybatis/"/>
    
    
      <category term="mybatis" scheme="https://zuoyoulai.github.io/tags/mybatis/"/>
    
      <category term="sql" scheme="https://zuoyoulai.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>运维Redis服务信息</title>
    <link href="https://zuoyoulai.github.io/2020/01/13/Redis%E6%9C%8D%E5%8A%A1%E4%BF%A1%E6%81%AF/"/>
    <id>https://zuoyoulai.github.io/2020/01/13/Redis%E6%9C%8D%E5%8A%A1%E4%BF%A1%E6%81%AF/</id>
    <published>2020-01-13T14:30:59.000Z</published>
    <updated>2020-01-13T14:38:45.897Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="yun-wei-redis-fu-wu-xin-xi">运维Redis服务信息</span><a href="#yun-wei-redis-fu-wu-xin-xi" class="header-anchor"></a></h2><div class="toc"><!-- toc --><ul><li><a href="#redis-dui-lie-xiao-fei-wen-ti">redis 队列消费问题</a><ul><li><a href="#shu-ju-biao-de-zhun-bei">数据表的准备</a></li><li><a href="#xi-tong-redis-pei-zhi">系统 redis 配置</a></li><li><a href="#redis-lian-jie-chi-ji-ben-pei-zhi-shuo-ming">redis 连接池基本配置说明</a></li><li><a href="#jin-ru-redis-de-rong-qi-de-zhi-ling-cao-zuo">进入 redis 的容器的指令操作</a></li></ul></li></ul><!-- tocstop --></div><h2><span id="redis-dui-lie-xiao-fei-wen-ti">redis 队列消费问题</span><a href="#redis-dui-lie-xiao-fei-wen-ti" class="header-anchor"></a></h2><ul><li>参考文章: <a href="https://mp.weixin.qq.com/s/4DYdDEHpiLs8aoW6y9k4Mw" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/4DYdDEHpiLs8aoW6y9k4Mw</a></li></ul><h3><span id="shu-ju-biao-de-zhun-bei">数据表的准备</span><a href="#shu-ju-biao-de-zhun-bei" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table &#96;xx_tbl&#96; like  model_tbl;</span><br><span class="line"></span><br><span class="line">example:</span><br><span class="line"></span><br><span class="line">create table &#96;xx_tbl&#96; like  model_tbl;</span><br></pre></td></tr></table></figure><h3><span id="xi-tong-redis-pei-zhi">系统 redis 配置</span><a href="#xi-tong-redis-pei-zhi" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#rdb backup</span><br><span class="line">save 300 10</span><br><span class="line"></span><br><span class="line">#aof backup</span><br><span class="line">#是否开启持久化策略</span><br><span class="line">appendonly yes</span><br><span class="line"></span><br><span class="line">#yes: 在aof重写期间不做fsync刷盘操作，可能丢失整个AOF重写期间的数据</span><br><span class="line">no-appendfsync-on-rewrite  yes</span><br></pre></td></tr></table></figure><h3><span id="redis-lian-jie-chi-ji-ben-pei-zhi-shuo-ming">redis 连接池基本配置说明</span><a href="#redis-lian-jie-chi-ji-ben-pei-zhi-shuo-ming" class="header-anchor"></a></h3><ul><li>redis.pool.maxTotal=1000   :  最大活动对象数</li><li>redis.pool.maxIdle=100 最大能够保持idel状态的对象数</li><li>redis.pool.minIdle=50  最小能够保持idel状态的对象数</li></ul><h3><span id="jin-ru-redis-de-rong-qi-de-zhi-ling-cao-zuo">进入 redis 的容器的指令操作</span><a href="#jin-ru-redis-de-rong-qi-de-zhi-ling-cao-zuo" class="header-anchor"></a></h3><ul><li><p>docker ps</p></li><li><p>docker exec -it [containerid] /bin/bash</p></li><li><p>docker exec -it [containerid] redis-cli -a root </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">docker exec -it 77ae redis-cli</span><br><span class="line">进入指令窗口,进行 root 操作:</span><br><span class="line">&gt;&gt; auth [your password]</span><br><span class="line"></span><br><span class="line">进入指令操作:</span><br><span class="line">docker exec -it 77ae redis-cli -a root</span><br></pre></td></tr></table></figure></li><li><p>监控redis的磁盘使用情况与 clients 的连接数: redis-cli –stat -i 10</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; docker exec -it 77ae redis-cli -a root --stat -i 10   [不安全的写法,因为密码写在明文上]</span><br><span class="line"></span><br><span class="line">打出指令进行监控的操作,定时的刷出日志内容:  【单位是: 10s】</span><br><span class="line"></span><br><span class="line">------- data ------ --------------------- load -------------------- - child -</span><br><span class="line">keys       mem      clients blocked requests            connections          </span><br><span class="line">11         5.55M    3       0       312130 (+917)       690</span><br></pre></td></tr></table></figure></li><li><p>查看 redis 某个节点的网络延迟: redis-cli –latentcy  -h 127.0.0.1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; docker exec -it 77ae redis-cli -a root --latency -h 127.0.0.1</span><br><span class="line"></span><br><span class="line">min: 0, max: 7, avg: 0.25 (15009 samples)</span><br><span class="line"></span><br><span class="line">avg：0.25，即延迟为250μs。如果通过外网连接网络延迟会很高，比如跨机房的redis调用，延迟高的情况下使用redis反而比使用本地硬盘读写性能更差</span><br></pre></td></tr></table></figure></li></ul><h4><span id="ming-ling-zhi-ling">命令指令</span><a href="#ming-ling-zhi-ling" class="header-anchor"></a></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">key &#x3D;  trigger_log_list</span><br><span class="line"></span><br><span class="line">查看链表的长度:</span><br><span class="line">&gt;&gt; llen trigger_log_list</span><br><span class="line"></span><br><span class="line">查看链表的数据:</span><br><span class="line">&gt;&gt; lrange trigger_log_list 0 10</span><br></pre></td></tr></table></figure><h4><span id="jian-kong-de-zhi-ling-cao-zuo">监控的指令操作</span><a href="#jian-kong-de-zhi-ling-cao-zuo" class="header-anchor"></a></h4><ul><li>查看 redis 当前的连接数 : info clients</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># Clients</span><br><span class="line">connected_clients:12</span><br><span class="line">client_recent_max_input_buffer:2</span><br><span class="line">client_recent_max_output_buffer:0</span><br><span class="line">blocked_clients:0</span><br><span class="line">&#96;&#96;&#96; </span><br><span class="line"></span><br><span class="line">+ 查询redis允许的最大连接数 : config get maxclients</span><br><span class="line">&#96;&#96;&#96;text</span><br><span class="line">1) &quot;maxclients&quot;</span><br><span class="line">2) &quot;10000&quot;</span><br></pre></td></tr></table></figure><ul><li><p>每秒处理的命令数:  info stats</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; info stats</span><br><span class="line"># Stats</span><br><span class="line">total_connections_received:1</span><br><span class="line">total_commands_processed:2</span><br><span class="line">instantaneous_ops_per_sec:0</span><br><span class="line">total_net_input_bytes:129</span><br><span class="line">total_net_output_bytes:135</span><br><span class="line">instantaneous_input_kbps:0.00</span><br><span class="line">instantaneous_output_kbps:0.00</span><br><span class="line">rejected_connections:0</span><br><span class="line">sync_full:0</span><br><span class="line">sync_partial_ok:0</span><br><span class="line">sync_partial_err:0</span><br><span class="line">expired_keys:313904035720</span><br><span class="line">expired_stale_perc:0.00</span><br><span class="line">expired_time_cap_reached_count:0</span><br><span class="line">evicted_keys:0</span><br><span class="line">keyspace_hits:1</span><br><span class="line">keyspace_misses:0</span><br><span class="line">pubsub_channels:0</span><br><span class="line">pubsub_patterns:0</span><br><span class="line">latest_fork_usec:0</span><br><span class="line">migrate_cached_sockets:0</span><br><span class="line">politician_expires_tracked_keys:0</span><br><span class="line">active_defrag_hits:0</span><br><span class="line">active_defrag_misses:0</span><br><span class="line">active_defrag_key_hits:0</span><br><span class="line">active_defrag_key_misses:0</span><br></pre></td></tr></table></figure></li><li><p>慢日志的查询 :  slowlog get  可通过config set slowlog-log-slower-than xxx修改慢查询时间，单位微秒，默认情况下，这个值为10000</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; slowlog get</span><br><span class="line">1) 1) (integer) 0</span><br><span class="line">   2) (integer) 1578658649</span><br><span class="line">   3) (integer) 15696</span><br><span class="line">   4) 1) &quot;LRANGE&quot;</span><br><span class="line">      2) &quot;trigger_log_list_0&quot;</span><br><span class="line">      3) &quot;0&quot;</span><br><span class="line">      4) &quot;999&quot;</span><br><span class="line">   5) &quot;172.17.0.1:51742&quot;</span><br><span class="line">   6) &quot;&quot;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      运维Redis服务信息
    
    </summary>
    
    
      <category term="Redis" scheme="https://zuoyoulai.github.io/categories/Redis/"/>
    
    
      <category term="Docker" scheme="https://zuoyoulai.github.io/tags/Docker/"/>
    
      <category term="Redis" scheme="https://zuoyoulai.github.io/tags/Redis/"/>
    
      <category term="运维" scheme="https://zuoyoulai.github.io/tags/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>线上系统运行信息查看 shell 脚本</title>
    <link href="https://zuoyoulai.github.io/2020/01/09/%E7%BA%BF%E4%B8%8A%E7%B3%BB%E7%BB%9F%E8%BF%90%E8%A1%8C%E4%BF%A1%E6%81%AF%E6%9F%A5%E7%9C%8B/"/>
    <id>https://zuoyoulai.github.io/2020/01/09/%E7%BA%BF%E4%B8%8A%E7%B3%BB%E7%BB%9F%E8%BF%90%E8%A1%8C%E4%BF%A1%E6%81%AF%E6%9F%A5%E7%9C%8B/</id>
    <published>2020-01-09T10:41:03.000Z</published>
    <updated>2020-01-09T10:53:20.669Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="xian-shang-xi-tong-yun-xing-xin-xi-cha-kan-shell-jiao-ben">线上系统运行信息查看 shell 脚本</span><a href="#xian-shang-xi-tong-yun-xing-xin-xi-cha-kan-shell-jiao-ben" class="header-anchor"></a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line">project_path&#x3D;&quot;&#x2F;Users&#x2F;haodalai&#x2F;go&quot;</span><br><span class="line"></span><br><span class="line">echo &quot;显示系统磁盘分布情况&quot;</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">df -h</span><br><span class="line"></span><br><span class="line">echo &quot;&quot;</span><br><span class="line">echo &quot;&quot;</span><br><span class="line"></span><br><span class="line">echo &quot;显示文件或目录占用情况&quot;</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">du -sh $project_path</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      线上系统运行信息查看 shell 脚本
    
    </summary>
    
    
      <category term="Linux" scheme="https://zuoyoulai.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://zuoyoulai.github.io/tags/Linux/"/>
    
      <category term="Shell" scheme="https://zuoyoulai.github.io/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>每天学习一个 Linux 指令 - du 与 df 指令</title>
    <link href="https://zuoyoulai.github.io/2020/01/09/Linux-Du-Df/"/>
    <id>https://zuoyoulai.github.io/2020/01/09/Linux-Du-Df/</id>
    <published>2020-01-09T06:28:10.000Z</published>
    <updated>2020-01-09T10:39:59.858Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="linux-de-du-yu-df-zhi-ling">Linux的 du 与 df 指令</span><a href="#linux-de-du-yu-df-zhi-ling" class="header-anchor"></a></h2><div class="toc"><!-- toc --><ul><li><a href="#df-zhi-ling">df 指令</a></li><li><a href="#du-zhi-ling">du 指令</a></li></ul><!-- tocstop --></div><h3><span id="df-zhi-ling">df 指令</span><a href="#df-zhi-ling" class="header-anchor"></a></h3><ul><li>df命令用于显示目前在Linux系统上的文件系统的磁盘使用情况统计</li><li>格式 : df [选项]… [FILE]…</li><li>经常使用: df -h</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">文件-a, --all 包含所有的具有 0 Blocks 的文件系统</span><br><span class="line"></span><br><span class="line">文件--block-size&#x3D;&#123;SIZE&#125; 使用 &#123;SIZE&#125; 大小的 Blocks</span><br><span class="line"></span><br><span class="line">文件-h, --human-readable 使用人类可读的格式(预设值是不加这个选项的...)</span><br><span class="line"></span><br><span class="line">文件-H, --si 很像 -h, 但是用 1000 为单位而不是用 1024</span><br><span class="line"></span><br><span class="line">文件-i, --inodes 列出 inode 资讯，不列出已使用 block</span><br><span class="line"></span><br><span class="line">文件-k, --kilobytes 就像是 --block-size&#x3D;1024</span><br><span class="line"></span><br><span class="line">文件-l, --local 限制列出的文件结构</span><br><span class="line"></span><br><span class="line">文件-m, --megabytes 就像 --block-size&#x3D;1048576</span><br><span class="line"></span><br><span class="line">文件--no-sync 取得资讯前不 sync (预设值)</span><br><span class="line"></span><br><span class="line">文件-P, --portability 使用 POSIX 输出格式</span><br><span class="line"></span><br><span class="line">文件--sync 在取得资讯前 sync</span><br><span class="line"></span><br><span class="line">文件-t, --type&#x3D;TYPE 限制列出文件系统的 TYPE</span><br><span class="line"></span><br><span class="line">文件-T, --print-type 显示文件系统的形式</span><br><span class="line"></span><br><span class="line">文件-x, --exclude-type&#x3D;TYPE 限制列出文件系统不要显示 TYPE</span><br><span class="line"></span><br><span class="line">文件-v (忽略)</span><br><span class="line"></span><br><span class="line">文件--help 显示这个帮手并且离开</span><br><span class="line"></span><br><span class="line">文件--version 输出版本资讯并且离开</span><br></pre></td></tr></table></figure><h3><span id="du-zhi-ling">du 指令</span><a href="#du-zhi-ling" class="header-anchor"></a></h3><ul><li>du命令用于显示文件或目录所占用的磁盘空间</li><li>格式 : du [option] 文件/目录</li><li>常用 :<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">du -sh xxx  显示总目录的大小，但是不会列出目录中的每一个文件</span><br><span class="line">du -sh xxx&#x2F;*  列出xxx下每个目录和文件所占的容量</span><br><span class="line">du -h --max-depth&#x3D;1  Linux 查找占用空间最大的文件与目录</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">-a或-all 显示目录中个别文件的大小。</span><br><span class="line"></span><br><span class="line">-b或-bytes 显示目录或文件大小时，以byte为单位。</span><br><span class="line"></span><br><span class="line">-c或--total 除了显示个别目录或文件的大小外，同时也显示所有目录或文件的总和。</span><br><span class="line"></span><br><span class="line">-D或--dereference-args 显示指定符号连接的源文件大小。</span><br><span class="line"></span><br><span class="line">-h或--human-readable 以K，M，G为单位，提高信息的可读性。</span><br><span class="line"></span><br><span class="line">-H或--si 与-h参数相同，但是K，M，G是以1000为换算单位。</span><br><span class="line"></span><br><span class="line">-k或--kilobytes 以1024 bytes为单位。</span><br><span class="line"></span><br><span class="line">-l或--count-links 重复计算硬件连接的文件。</span><br><span class="line"></span><br><span class="line">-L&lt;符号连接&gt;或--dereference&lt;符号连接&gt; 显示选项中所指定符号连接的源文件大小。</span><br><span class="line"></span><br><span class="line">-m或--megabytes 以1MB为单位。</span><br><span class="line"></span><br><span class="line">-s或--summarize 仅显示总计。</span><br><span class="line"></span><br><span class="line">-S或--separate-dirs 显示个别目录的大小时，并不含其子目录的大小。</span><br><span class="line"></span><br><span class="line">-x或--one-file-xystem 以一开始处理时的文件系统为准，若遇上其它不同的文件系统目录则略过。</span><br><span class="line"></span><br><span class="line">-X&lt;文件&gt;或--exclude-from&#x3D;&lt;文件&gt; 在&lt;文件&gt;指定目录或文件。</span><br><span class="line"></span><br><span class="line">--exclude&#x3D;&lt;目录或文件&gt; 略过指定的目录或文件。</span><br><span class="line"></span><br><span class="line">--max-depth&#x3D;&lt;目录层数&gt; 超过指定层数的目录后，予以忽略。</span><br><span class="line"></span><br><span class="line">--help 显示帮助。</span><br><span class="line"></span><br><span class="line">--version 显示版本信息</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      每天学习一个 Linux 指令 - du 与 df 指令
    
    </summary>
    
    
      <category term="Linux" scheme="https://zuoyoulai.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://zuoyoulai.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>优秀 GitHub 资源</title>
    <link href="https://zuoyoulai.github.io/2020/01/08/Good-GitHub/"/>
    <id>https://zuoyoulai.github.io/2020/01/08/Good-GitHub/</id>
    <published>2020-01-08T09:52:20.000Z</published>
    <updated>2020-01-09T06:13:54.576Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#you-xiu-github-zi-yuan">优秀 GitHub 资源</a><ul><li><a href="#java-xiang-guan">Java 相关</a></li><li><a href="#linux-xiang-guan">Linux 相关</a></li><li><a href="#go-xiang-guan">Go 相关</a></li></ul></li></ul><!-- tocstop --></div>## 优秀 GitHub 资源<h3><span id="java-xiang-guan">Java 相关</span><a href="#java-xiang-guan" class="header-anchor"></a></h3><table><thead><tr><th>名称</th><th>Url</th></tr></thead><tbody><tr><td>架构师知识</td><td><a href="https://doocs.github.io/advanced-java/" target="_blank" rel="noopener">https://doocs.github.io/advanced-java/</a></td></tr><tr><td>大数据笔记</td><td><a href="https://github.com/heibaiying/BigData-Notes?utm_source=gold_browser_extension" target="_blank" rel="noopener">https://github.com/heibaiying/BigData-Notes?utm_source=gold_browser_extension</a></td></tr><tr><td>分布式任务调度 xxl-job</td><td><a href="https://github.com/xuxueli/xxl-job?utm_source=gold_browser_extension" target="_blank" rel="noopener">https://github.com/xuxueli/xxl-job?utm_source=gold_browser_extension</a></td></tr></tbody></table><h3><span id="linux-xiang-guan">Linux 相关</span><a href="#linux-xiang-guan" class="header-anchor"></a></h3><table><thead><tr><th>名称</th><th>Url</th></tr></thead></table><h3><span id="go-xiang-guan">Go 相关</span><a href="#go-xiang-guan" class="header-anchor"></a></h3><table><thead><tr><th>名称</th><th>Url</th></tr></thead><tbody><tr><td>go学习系列文章</td><td><a href="https://www.liwenzhou.com/categories/Golang/" target="_blank" rel="noopener">https://www.liwenzhou.com/categories/Golang/</a></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      优秀 GitHub 资源
    
    </summary>
    
    
      <category term="GitHub" scheme="https://zuoyoulai.github.io/categories/GitHub/"/>
    
    
      <category term="学习文章" scheme="https://zuoyoulai.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%96%87%E7%AB%A0/"/>
    
      <category term="GitHub" scheme="https://zuoyoulai.github.io/tags/GitHub/"/>
    
  </entry>
  
</feed>
