<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>左之右</title>
  
  <subtitle>SamLai&#39;Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zuoyoulai.github.io/"/>
  <updated>2019-12-31T09:44:54.846Z</updated>
  <id>https://zuoyoulai.github.io/</id>
  
  <author>
    <name>[object Object]</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Git使用内容</title>
    <link href="https://zuoyoulai.github.io/2019/12/31/Git-md/"/>
    <id>https://zuoyoulai.github.io/2019/12/31/Git-md/</id>
    <published>2019-12-31T09:17:19.000Z</published>
    <updated>2019-12-31T09:44:54.846Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="git-shi-yong">Git 使用</span><a href="#git-shi-yong" class="header-anchor"></a></h2><div class="toc"><!-- toc --><ul><li><a href="#tian-jia-yong-hu-ji-ben-xin-xi">添加用户基本信息</a></li><li><a href="#shan-diao-ben-di-or-yuan-cheng-fen-zhi">删掉本地 Or 远程分支</a></li><li><a href="#ben-di-sheng-cheng-key-xie-ru-github-zhong-sshkey-fang-bian-ti-jiao-dai-ma">本地生成 key 写入 GitHub 中 sshkey 方便提交代码</a></li><li><a href="#cherry-pick-zhi-geng-xin-mou-ge-commit-de-li-mian-nei-rong">cherry-pick : 只更新某个 commit 的里面内容</a></li><li><a href="#hui-gun-dao-zhi-qian-mou-ge-fen-zhi">回滚到之前某个分支</a></li><li><a href="#qiang-xing-fu-gai-de-zui-xin-de-nei-rong">强行覆盖的最新的内容</a><ul><li><a href="#bei-fen-xiang-mu-xiang-mu-tong-shi-tui-song-dao-githhub-yu-coding-md">备份项目 :  项目同时推送到githhub与coding.md</a></li></ul></li></ul><!-- tocstop --></div><h3><span id="tian-jia-yong-hu-ji-ben-xin-xi">添加用户基本信息</span><a href="#tian-jia-yong-hu-ji-ben-xin-xi" class="header-anchor"></a></h3><ul><li>可以让本地提交的内容有相应的用户,这样就看 git log 的时候则会出现什么用户提交过了,而不是某个邮箱地址内容提交<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;xxxx@qq.com&quot;</span><br><span class="line">git config --global user.email &quot;xxx@qq.com&quot;</span><br></pre></td></tr></table></figure></li></ul><h3><span id="shan-diao-ben-di-or-yuan-cheng-fen-zhi">删掉本地 Or 远程分支</span><a href="#shan-diao-ben-di-or-yuan-cheng-fen-zhi" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">删除分支：git branch -d &lt;name&gt;</span><br><span class="line"></span><br><span class="line">删除远程分支：git push origin --delete &lt;name&gt;</span><br></pre></td></tr></table></figure><h3><span id="ben-di-sheng-cheng-key-xie-ru-github-zhong-sshkey-fang-bian-ti-jiao-dai-ma">本地生成 key 写入 GitHub 中 sshkey 方便提交代码</span><a href="#ben-di-sheng-cheng-key-xie-ru-github-zhong-sshkey-fang-bian-ti-jiao-dai-ma" class="header-anchor"></a></h3><ul><li>github添加一个ssh key<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Linux:</span><br><span class="line"></span><br><span class="line">1.yum install ssh</span><br><span class="line">2.ssh-keygen -t rsa -C &quot;472023527@qq.com&quot;</span><br><span class="line">3.cat ~&#x2F;.ssh&#x2F;id_rsa.pub  [复制粘贴到github头像那边的setting再进行添加相应的key值]</span><br><span class="line">4.以后进行git操作的代码的时候则不是git https:&#x2F;&#x2F;xxx的方式</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Windows:</span><br><span class="line"></span><br><span class="line">1. 安装git，桌面右键点击 &quot;Git Bash&quot;</span><br><span class="line">2. cd ~&#x2F;.ssh&#x2F; </span><br><span class="line">3. vi id_rsa.pub  如有 复制内容，在github.com的网站上到ssh密钥管理页面，添加新公钥</span><br><span class="line">4. 如没有自行创建公钥</span><br></pre></td></tr></table></figure></li></ul><h3><span id="cherry-pick-zhi-geng-xin-mou-ge-commit-de-li-mian-nei-rong">cherry-pick : 只更新某个 commit 的里面内容</span><a href="#cherry-pick-zhi-geng-xin-mou-ge-commit-de-li-mian-nei-rong" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">将A分支的一个commit合并到B分支：</span><br><span class="line"> </span><br><span class="line">首先切换到A分支</span><br><span class="line"> </span><br><span class="line">git checkout A</span><br><span class="line"> </span><br><span class="line">git log</span><br><span class="line"> </span><br><span class="line">找出要合并的commit ID :</span><br><span class="line"> </span><br><span class="line">例如</span><br><span class="line"> </span><br><span class="line">xxx001</span><br><span class="line"> </span><br><span class="line">然后切换到B分支上</span><br><span class="line"> </span><br><span class="line">git checkout B</span><br><span class="line"> </span><br><span class="line">git cherry-pick  xxx001</span><br><span class="line"> </span><br><span class="line">然后就将A分支的某个commit合并到了B分支了</span><br></pre></td></tr></table></figure><h3><span id="hui-gun-dao-zhi-qian-mou-ge-fen-zhi">回滚到之前某个分支</span><a href="#hui-gun-dao-zhi-qian-mou-ge-fen-zhi" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">查找对应Log的 id:</span><br><span class="line">git log -3</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">回滚到指定的版本:</span><br><span class="line">git reset --hard e377f60e28c8b84158</span><br><span class="line">git reset --hard 156d981</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">强制提交:</span><br><span class="line">git push -f origin master</span><br></pre></td></tr></table></figure><h3><span id="qiang-xing-fu-gai-de-zui-xin-de-nei-rong">强行覆盖的最新的内容</span><a href="#qiang-xing-fu-gai-de-zui-xin-de-nei-rong" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">将一个分支覆盖相应的分支:</span><br><span class="line"> </span><br><span class="line">1.切换到test分支上 </span><br><span class="line">  git checkout test    </span><br><span class="line"> </span><br><span class="line">2.将master合并到test</span><br><span class="line">  git merge master</span><br><span class="line"> </span><br><span class="line">3.将master分支删掉</span><br><span class="line">  git branch -d master</span><br><span class="line"> </span><br><span class="line">4.将test分支覆盖到master分支上</span><br><span class="line">  git branch -m test master</span><br><span class="line"> </span><br><span class="line">5.将master分支推送远程库上[有分支则覆盖  无分支则创建新的分支并更新上去]</span><br><span class="line">  git push -f origin master</span><br></pre></td></tr></table></figure><h2><span id="bei-fen-xiang-mu-xiang-mu-tong-shi-tui-song-dao-githhub-yu-coding-md">备份项目 :  项目同时推送到githhub与coding.md</span><a href="#bei-fen-xiang-mu-xiang-mu-tong-shi-tui-song-dao-githhub-yu-coding-md" class="header-anchor"></a></h2><ol><li><p>在 CODING 中新建一个同名项目，不选择 启用 README.md 文件初始化项目，以及任何 License 和 .gitignore 文件</p></li><li><p>在本地项目上添加一个:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> git remote set-url --add origin https:&#x2F;&#x2F;git.coding.net&#x2F;samlai&#x2F;xxx.git</span><br><span class="line"></span><br><span class="line"> ps:项目的根目录.git文件夹下confi配置文件变成</span><br><span class="line">[remote &quot;origin&quot;]</span><br><span class="line">url &#x3D; https:&#x2F;&#x2F;github.com&#x2F;ZuoYouLai&#x2F;xxx.git</span><br><span class="line">fetch &#x3D; +refs&#x2F;heads&#x2F;*:refs&#x2F;remotes&#x2F;origin&#x2F;*</span><br><span class="line">url &#x3D; https:&#x2F;&#x2F;git.coding.net&#x2F;samlai&#x2F;xxx.git</span><br><span class="line">[branch &quot;master&quot;]</span><br><span class="line">remote &#x3D; origin</span><br><span class="line">merge &#x3D; refs&#x2F;heads&#x2F;master</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">指令辅助：</span><br><span class="line">    (git remote 看看现在项目git 远程主机情况)</span><br><span class="line">    git remote -v</span><br><span class="line">    (git remote add 添加一个远程主机)</span><br><span class="line">    git remote add xx xxx.git</span><br><span class="line">    (git remote rm xx  删掉远程某个远程的配置内容)</span><br></pre></td></tr></table></figure></li><li><p>修改本地项目的任意一个文件:<br>git add .<br>git commit -m ‘test’<br>git push origin master // 把本地仓库的变化连接到远程仓库主分支</p></li><li><p>参考文章:</p></li></ol><ul><li><a href="https://feitianbenyue.iteye.com/blog/2376791" target="_blank" rel="noopener">https://feitianbenyue.iteye.com/blog/2376791</a>  </li><li><a href="https://coding.net/help/doc/git/import.html" target="_blank" rel="noopener">https://coding.net/help/doc/git/import.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      Git 使用内容
    
    </summary>
    
    
      <category term="Git" scheme="https://zuoyoulai.github.io/categories/Git/"/>
    
    
      <category term="Git" scheme="https://zuoyoulai.github.io/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Go 学习</title>
    <link href="https://zuoyoulai.github.io/2019/12/29/Go-Study/"/>
    <id>https://zuoyoulai.github.io/2019/12/29/Go-Study/</id>
    <published>2019-12-29T07:20:44.000Z</published>
    <updated>2019-12-30T16:34:47.961Z</updated>
    
    <content type="html"><![CDATA[<h2><span id="go-yu-yan-xue-xi">GO 语言学习</span><a href="#go-yu-yan-xue-xi" class="header-anchor"></a></h2><div class="toc"><!-- toc --><ul><li><a href="#xue-xi">学习</a></li><li><a href="#an-zhuang">安装</a></li><li><a href="#zhi-ling-cao-zuo">指令操作</a></li><li><a href="#import-cao-zuo">Import 操作：</a></li><li><a href="#bian-liang-dai-ma">变量代码</a></li><li><a href="#chang-liang">常量</a></li><li><a href="#te-shu-chang-liang-iota-shi-yong">特殊常量 iota 使用</a><ul><li><a href="#bian-cheng">编程</a></li></ul></li><li><a href="#li-zi-1-http-helloworld">例子1 : Http:HelloWorld</a></li><li><a href="#li-zi-2-duo-xian-cheng-xian-cheng-jian-tong-xin">例子2 : 多线程 + 线程间通信</a></li><li><a href="#li-zi-3-shu-zu-de-nei-bu-pai-xu">例子3 : 数组的内部排序</a></li><li><a href="#li-zi-4-dan-yuan-ce-shi-cao-zuo">例子4 : 单元测试操作</a></li><li><a href="#li-zi-5-ji-zhun-ce-shi">例子5 : 基准测试</a></li></ul><!-- tocstop --></div><h3><span id="xue-xi">学习</span><a href="#xue-xi" class="header-anchor"></a></h3><ul><li>指令 : go tool tour</li><li>文档 : <a href="http://docscn.studygolang.com/doc/" target="_blank" rel="noopener">http://docscn.studygolang.com/doc/</a></li></ul><h3><span id="an-zhuang">安装</span><a href="#an-zhuang" class="header-anchor"></a></h3><ul><li>Linux<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">下载 &gt; 解压 &gt; 设置</span><br><span class="line">GOROOT</span><br><span class="line">GOPATH</span><br><span class="line">GOBIN</span><br><span class="line">PATH</span><br></pre></td></tr></table></figure><h4><span id="mac">Mac</span><a href="#mac" class="header-anchor"></a></h4><h4><span id="windows">Windows</span><a href="#windows" class="header-anchor"></a></h4></li></ul><h3><span id="zhi-ling-cao-zuo">指令操作</span><a href="#zhi-ling-cao-zuo" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">go run </span><br><span class="line">   -v  列出被编译的代码包名称</span><br><span class="line">   -a  强制执行</span><br><span class="line">   -work 显示临时工作目录并不删除它</span><br><span class="line">   -x 打印命令 并执行过它的</span><br><span class="line">   -n 打印编译的命令但不执行他们</span><br><span class="line">   -p n: 并行编译 其中 n 为并行的数量</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">go build  编译源码文件或代码包  </span><br><span class="line"></span><br><span class="line">go install  编译并安装代码或者源码文件</span><br><span class="line">查看执行文件:</span><br><span class="line">ls $GOBIN  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">go get 从远程代码仓库上下载安装代码包</span><br><span class="line">下载到$GOPATH下 第一个文件的的 src文件夹中</span><br><span class="line">  -d 只执行下载动作不执行安装动作</span><br><span class="line">  -fix 下载后先执行修正动作 再进行编译安装</span><br><span class="line">  -U 利用网络来更新已有的代码包及其依赖包</span><br></pre></td></tr></table></figure><h3><span id="import-cao-zuo">Import 操作：</span><a href="#import-cao-zuo" class="header-anchor"></a></h3><ul><li>如果一个 main 导入其他包，包将被顺序导入</li><li>如果导入的包依赖其他包(包 B)，会首先导入 B 包，然后初始化 B 包中常量和变量，最后如果 B 包中有 init，会自动执行 init()</li><li>如果包导入完成后对 main 中常量和变量进行初始化，执行 main 中的 init函数</li><li>如果一个包被导入多次则该包只会被导入一次</li><li>import 别名 “.” “_”<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">别名：将导入的包命名为另一个容易记忆的别名</span><br><span class="line">点操作: .标识的包导入后，调用该包中函数时可以省略前缀包名</span><br><span class="line">下划线(_)操作: 导入该包，但不导入整个包，而是执行包中的 init 函数此无法通过包名来调用包中的其他函数</span><br><span class="line">             使用下划线操作往往为了注册包中的引擎，让外部可以方便地使用</span><br></pre></td></tr></table></figure></li></ul><h3><span id="bian-liang-dai-ma">变量代码</span><a href="#bian-liang-dai-ma" class="header-anchor"></a></h3><ul><li>全局变量需要加上 var  方法体内则可以不用加上</li><li>大写字母开头可以被包内其他文件导入，小写则不行</li></ul><h3><span id="chang-liang">常量</span><a href="#chang-liang" class="header-anchor"></a></h3><ul><li>类型：显示  隐式<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">显式：const identifier [type] &#x3D; value</span><br><span class="line">隐式：const identifier &#x3D; value (通常叫无类型常量)</span><br><span class="line">常量可以使用内置表达式定义 ： 例如 len() unsafe.Sizeof()</span><br><span class="line">常量范围目前只支持布尔，数字，字符串</span><br></pre></td></tr></table></figure></li></ul><h3><span id="te-shu-chang-liang-iota-shi-yong">特殊常量 iota 使用</span><a href="#te-shu-chang-liang-iota-shi-yong" class="header-anchor"></a></h3><ul><li>iota在 const 关键字出现时将被重置为0</li><li>const 中每新增一行常量声明将使 iota 计数一次</li><li>iota 常见用法<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 跳值使用法</span><br><span class="line">2. 插队使用法</span><br><span class="line">3. 表达式隐式使用法</span><br><span class="line">4. 单行使用法</span><br></pre></td></tr></table></figure></li></ul><h2><span id="bian-cheng">编程</span><a href="#bian-cheng" class="header-anchor"></a></h2><h3><span id="li-zi-1-http-helloworld">例子1  : Http:HelloWorld</span><a href="#li-zi-1-http-helloworld" class="header-anchor"></a></h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"net/http"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>  &#123;</span><br><span class="line">http.HandleFunc(<span class="string">"/"</span>, <span class="function"><span class="keyword">func</span><span class="params">(writer http.ResponseWriter, request *http.Request)</span></span> &#123;</span><br><span class="line">fmt.Fprint(writer,<span class="string">"Hello World! Mr.Sam赖"</span>)</span><br><span class="line">&#125;)</span><br><span class="line">http.ListenAndServe(<span class="string">":8989"</span>,<span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">访问： http:<span class="comment">//localhost:8989</span></span><br></pre></td></tr></table></figure><h3><span id="li-zi-2-duo-xian-cheng-xian-cheng-jian-tong-xin">例子2  : 多线程 + 线程间通信</span><a href="#li-zi-2-duo-xian-cheng-xian-cheng-jian-tong-xin" class="header-anchor"></a></h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"></span><br><span class="line">ch :=<span class="built_in">make</span>(<span class="keyword">chan</span> <span class="keyword">string</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i:=<span class="number">0</span>; i&lt;<span class="number">10</span>;i++  &#123;</span><br><span class="line"><span class="keyword">go</span> hello(i, ch)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> &#123;</span><br><span class="line">msg :=&lt;-ch</span><br><span class="line">fmt.Print(msg)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">hello</span><span class="params">(i <span class="keyword">int</span>,ch <span class="keyword">chan</span> <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span>  &#123;</span><br><span class="line">ch &lt;- fmt.Sprintf(<span class="string">"Hello World...%d \n "</span>, i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="li-zi-3-shu-zu-de-nei-bu-pai-xu">例子3 : 数组的内部排序</span><a href="#li-zi-3-shu-zu-de-nei-bu-pai-xu" class="header-anchor"></a></h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">"fmt"</span></span><br><span class="line"><span class="string">"sort"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">//排序</span></span><br><span class="line">arr:=[]<span class="keyword">int</span>&#123;<span class="number">45</span>, <span class="number">23</span>, <span class="number">6</span>, <span class="number">12</span>, <span class="number">1</span>, <span class="number">905</span>, <span class="number">16</span>, <span class="number">75</span>&#125;</span><br><span class="line">sort.Ints(arr)</span><br><span class="line"><span class="keyword">for</span> _,val:=<span class="keyword">range</span> arr &#123;</span><br><span class="line">fmt.Println(val)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3><span id="li-zi-4-dan-yuan-ce-shi-cao-zuo">例子4 : 单元测试操作</span><a href="#li-zi-4-dan-yuan-ce-shi-cao-zuo" class="header-anchor"></a></h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"testing"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">1.文件名称必须以: _test 作为后缀</span></span><br><span class="line"><span class="comment">2.忽略测试</span></span><br><span class="line"><span class="comment">  t.SkipNow()</span></span><br><span class="line"><span class="comment">3.执行指令: go test -v</span></span><br><span class="line"><span class="comment">4.注意点:</span></span><br><span class="line"><span class="comment">      方法名称一定需要 : Test_xxxx 名称 Test 为首字母大写</span></span><br><span class="line"><span class="comment">  方法体参数内容 : t *testing.T</span></span><br><span class="line"><span class="comment">5.日志显示: t.Log()  t.Error()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestRepeat</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line">a :=repeat(<span class="string">"a"</span>)</span><br><span class="line">t.Log(<span class="string">"a 的值"</span>+ a)</span><br><span class="line">k := <span class="string">"aaaaa"</span></span><br><span class="line"><span class="keyword">if</span> a == k &#123;</span><br><span class="line">t.Logf(<span class="string">"测试成功,a 的值为 : %s"</span>,a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestPk</span><span class="params">(t *testing.T)</span></span>  &#123;</span><br><span class="line">t.Log( t.Name(),<span class="string">"开始执行 Pt 的内容"</span>)</span><br><span class="line"><span class="keyword">for</span> i:=<span class="number">0</span>;i&lt; <span class="number">9</span> ;i++  &#123;</span><br><span class="line">repeat(<span class="string">"a"</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">repeat</span><span class="params">(s <span class="keyword">string</span>)</span> <span class="title">string</span></span>&#123;</span><br><span class="line"><span class="keyword">var</span> result <span class="keyword">string</span></span><br><span class="line"><span class="keyword">for</span> i:=<span class="number">0</span>; i&lt;<span class="number">5</span> ;i++  &#123;</span><br><span class="line">result+= <span class="string">"a"</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">TestAdd</span><span class="params">(t *testing.T)</span></span>  &#123;</span><br><span class="line"><span class="comment">//忽略测试</span></span><br><span class="line"><span class="comment">//t.SkipNow()</span></span><br><span class="line">t.Log(t.Name(), <span class="string">"Begin...."</span>)</span><br><span class="line">a := <span class="number">2</span></span><br><span class="line">b := <span class="number">3</span></span><br><span class="line"><span class="keyword">if</span> add(a,b) != <span class="number">5</span>&#123;</span><br><span class="line">t.Errorf(<span class="string">"result   %d "</span>,add(a, b))</span><br><span class="line">&#125;</span><br><span class="line">t.Logf(<span class="string">"a + b is  :  %d"</span>,add(a,b))</span><br><span class="line">t.Log(t.Name(), <span class="string">"end...."</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(a,b <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> go test -v</span></span><br><span class="line"><span class="comment"> 打印结果：</span></span><br><span class="line"><span class="comment">=== RUN   TestRepeat</span></span><br><span class="line"><span class="comment">--- PASS: TestRepeat (0.00s)</span></span><br><span class="line"><span class="comment">    lx_test.go:18: a 的值aaaaa</span></span><br><span class="line"><span class="comment">    lx_test.go:21: 测试成功,a 的值为 : aaaaa</span></span><br><span class="line"><span class="comment">=== RUN   TestPk</span></span><br><span class="line"><span class="comment">--- PASS: TestPk (0.00s)</span></span><br><span class="line"><span class="comment">    lx_test.go:27: TestPk 开始执行 Pt 的内容</span></span><br><span class="line"><span class="comment">=== RUN   TestAdd</span></span><br><span class="line"><span class="comment">--- PASS: TestAdd (0.00s)</span></span><br><span class="line"><span class="comment">    lx_test.go:45: TestAdd Begin....</span></span><br><span class="line"><span class="comment">    lx_test.go:51: a + b is  :  5</span></span><br><span class="line"><span class="comment">    lx_test.go:52: TestAdd end....</span></span><br><span class="line"><span class="comment">PASS</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><h3><span id="li-zi-5-ji-zhun-ce-shi">例子5 : 基准测试</span><a href="#li-zi-5-ji-zhun-ce-shi" class="header-anchor"></a></h3><ul><li>参考链接 ： <a href="http://c.biancheng.net/view/124.html" target="_blank" rel="noopener">http://c.biancheng.net/view/124.html</a><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">参考链接 : http://c.biancheng.net/view/124.html</span></span><br><span class="line"><span class="comment">基准测试:</span></span><br><span class="line"><span class="comment">1.一定需要方法名称 : Benchmark开头</span></span><br><span class="line"><span class="comment">2.执行的指令:</span></span><br><span class="line"><span class="comment">          go test -v -bench=.</span></span><br><span class="line"><span class="comment">          go test -v -bench=. jz_test.go</span></span><br><span class="line"><span class="comment">          增加自定义时间:</span></span><br><span class="line"><span class="comment">          go test -v -bench=. -benchtime=5s jz_test.go</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">BenchmarkAdd</span><span class="params">(b *testing.B)</span></span>  &#123;</span><br><span class="line"><span class="keyword">var</span> n <span class="keyword">int</span></span><br><span class="line"><span class="keyword">for</span> i:=<span class="number">0</span>;i&lt;b.N;i++ &#123;</span><br><span class="line">n++</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">执行:</span></span><br><span class="line"><span class="comment">go test -v -bench=.</span></span><br><span class="line"><span class="comment">打印的内容:</span></span><br><span class="line"><span class="comment">goos: darwin</span></span><br><span class="line"><span class="comment">goarch: amd64</span></span><br><span class="line"><span class="comment">BenchmarkAdd-16         1000000000               0.238 ns/op</span></span><br><span class="line"><span class="comment">PASS</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">测试说明：</span></span><br><span class="line"><span class="comment">执行了: 1000000000 次</span></span><br><span class="line"><span class="comment">每次的操作时间: 0.238 ns</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      学习新的语言，Go 语言
    
    </summary>
    
    
      <category term="Go" scheme="https://zuoyoulai.github.io/categories/Go/"/>
    
    
      <category term="Go" scheme="https://zuoyoulai.github.io/tags/Go/"/>
    
  </entry>
  
  <entry>
    <title>Linux-Vim 插件,指令的学习</title>
    <link href="https://zuoyoulai.github.io/2019/12/27/Linux-Vim/"/>
    <id>https://zuoyoulai.github.io/2019/12/27/Linux-Vim/</id>
    <published>2019-12-26T16:20:02.000Z</published>
    <updated>2019-12-29T16:40:03.232Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#vim-bian-ji-qi-xue-xi">Vim 编辑器学习</a><ul><li><a href="#zsh-an-zhuang">zsh 安装</a></li><li><a href="#vim-kuai-jie-jian">VIM 快捷键</a></li><li><a href="#cha-zhao-vim-cha-jian-fang-shi">查找 VIm 插件方式</a></li><li><a href="#vim-an-zhuang-cha-jian">VIm 安装插件</a></li></ul></li></ul><!-- tocstop --></div><h2><span id="vim-bian-ji-qi-xue-xi">Vim 编辑器学习</span><a href="#vim-bian-ji-qi-xue-xi" class="header-anchor"></a></h2><ul><li><p>学习地址 ： <a href="https://www.cnblogs.com/vijozsoft/p/5608108.html" target="_blank" rel="noopener">https://www.cnblogs.com/vijozsoft/p/5608108.html</a></p></li><li><p>vimrc : <a href="https://www.cnblogs.com/yuandonghua/p/10483882.html" target="_blank" rel="noopener">https://www.cnblogs.com/yuandonghua/p/10483882.html</a></p></li></ul><hr><h3><span id="zsh-an-zhuang">zsh 安装</span><a href="#zsh-an-zhuang" class="header-anchor"></a></h3><ul><li><p>安装指令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;master&#x2F;tools&#x2F;install.sh)&quot;</span><br></pre></td></tr></table></figure></li><li><p>修改主题:  <a href="https://github.com/ohmyzsh/ohmyzsh/wiki/themes" target="_blank" rel="noopener">https://github.com/ohmyzsh/ohmyzsh/wiki/themes</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; vim ~&#x2F;.zshrc</span><br><span class="line">主题我喜欢修改成: af-magic</span><br><span class="line">ZSH_THEME&#x3D;&quot;af-magic&quot;</span><br><span class="line">生效:</span><br><span class="line">&gt;&gt; exec $SHELL</span><br></pre></td></tr></table></figure></li><li><p>bash和zsh切换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">切换到bash</span><br><span class="line"></span><br><span class="line">chsh -s &#x2F;bin&#x2F;bash</span><br><span class="line">切换到zsh</span><br><span class="line"></span><br><span class="line">chsh -s &#x2F;bin&#x2F;zsh</span><br></pre></td></tr></table></figure></li><li><p>卸载oh my zsh  : Mac 参考链接 : <a href="https://my.oschina.net/u/2391658/blog/1584566" target="_blank" rel="noopener">https://my.oschina.net/u/2391658/blog/1584566</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在命令行输入如下命令，回车即可：uninstall_oh_my_zsh</span><br></pre></td></tr></table></figure></li></ul><hr><h3><span id="vim-kuai-jie-jian">VIM 快捷键</span><a href="#vim-kuai-jie-jian" class="header-anchor"></a></h3><h5><span id="ji-ben-shi-yong">基本使用</span><a href="#ji-ben-shi-yong" class="header-anchor"></a></h5><ul><li><blockquote><p>[ shift + : ]  : 进入 normal 模式</p></blockquote></li><li><blockquote><p>[ i ]  : 插入编写操作  –&gt; insert操作</p></blockquote></li><li><blockquote><p>[ a ]  :  append在光标处添加模式</p></blockquote></li><li><blockquote><p>[ wq ] : 书写+退出操作 <br> [ q ] :退出 <br> [ !q ] :强制退出操作 </p></blockquote></li><li><blockquote><p>[ esc 或者 control + [ ] : 插入模式转为 normal模式</p></blockquote></li></ul><h5><span id="guang-biao-yi-dong">光标移动</span><a href="#guang-biao-yi-dong" class="header-anchor"></a></h5><ul><li><p>Ctrl + u  【往前翻页】   Ctrl + f  【往前翻页 : forward】</p></li><li><p>gg : 第一行   GG : 最后一行</p></li><li><p>0 : 行首  $ : 行尾</p></li><li><p>V : 选中行内容 使用 k j 来选中内容</p></li><li><p>h : 向左</p></li><li><p>j ：向下</p></li><li><p>k :  向上</p></li><li><p>l : 向右</p></li><li><p>0 : 回到行首</p></li><li><p>$ : 回到行尾</p></li><li><p>gg : 回到行首</p></li><li><p>G : 回到行尾</p></li><li><blockquote><p>u : 返回上一步</p></blockquote></li><li><blockquote><p>control + r : 重复上一步的操作</p></blockquote></li></ul><h5><span id="cha-ru-zi-fu">插入字符</span><a href="#cha-ru-zi-fu" class="header-anchor"></a></h5><ul><li>i</li><li>a</li><li>I : 回到行头进行插入</li><li>A: 进入光标所对应的行尾插入</li><li>p : 粘贴</li><li>yy ：复制一行</li></ul><h5><span id="shan-chu-zi-fu">删除字符</span><a href="#shan-chu-zi-fu" class="header-anchor"></a></h5><ul><li>x  :  向后删除单个字符</li><li>X  : 向前删除单个字符</li><li>nx，nX : 删除多个字符的操作</li></ul><h5><span id="da-kai-wen-jian">打开文件</span><a href="#da-kai-wen-jian" class="header-anchor"></a></h5><ul><li>vim 1.txt  2.txt  -O</li></ul><hr><h3><span id="cha-zhao-vim-cha-jian-fang-shi">查找 VIm 插件方式</span><a href="#cha-zhao-vim-cha-jian-fang-shi" class="header-anchor"></a></h3><ul><li>google 的方式</li><li>浏览: vimawesome.com : <a href="https://vimawesome.com/" target="_blank" rel="noopener">https://vimawesome.com/</a></li></ul><hr><h3><span id="vim-an-zhuang-cha-jian">VIm 安装插件</span><a href="#vim-an-zhuang-cha-jian" class="header-anchor"></a></h3><h4><span id="cha-jian-gong-ju-vim-plugin">插件工具 : vim-plugin</span><a href="#cha-jian-gong-ju-vim-plugin" class="header-anchor"></a></h4><ul><li>插件工具内容：vim-plugin  : <a href="https://github.com/junegunn/vim-plug" target="_blank" rel="noopener">https://github.com/junegunn/vim-plug</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mac 系统执行:</span><br><span class="line"></span><br><span class="line">curl -fLo ~&#x2F;.vim&#x2F;autoload&#x2F;plug.vim --create-dirs \</span><br><span class="line">    https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;junegunn&#x2F;vim-plug&#x2F;master&#x2F;plug.vim</span><br><span class="line"></span><br><span class="line">编写添加内容到 vimrc:</span><br><span class="line"></span><br><span class="line">call plug#begin(&#39;~&#x2F;.vim&#x2F;plugged&#39;)</span><br><span class="line"></span><br><span class="line">call plug#end()</span><br></pre></td></tr></table></figure></li></ul><h4><span id="liu-lan-zui-jin-cha-jian-vim-startify">浏览最近插件:  vim-startify</span><a href="#liu-lan-zui-jin-cha-jian-vim-startify" class="header-anchor"></a></h4><ul><li>安装浏览最近的文件的插件:  vim-startify :  <a href="https://github.com/mhinz/vim-startify" target="_blank" rel="noopener">https://github.com/mhinz/vim-startify</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Plug &#39;mhinz&#x2F;vim-startify&#39;</span><br><span class="line"></span><br><span class="line">编写添加内容到 vimrc:</span><br><span class="line">&gt;&gt; vim ~&#x2F;.vimrc</span><br><span class="line">call plug#begin(&#39;~&#x2F;.vim&#x2F;plugged&#39;)</span><br><span class="line">Plug &#39;mhinz&#x2F;vim-startify&#39;</span><br><span class="line">call plug#end()</span><br><span class="line"></span><br><span class="line">然后让 vimrc 进行生效：</span><br><span class="line">进入 vim ~&#x2F;.vimrc 的 normal 模式 执行2个指令：</span><br><span class="line">:source ~&#x2F;.vimrc</span><br><span class="line">:PluginInstall</span><br><span class="line"></span><br><span class="line">插件就可以成功安装：</span><br><span class="line">然后执行 vim 就可以查看就近打开的文件内容</span><br></pre></td></tr></table></figure></li></ul><h4><span id="dai-ma-bu-quan-de-cha-jian-vim-surround">代码补全的插件：vim-surround</span><a href="#dai-ma-bu-quan-de-cha-jian-vim-surround" class="header-anchor"></a></h4><ul><li>代码补全的插件：surround : <a href="https://github.com/tpope/vim-surround" target="_blank" rel="noopener">https://github.com/tpope/vim-surround</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Plug &#39;tpope&#x2F;vim-surround&#39;</span><br><span class="line"></span><br><span class="line">使用方式:</span><br><span class="line">ds (delete a surrounding)</span><br><span class="line">cs (change a surrounding)</span><br><span class="line">ys (you add a surrounding)</span><br><span class="line"></span><br><span class="line">光标在单词的左处:</span><br><span class="line">ds iw &#39;  --&gt; 将字符添加一个单引号</span><br><span class="line">cs &#39; &quot;   --&gt; 将字符的单引号变成双引号</span><br><span class="line">ds &quot;     --&gt; 删除&quot;引号</span><br></pre></td></tr></table></figure></li></ul><h4><span id="zhuang-tai-lan-mei-hua-vim-airline">状态栏美化: vim-airline</span><a href="#zhuang-tai-lan-mei-hua-vim-airline" class="header-anchor"></a></h4><ul><li>状态栏美化: vim-airline : <a href="https://github.com/vim-airline/vim-airline" target="_blank" rel="noopener">https://github.com/vim-airline/vim-airline</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Plug &#39;vim-airline&#x2F;vim-airline&#39;</span><br><span class="line">Plug &#39;vim-airline&#x2F;vim-airline-themes&#39;</span><br></pre></td></tr></table></figure><h4><span id="dai-ma-suo-jin-xian-tiao-indentline">代码缩进线条:indentline</span><a href="#dai-ma-suo-jin-xian-tiao-indentline" class="header-anchor"></a></h4><ul><li>代码缩进线条:indentline</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Plug &#39;yggdroot&#x2F;indentline&#39;</span><br></pre></td></tr></table></figure><h4><span id="pei-se-vim-hybrid">配色: vim-hybrid</span><a href="#pei-se-vim-hybrid" class="header-anchor"></a></h4><ul><li>配色: vim-hybrid: <a href="https://github.com/w0ng/vim-hybrid" target="_blank" rel="noopener">https://github.com/w0ng/vim-hybrid</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Plug &#39;w0ng&#x2F;vim-hybrid&#39;</span><br><span class="line">其他配置加上vimrc:</span><br><span class="line">set background&#x3D;dark</span><br><span class="line">colorscheme hybrid  </span><br><span class="line"></span><br><span class="line">【本地安装了：Oh My Zsh 】 需要修改相应的主题：https:&#x2F;&#x2F;github.com&#x2F;ohmyzsh&#x2F;ohmyzsh&#x2F;wiki&#x2F;themes</span><br><span class="line">vim ~&#x2F;.zshrc</span><br><span class="line">ZSH_THEME&#x3D;&quot;af-magic&quot;</span><br></pre></td></tr></table></figure></li></ul><h4><span id="shu-xing-wen-jian-mu-lu-nerdtree">树形文件目录 : nerdtree</span><a href="#shu-xing-wen-jian-mu-lu-nerdtree" class="header-anchor"></a></h4><ul><li>树形文件夹管理:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">  Plug &#39;scrooloose&#x2F;nerdtree&#39;</span><br><span class="line">  </span><br><span class="line">  添加 Ctrl+n 方式:(vimrc)</span><br><span class="line">  map &lt;C-n&gt; :NERDTreeToggle&lt;CR&gt;</span><br><span class="line">  </span><br><span class="line">  配合使用 Normal 方式操作：</span><br><span class="line">  Ctrl+n 打开树结构  </span><br><span class="line">  :vs 打开新的窗体</span><br><span class="line">  ctrl+w+w 光标在左右窗口切换</span><br><span class="line">  </span><br><span class="line">  快捷键： </span><br><span class="line">  参考链接内容: https:&#x2F;&#x2F;blog.csdn.net&#x2F;Lius_1006&#x2F;article&#x2F;details&#x2F;79524512</span><br><span class="line">  </span><br><span class="line">  h j k l移动光标定位</span><br><span class="line">  ctrl+w+w 光标在左右窗口切换</span><br><span class="line">  ctrl+w+r 切换当前窗口左右布局</span><br><span class="line">  ctrl+p 模糊搜索文件</span><br><span class="line">  gT 切换到前一个tab</span><br><span class="line">  g t 切换到后一个tab</span><br><span class="line">  o 打开关闭文件或者目录，如果是文件的话，光标出现在打开的文件中</span><br><span class="line">  O 打开结点下的所有目录</span><br><span class="line">  X 合拢当前结点的所有目录</span><br><span class="line">  x 合拢当前结点的父目录</span><br><span class="line">  i和s水平分割或纵向分割窗口打开文件</span><br><span class="line">  u 打开上层目录</span><br><span class="line">t 在标签页中打开</span><br><span class="line">  T 在后台标签页中打开</span><br><span class="line">  p 到上层目录</span><br><span class="line">  P 到根目录</span><br><span class="line">  K 到同目录第一个节点</span><br><span class="line">  J 到同目录最后一个节点</span><br><span class="line">  m 显示文件系统菜单（添加、删除、移动操作）</span><br><span class="line">  ? 帮助</span><br><span class="line">  :q 关闭</span><br></pre></td></tr></table></figure></li></ul><h4><span id="kuai-su-ding-wei-wen-jian-ctrlp">快速定位文件:ctrlp</span><a href="#kuai-su-ding-wei-wen-jian-ctrlp" class="header-anchor"></a></h4><ul><li>快速定位文件:ctrlp : <a href="https://github.com/kien/ctrlp.vim" target="_blank" rel="noopener">https://github.com/kien/ctrlp.vim</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Plug &#39;kien&#x2F;ctrlp.vim&#39;</span><br><span class="line"></span><br><span class="line">添加快捷键：</span><br><span class="line">let g:ctrlp_map &#x3D; &#39;&lt;c-p&gt;&#39;</span><br></pre></td></tr></table></figure><h4><span id="kuai-su-cha-zhao-wen-jian-zi-fu-easymotion">快速查找文件字符 ：easymotion</span><a href="#kuai-su-cha-zhao-wen-jian-zi-fu-easymotion" class="header-anchor"></a></h4><ul><li>快速查找文件字符 ：easymotion   <a href="https://github.com/easymotion/vim-easymotion" target="_blank" rel="noopener">https://github.com/easymotion/vim-easymotion</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Plug &#39;easymotion&#x2F;vim-easymotion&#39;</span><br><span class="line">添加快捷键：</span><br><span class="line">nmap ss &lt;Plug&gt;(easymotion-s2)</span><br><span class="line"></span><br><span class="line">可能安装的插件的时间比较长 需要等下</span><br><span class="line">使用的方式:</span><br><span class="line">按下 ss 键  写入单个字符 就可以全文查找  根据某个特定的字符来跳到相应的位置上</span><br></pre></td></tr></table></figure><h4><span id="mo-hu-sou-suo-fzf">模糊搜索：fzf</span><a href="#mo-hu-sou-suo-fzf" class="header-anchor"></a></h4><ul><li>模糊搜索 : <a href="https://github.com/junegunn/fzf.vim" target="_blank" rel="noopener">https://github.com/junegunn/fzf.vim</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Plug &#39;junegunn&#x2F;fzf&#39;, &#123; &#39;dir&#39;: &#39;~&#x2F;.fzf&#39;, &#39;do&#39;: &#39;.&#x2F;install --all&#39; &#125;</span><br><span class="line">Plug &#39;junegunn&#x2F;fzf.vim&#39;</span><br><span class="line"></span><br><span class="line">常用指令:</span><br><span class="line">:Files [PATH]  查找文件名称的搜索</span><br><span class="line">:Ag [PATTERN]  查找文件字符的搜索</span><br></pre></td></tr></table></figure><h4><span id="quan-ju-ti-huan-far">全局替换: far</span><a href="#quan-ju-ti-huan-far" class="header-anchor"></a></h4><ul><li>全局替换: <a href="https://github.com/brooth/far.vim" target="_blank" rel="noopener">https://github.com/brooth/far.vim</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Plug &#39;brooth&#x2F;far.vim&#39;</span><br><span class="line"></span><br><span class="line">:Far foo bar **&#x2F;*.py</span><br><span class="line">:Fardo</span><br></pre></td></tr></table></figure><h4><span id="go-yu-yan-dai-ma-de-shu-xie-vim-go">go 语言代码的书写: vim-go</span><a href="#go-yu-yan-dai-ma-de-shu-xie-vim-go" class="header-anchor"></a></h4><ul><li>github : <a href="https://github.com/fatih/vim-go" target="_blank" rel="noopener">https://github.com/fatih/vim-go</a></li><li>说明文档 : <a href="https://github.com/fatih/vim-go-tutorial" target="_blank" rel="noopener">https://github.com/fatih/vim-go-tutorial</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Plug &#39;fatih&#x2F;vim-go&#39;, &#123; &#39;do&#39;: &#39;:GoUpdateBinaries&#39; &#125;</span><br><span class="line"></span><br><span class="line">指令使用:</span><br></pre></td></tr></table></figure><h4><span id="zhu-shi-nei-rong-cha-jian-vim-commentary">注释内容插件：vim-commentary</span><a href="#zhu-shi-nei-rong-cha-jian-vim-commentary" class="header-anchor"></a></h4><ul><li>注释内容:  <a href="https://github.com/tpope/vim-commentary" target="_blank" rel="noopener">https://github.com/tpope/vim-commentary</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Plug &#39;tpope&#x2F;vim-commentary&#39;</span><br><span class="line"></span><br><span class="line">使用 gc 进行注释</span><br><span class="line"></span><br><span class="line">选择多行进行注释操作:</span><br><span class="line">:V j k (向上向下选取内容) + gc  就可以进行多行注释(任何语言都是可以进行注释的)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      vim,Linux学习笔记,记录常用的插件,与使用指令内容
    
    </summary>
    
    
      <category term="Linux" scheme="https://zuoyoulai.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://zuoyoulai.github.io/tags/Linux/"/>
    
      <category term="Vim" scheme="https://zuoyoulai.github.io/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>docker笔记内容</title>
    <link href="https://zuoyoulai.github.io/2019/12/25/docker%E7%AC%94%E8%AE%B0%E5%86%85%E5%AE%B9/"/>
    <id>https://zuoyoulai.github.io/2019/12/25/docker%E7%AC%94%E8%AE%B0%E5%86%85%E5%AE%B9/</id>
    <published>2019-12-25T07:25:03.000Z</published>
    <updated>2019-12-29T16:40:03.219Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#docker-xue-xi-bi-ji-nei-rong">Docker 学习笔记内容</a><ul><li><a href="#docker-swarm">docker-swarm:</a></li></ul></li></ul><!-- tocstop --></div><h2><span id="docker-xue-xi-bi-ji-nei-rong">Docker 学习笔记内容</span><a href="#docker-xue-xi-bi-ji-nei-rong" class="header-anchor"></a></h2><ul><li><p>jdk 与 docker各种版本之间限制:【很好的博文 <a href="https://kelvinji2009.github.io/tags/docker/" target="_blank" rel="noopener">来自</a>】</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">简言之：注意资源限制的不匹配。测试你的内存设置和JVM标志，不要假设任何东西。</span><br><span class="line">如果您在Docker容器中运行Java，请确保你设置了docker内存限制和在JVM中也做了限制，或者你的JVM能够理解这些限制。</span><br><span class="line">如果您无法升级您的Java版本，请使用-Xmx设置您自己的限制。</span><br><span class="line">对于Java 8和Java 9，请更新到最新版本并使用： -XX：+UnlockExperimentalVMOptions -XX：+UseCGroupMemoryLimitForHeap</span><br><span class="line">docker run -m 100m -it adoptopenjdk&#x2F;openjdk10:nightly &#x2F;bin&#x2F;bash</span><br><span class="line">对于Java 10，确保它支持’UseContainerSupport’（更新到最新版本）。</span><br><span class="line">docker run -m 100m -it adoptopenjdk&#x2F;openjdk9-openj9 &#x2F;bin&#x2F;bash</span><br><span class="line">对于OpenJ9（我强烈建议使用，可以在生产环境中有效减少内存占用量），现在使用-Xmx设置限制，但很快会出现一个支持UseContainerSupport标志的版本。</span><br></pre></td></tr></table></figure></li><li><p>1.配置的docker容器,外网不可以访问，只能内网才可以进行访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker run xxx -p 3306:3306  -d  xximage  : 这个port会对外网可以进行访问,无视防火墙的设置</span><br><span class="line">docker run xxx -p 127.0.0.1:3306:3306  -d  xximage  : 这个port是针对本地的地址的内容，外网无法进行访问</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>2.清空的none的docker镜像内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi $(docker images -f &quot;dangling&#x3D;true&quot; -q)</span><br></pre></td></tr></table></figure></li><li><p>3.docker可视化工具:portainer <a href="https://blog.csdn.net/bbwangj/article/details/80973219" target="_blank" rel="noopener">参考资料</a> | <a href="https://portainer.readthedocs.io/en/stable/index.html" target="_blank" rel="noopener">官方文档</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">    1.拉取镜像：docker pull portainer&#x2F;portainer</span><br><span class="line">  </span><br><span class="line">    2.docker run相应的脚本内容：</span><br><span class="line">      local本地模式开启:</span><br><span class="line">      添加 ： -v &quot;&#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock&quot;</span><br><span class="line">      docker run -d -p 9000:9000 \</span><br><span class="line">              --restart&#x3D;always \</span><br><span class="line">              -v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock \</span><br><span class="line">              --name prtainer-test \</span><br><span class="line">              docker.io&#x2F;portainer&#x2F;portainer</span><br><span class="line">    </span><br><span class="line">    3.访问相应的ip地址：http:&#x2F;&#x2F;IP:9000    </span><br><span class="line">   &#96;&#96;&#96;    </span><br><span class="line">- 4.docker无法查看jvm的参数 [参考资料](https:&#x2F;&#x2F;blog.csdn.net&#x2F;kinginblue&#x2F;article&#x2F;details&#x2F;78078028)</span><br><span class="line">&#96;&#96;&#96;text</span><br><span class="line">       1.使用 --cap-add 明确添加指定功能：</span><br><span class="line">         docker run --cap-add&#x3D;SYS_PTRACE ...</span><br><span class="line">       2.docker compose添加的相应指令:</span><br><span class="line">          version: &#39;2&#39;</span><br><span class="line">          services:</span><br><span class="line">            mysql:</span><br><span class="line">              ...</span><br><span class="line">            api:</span><br><span class="line">              ...</span><br><span class="line">              cap_add:</span><br><span class="line">                - SYS_PTRACE    </span><br><span class="line">&#96;&#96;&#96;  </span><br><span class="line">- 5.docker对jdk资源的限制: [参考资料](https:&#x2F;&#x2F;segmentfault.com&#x2F;a&#x2F;1190000014142950)</span><br><span class="line">- 6.docker compose指令 : [参考资料](https:&#x2F;&#x2F;www.cnblogs.com&#x2F;52fhy&#x2F;p&#x2F;5991344.html)   </span><br><span class="line"></span><br><span class="line">- 7.docker容器启动非常的缓慢 死机  [参考](https:&#x2F;&#x2F;my.oschina.net&#x2F;u&#x2F;1188877&#x2F;blog&#x2F;422405?p&#x3D;1)</span><br><span class="line">&#96;&#96;&#96;text</span><br><span class="line">    1.sudo service docker stop</span><br><span class="line">    2.rm -rf &#x2F;var&#x2F;lib&#x2F;docker&#x2F;*   #(记得备份重要数据)</span><br><span class="line">    3.sudo servie docker start</span><br></pre></td></tr></table></figure></li><li><p>8.linux报错:kernel:unregister_netdevice: waiting for lo to become free. Usage count = 1</p></li></ul><h4><span id="docker-compose">docker-compose</span><a href="#docker-compose" class="header-anchor"></a></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up 执行docker镜像的内容</span><br><span class="line">docker-compose build 会执行文件里面需要build的镜像内容,然后再进行up的处理</span><br></pre></td></tr></table></figure><h3><span id="docker-swarm">docker-swarm:</span><a href="#docker-swarm" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">1.生产环境的使用，多机器，扩展部署</span><br><span class="line">2.Node有2种角色：Manager Worker</span><br><span class="line">3.Manager要多节点部署避免单点故障  需要共享库来同步状态</span><br><span class="line">4.Service 和 Replicas</span><br><span class="line">5.Manager进行做决策多部署服务到多个节点上</span><br><span class="line">    </span><br><span class="line">6.docker swarm 指令:</span><br><span class="line">  A.docker swarm  --advertise-addr&#x3D;[IP]  初始化manager</span><br><span class="line">    查看join的信息然后把内容加入到子节点上</span><br><span class="line">  B.docker node ls  查看manager节点信息 看到manger+worker的节点信息</span><br><span class="line"></span><br><span class="line">7.swarm环境搭建好之后，进行对service进行操作</span><br><span class="line">  A.创建服务: docker service create -name [Images] bash</span><br><span class="line">  B.docker service ls</span><br><span class="line">  C.docker service ps demo</span><br><span class="line">  D.docker service scale&#x3D;[Num] 水平扩展到不一样的机器</span><br><span class="line"></span><br><span class="line">8.docker swarm部署 wordpress</span><br><span class="line">  A.创建网络：共享的网络</span><br><span class="line">    docker network create -d overlay demo</span><br><span class="line">  B.docker service create xxxName</span><br><span class="line">  C.多节点的同步问题：overlay  :  原理是DNS服务来发现的功能，为连overlay建一条日志   </span><br><span class="line"></span><br><span class="line">  docker swarm技术:</span><br><span class="line">      Routing Mesh的两种体现：【题外话：Lvs+keepalived实现高可用集群】</span><br><span class="line">        A. Internal : container 和 container之间的访问通过overlay网络(通过Vip虚拟Ip)</span><br><span class="line">           【具体原理可以查看 [图片](&#x2F;images&#x2F;Internal原理.png)】</span><br><span class="line">        B. Ingress ： 如果服务有绑定接口，则此服务可以通过任意swarm节点的相应接口访问</span><br><span class="line">            作用:</span><br><span class="line">                外部访问的负载均衡</span><br><span class="line">                服务端口被暴露到各个swarm节点</span><br><span class="line">                内部通过IpVs进行负载均衡</span><br><span class="line">                [Ingress流程图 ： &#x2F;images&#x2F;Ingress.png]</span><br><span class="line">                [数据包传输流程图 ： &#x2F;images&#x2F;Ingress数据包走向.png]</span><br><span class="line">              </span><br><span class="line">            </span><br><span class="line"> </span><br><span class="line"> 9.docker发布服务在生产环境:</span><br><span class="line">    借助compose 的 version &#x3D; 3部署到生产环境上</span><br><span class="line">    docker stack deploy  执行的compose文件的内容</span><br><span class="line">    docker stack remove  进行删掉的services服务</span><br><span class="line">  </span><br><span class="line"> 10.DOckerSecret管理</span><br><span class="line">    Secret Management:</span><br><span class="line">        1.存在Swarm Manager节点Raft database里</span><br><span class="line">        2.Secret可以assign给一个service,这个service就能看到这个secret</span><br><span class="line">        3.在container内部secret看起来像文件，但是实际上在内存中</span><br><span class="line">    指令:</span><br><span class="line">        创建: docker secret create my-pwd</span><br><span class="line">        删除: docker secret rm my-pwd</span><br><span class="line">        在创建一个secret在一个容器中，容器里面的文件夹中有相应的内容：</span><br><span class="line">         1. docker service create --name xxx --secret my-pwd  【imagesName】</span><br><span class="line">         2. docker service ls  查看服务节点多少个</span><br><span class="line">         3. docker service ps [name]   查看服务节点在哪里</span><br><span class="line">         4. cat &#x2F;run&#x2F;secrests&#x2F;my-pwd   就可以查看secret的明文内容</span><br><span class="line">         </span><br><span class="line">  11.Swarm更新服务(生产环境):</span><br><span class="line">      A.运行一个service</span><br><span class="line">        docker service create --name web --publish 8080:5000 --network demo flask:1.0</span><br><span class="line">      B.运行2个节点的操作</span><br><span class="line">        docker service scale web&#x3D;2</span><br><span class="line">      3.运行shell指令来测试</span><br><span class="line">        sh -c &quot;while true; do curl 127.0.0.1:8080&amp;&amp;sleep 1;done&quot;     </span><br><span class="line">      4.更新指令很多内容:</span><br><span class="line">        docker service update --help</span><br><span class="line">      5.更新images的版本 </span><br><span class="line">        docker service update --image flask:2.0 web</span><br><span class="line">      6.更新端口的操作:删掉原来的端口并添加新的端口操作</span><br><span class="line">        docker service ps web</span><br><span class="line">        docker service update --publish-rm 8080:5000 --publish-add 8099:5000 web</span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">   12. dockerEE 企业版:可以查看swarm部署多个节点监控状态</span><br><span class="line">       在dockerEE基础上部署DTR,其作用是扫描镜像的安全性问题</span><br><span class="line">       阿里云也有相应的docker-swarm服务，但是相应的付费还是蛮昂贵的</span><br></pre></td></tr></table></figure><ul><li><a href="http://www.dockone.io/article/929" target="_blank" rel="noopener">替代Docker Compose实现容器双向联通的三种方法</a></li></ul>]]></content>
    
    <summary type="html">
    
      docker 调试的笔记内容
    
    </summary>
    
    
      <category term="Docker" scheme="https://zuoyoulai.github.io/categories/Docker/"/>
    
    
      <category term="Docker" scheme="https://zuoyoulai.github.io/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>windows-Mq 启动操作</title>
    <link href="https://zuoyoulai.github.io/2019/12/25/windows-Mq/"/>
    <id>https://zuoyoulai.github.io/2019/12/25/windows-Mq/</id>
    <published>2019-12-25T06:08:48.000Z</published>
    <updated>2019-12-29T16:40:03.227Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#windows-rocketmq-console-guan-li-kong-zhi-tai-de-qi-dong">Windows RocketMq Console管理控制台的启动</a></li><li><a href="#qi-dong-de-jiao-ben">启动的脚本</a><ul><li><a href="#fang-wen">访问</a></li></ul></li></ul><!-- tocstop --></div><h3><span id="windows-rocketmq-console-guan-li-kong-zhi-tai-de-qi-dong">Windows RocketMq Console管理控制台的启动</span><a href="#windows-rocketmq-console-guan-li-kong-zhi-tai-de-qi-dong" class="header-anchor"></a></h3><h4><span id="xia-zai-amp-da-bao">下载 &amp; 打包</span><a href="#xia-zai-amp-da-bao" class="header-anchor"></a></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;apache&#x2F;rocketmq-externals.git</span><br><span class="line">cd rocketmq-externals&#x2F;rocketmq-console&#x2F;</span><br><span class="line">mvn clean package -Dmaven.test.skip&#x3D;true</span><br></pre></td></tr></table></figure><h3><span id="qi-dong-de-jiao-ben">启动的脚本</span><a href="#qi-dong-de-jiao-ben" class="header-anchor"></a></h3><ul><li><p>3.5版本以下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar target\rocketmq-console-ng-1.0.1.jar --rocketmq.config.namesrvAddr&#x3D;127.0.0.1:9876 &gt; log.txt --rocketmq.config.isVIPChannel&#x3D;false</span><br></pre></td></tr></table></figure></li><li><p>3.5版本以下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar target\rocketmq-console-ng-1.0.1.jar --rocketmq.config.namesrvAddr&#x3D;127.0.0.1:9876 &gt; log.txt</span><br></pre></td></tr></table></figure></li></ul><p>还有其他的配置可以自定义配置的：【以下配置来自console项目的 application.properties】</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">server.contextPath&#x3D;</span><br><span class="line">server.port&#x3D;8080</span><br><span class="line"></span><br><span class="line">### SSL setting</span><br><span class="line">#server.ssl.key-store&#x3D;classpath:rmqcngkeystore.jks</span><br><span class="line">#server.ssl.key-store-password&#x3D;rocketmq</span><br><span class="line">#server.ssl.keyStoreType&#x3D;PKCS12</span><br><span class="line">#server.ssl.keyAlias&#x3D;rmqcngkey</span><br><span class="line"></span><br><span class="line">#spring.application.index&#x3D;true</span><br><span class="line">spring.application.name&#x3D;rocketmq-console</span><br><span class="line">spring.http.encoding.charset&#x3D;UTF-8</span><br><span class="line">spring.http.encoding.enabled&#x3D;true</span><br><span class="line">spring.http.encoding.force&#x3D;true</span><br><span class="line">logging.config&#x3D;classpath:logback.xml</span><br><span class="line">#if this value is empty,use env value rocketmq.config.namesrvAddr  NAMESRV_ADDR | now, you can set it in ops page.default localhost:9876</span><br><span class="line">rocketmq.config.namesrvAddr&#x3D;</span><br><span class="line">#if you use rocketmq version &lt; 3.5.8, rocketmq.config.isVIPChannel should be false.default true</span><br><span class="line">rocketmq.config.isVIPChannel&#x3D;</span><br><span class="line">#rocketmq-console&#39;s data path:dashboard&#x2F;monitor</span><br><span class="line">rocketmq.config.dataPath&#x3D;&#x2F;tmp&#x2F;rocketmq-console&#x2F;data</span><br><span class="line">#set it false if you don&#39;t want use dashboard.default true</span><br><span class="line">rocketmq.config.enableDashBoardCollect&#x3D;true</span><br><span class="line">#set the message track trace topic if you don&#39;t want use the default one</span><br><span class="line">rocketmq.config.msgTrackTopicName&#x3D;</span><br><span class="line">rocketmq.config.ticketKey&#x3D;ticket</span><br><span class="line"></span><br><span class="line">#Must create userInfo file: $&#123;rocketmq.config.dataPath&#125;&#x2F;users.properties if the login is required</span><br><span class="line">rocketmq.config.loginRequired&#x3D;false</span><br></pre></td></tr></table></figure><p>如果出错的话则查看log.txt文件内容</p><h2><span id="fang-wen">访问</span><a href="#fang-wen" class="header-anchor"></a></h2><p>访问URL : <a href="http://localhost:8080/" target="_blank" rel="noopener">http://localhost:8080/</a>  </p><p>正确启动</p>]]></content>
    
    <summary type="html">
    
      windows-Mq 启动操作
    
    </summary>
    
    
      <category term="Mq" scheme="https://zuoyoulai.github.io/categories/Mq/"/>
    
      <category term="Rocketmq" scheme="https://zuoyoulai.github.io/categories/Mq/Rocketmq/"/>
    
    
      <category term="Rocketmq" scheme="https://zuoyoulai.github.io/tags/Rocketmq/"/>
    
  </entry>
  
  <entry>
    <title>借鉴博客学习</title>
    <link href="https://zuoyoulai.github.io/2019/12/25/%E5%80%9F%E9%89%B4%E5%8D%9A%E5%AE%A2%E5%AD%A6%E4%B9%A0-md/"/>
    <id>https://zuoyoulai.github.io/2019/12/25/%E5%80%9F%E9%89%B4%E5%8D%9A%E5%AE%A2%E5%AD%A6%E4%B9%A0-md/</id>
    <published>2019-12-25T02:27:44.000Z</published>
    <updated>2019-12-30T05:48:24.649Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#you-xiu-wen-zhang-nei-rong">优秀文章内容</a><ul><li><a href="#wen-dang">文档</a></li></ul></li><li><a href="#bo-ke-nei-rong">博客内容</a></li></ul><!-- tocstop --></div><h2><span id="you-xiu-wen-zhang-nei-rong">优秀文章内容</span><a href="#you-xiu-wen-zhang-nei-rong" class="header-anchor"></a></h2><ul><li>权威文档</li><li>优秀笔记内容</li><li>个人博客<a id="more"></a></li></ul><h3><span id="wen-dang">文档</span><a href="#wen-dang" class="header-anchor"></a></h3><table><thead><tr><th>名称</th><th>Url</th></tr></thead><tbody><tr><td>下载资源网盘</td><td><a href="https://m.pantianxia.com/" target="_blank" rel="noopener">https://m.pantianxia.com/</a></td></tr><tr><td>下载资源</td><td><a href="http://www.xiazaij.com/author/xiazaij/" target="_blank" rel="noopener">http://www.xiazaij.com/author/xiazaij/</a></td></tr><tr><td>zlnnjit(博客一直在持续的更新)</td><td><a href="https://www.bcoder.top/" target="_blank" rel="noopener">https://www.bcoder.top/</a></td></tr><tr><td><a href="https://jboot.io/" target="_blank" rel="noopener">jboot</a></td><td><a href="https://jboot.io/" target="_blank" rel="noopener">https://jboot.io/</a></td></tr><tr><td><a href="http://cn.linux.vbird.org/linux_basic/linux_basic.php" target="_blank" rel="noopener">鸟哥私房菜</a></td><td><a href="http://cn.linux.vbird.org/linux_basic/linux_basic.php" target="_blank" rel="noopener">http://cn.linux.vbird.org/linux_basic/linux_basic.php</a></td></tr><tr><td><a href="http://kubernetes.kansea.com/docs/hellonode/" target="_blank" rel="noopener">k8s</a></td><td><a href="http://kubernetes.kansea.com/docs/hellonode/" target="_blank" rel="noopener">http://kubernetes.kansea.com/docs/hellonode/</a></td></tr><tr><td><a href="https://vipshop.github.io/vjtools/#/standard/" target="_blank" rel="noopener">唯品会开发手册</a></td><td><a href="https://vipshop.github.io/vjtools/#/standard/" target="_blank" rel="noopener">https://vipshop.github.io/vjtools/#/standard/</a></td></tr><tr><td><a href="https://leetcode-cn.com/problemset/all/" target="_blank" rel="noopener">leecode编程算法网站</a></td><td><a href="https://leetcode-cn.com/problemset/all/" target="_blank" rel="noopener">https://leetcode-cn.com/problemset/all/</a></td></tr><tr><td><a href="http://www.xuxueli.com/page/projects.html" target="_blank" rel="noopener">许雪里开源列表</a></td><td><a href="http://www.xuxueli.com/page/projects.html" target="_blank" rel="noopener">http://www.xuxueli.com/page/projects.html</a></td></tr><tr><td><a href="https://zq99299.github.io/note-book/" target="_blank" rel="noopener">代码有毒的笔记</a></td><td><a href="https://zq99299.github.io/note-book/" target="_blank" rel="noopener">https://zq99299.github.io/note-book/</a></td></tr><tr><td><a href="http://blog.didispace.com/books/elasticsearch-definitive-guide-cn/" target="_blank" rel="noopener">ES权威指南笔记</a></td><td><a href="http://blog.didispace.com/books/elasticsearch-definitive-guide-cn/" target="_blank" rel="noopener">http://blog.didispace.com/books/elasticsearch-definitive-guide-cn/</a></td></tr><tr><td><a href="http://naotu.baidu.com/file/b49ccc722da46972dfe3a720cd414a11" target="_blank" rel="noopener">Cyc2018笔记脑图</a></td><td><a href="http://naotu.baidu.com/file/b49ccc722da46972dfe3a720cd414a11" target="_blank" rel="noopener">http://naotu.baidu.com/file/b49ccc722da46972dfe3a720cd414a11</a></td></tr><tr><td><a href="https://www.fangzhipeng.com/javainterview/2019/04/17/jvm-tools.html" target="_blank" rel="noopener">Java虚拟机：JVM性能调优监控工具jps、jstack、jmap、jhat、jstat、hprof使用详解</a></td><td><a href="https://www.fangzhipeng.com/javainterview/2019/04/17/jvm-tools.html" target="_blank" rel="noopener">https://www.fangzhipeng.com/javainterview/2019/04/17/jvm-tools.html</a></td></tr><tr><td><a href="https://segmentfault.com/a/1190000014479154?utm_source=index-hottest" target="_blank" rel="noopener">Shiro用starter方式优雅整合到SpringBoot中 比较全面的</a></td><td><a href="https://segmentfault.com/a/1190000014479154?utm_source=index-hottest" target="_blank" rel="noopener">https://segmentfault.com/a/1190000014479154?utm_source=index-hottest</a></td></tr><tr><td>rocketMq的笔记内容</td><td><a href="https://www.bcoder.top/2017/12/17/%E4%B8%9A%E4%BD%99%E5%AD%A6%E4%B9%A0%E4%B9%8BRocketMQ%E4%B8%AD%E7%BA%A7%E7%AF%87/#%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E6%81%AF%E9%87%8D%E8%AF%95" target="_blank" rel="noopener">https://www.bcoder.top/2017/12/17/%E4%B8%9A%E4%BD%99%E5%AD%A6%E4%B9%A0%E4%B9%8BRocketMQ%E4%B8%AD%E7%BA%A7%E7%AF%87/#%E6%B6%88%E8%B4%B9%E8%80%85%E6%B6%88%E6%81%AF%E9%87%8D%E8%AF%95</a></td></tr><tr><td>容器面试笔记</td><td><a href="http://www.spring4all.com/article/6786" target="_blank" rel="noopener">http://www.spring4all.com/article/6786</a></td></tr><tr><td>阿飞的博客</td><td><a href="https://www.jianshu.com/u/6779ec81d3b7" target="_blank" rel="noopener">https://www.jianshu.com/u/6779ec81d3b7</a></td></tr><tr><td>正则表达式学习</td><td><a href="http://blog.didispace.com/regular-expression-all/" target="_blank" rel="noopener">http://blog.didispace.com/regular-expression-all/</a></td></tr><tr><td>【课程】Elastic Stack入门与实践</td><td><a href="https://www.imooc.com/article/45855" target="_blank" rel="noopener">https://www.imooc.com/article/45855</a></td></tr><tr><td>【课程】Elastic Stack入门与实践 [描述的较好]</td><td><a href="https://blog.csdn.net/hiwes/article/category/8448094" target="_blank" rel="noopener">https://blog.csdn.net/hiwes/article/category/8448094</a></td></tr><tr><td>【课程】JVM笔记内容</td><td><a href="http://www.imooc.com/article/details/id/251567#param-type" target="_blank" rel="noopener">http://www.imooc.com/article/details/id/251567#param-type</a></td></tr><tr><td>jdk各个版本间docker兼容问题</td><td><a href="https://kelvinji2009.github.io/tags/docker/" target="_blank" rel="noopener">https://kelvinji2009.github.io/tags/docker/</a></td></tr><tr><td>k8s开启</td><td><a href="https://kelvinji2009.github.io/blog/kubernetes-bible-beginners/" target="_blank" rel="noopener">https://kelvinji2009.github.io/blog/kubernetes-bible-beginners/</a></td></tr><tr><td>【课程】Nginx入门到实践</td><td><a href="https://www.jianshu.com/nb/32398790" target="_blank" rel="noopener">https://www.jianshu.com/nb/32398790</a></td></tr><tr><td>【极客时间】从0开始学架构【笔记】</td><td><a href="https://zhimap.com/mhtml/6159a37f642c480e984e9ad5d97e2489" target="_blank" rel="noopener">https://zhimap.com/mhtml/6159a37f642c480e984e9ad5d97e2489</a></td></tr><tr><td>IO流读取的比较</td><td><a href="https://www.cnkirito.moe/file-io-best-practise/" target="_blank" rel="noopener">https://www.cnkirito.moe/file-io-best-practise/</a></td></tr><tr><td>使用Redis的分布式锁</td><td><a href="https://wudashan.cn/2017/10/23/Redis-Distributed-Lock-Implement/" target="_blank" rel="noopener">https://wudashan.cn/2017/10/23/Redis-Distributed-Lock-Implement/</a></td></tr></tbody></table><hr><p>##特指权威性的网站<br>名称 | Url<br>——|—–<br>elasticsearch日报 | <a href="https://elasticsearch.cn/" target="_blank" rel="noopener">https://elasticsearch.cn/</a><br>docker中文文档 | <a href="https://docs.docker-cn.com" target="_blank" rel="noopener">https://docs.docker-cn.com</a><br>docker中文论坛社区 | <a href="http://dockone.io/" target="_blank" rel="noopener">http://dockone.io/</a><br>jenkins官方的文档内容 | <a href="https://jenkins.io/zh/" target="_blank" rel="noopener">https://jenkins.io/zh/</a><br>sharding-jdbc官方中文文档 | <a href="https://shardingsphere.apache.org/document/current/cn/overview/" target="_blank" rel="noopener">https://shardingsphere.apache.org/document/current/cn/overview/</a><br>docker-file 良好的实践 | <a href="https://juejin.im/entry/5d2405be6fb9a07f091bc7f3?utm_source=gold_browser_extension" target="_blank" rel="noopener">https://juejin.im/entry/5d2405be6fb9a07f091bc7f3?utm_source=gold_browser_extension</a></p><hr><h2><span id="bo-ke-nei-rong">博客内容</span><a href="#bo-ke-nei-rong" class="header-anchor"></a></h2><table><thead><tr><th>名称</th><th>Url</th></tr></thead><tbody><tr><td><a href="https://www.cnblogs.com/relucent/p/6525821.html" target="_blank" rel="noopener">ASM获取参数</a></td><td><a href="https://www.cnblogs.com/relucent/p/6525821.html" target="_blank" rel="noopener">https://www.cnblogs.com/relucent/p/6525821.html</a></td></tr><tr><td><a href="https://blog.csdn.net/u011896537/article/details/89467774" target="_blank" rel="noopener">书籍的推荐</a></td><td><a href="https://blog.csdn.net/u011896537/article/details/89467774" target="_blank" rel="noopener">https://blog.csdn.net/u011896537/article/details/89467774</a></td></tr><tr><td>mrbird[很多java的干货]</td><td><a href="https://mrbird.cc/" target="_blank" rel="noopener">https://mrbird.cc/</a></td></tr><tr><td>[小窝小窝]</td><td><a href="https://z77z.oschina.io/" target="_blank" rel="noopener">https://z77z.oschina.io/</a></td></tr><tr><td>死磕java[文章非常的全面系统]</td><td><a href="http://cmsblogs.com/?page_id=3027" target="_blank" rel="noopener">http://cmsblogs.com/?page_id=3027</a></td></tr><tr><td>猿天地</td><td><a href="http://cxytiandi.com/article" target="_blank" rel="noopener">http://cxytiandi.com/article</a></td></tr><tr><td>周立博客[springboot + springcloud教程 书作者]</td><td><a href="http://www.itmuch.com/" target="_blank" rel="noopener">http://www.itmuch.com/</a></td></tr><tr><td>程序员DDD [springboot + springcloud教程 书作者]</td><td><a href="http://blog.didispace.com/" target="_blank" rel="noopener">http://blog.didispace.com/</a></td></tr><tr><td>方志朋[spring cloud教程]</td><td><a href="https://www.cnblogs.com/forezp/category/1327932.html" target="_blank" rel="noopener">https://www.cnblogs.com/forezp/category/1327932.html</a></td></tr><tr><td>方志朋[spring cloud + java + 架构]</td><td><a href="https://www.fangzhipeng.com" target="_blank" rel="noopener">https://www.fangzhipeng.com</a></td></tr><tr><td>纯洁的微笑[springboot + springcloud教程]</td><td><a href="http://www.ityouknow.com/" target="_blank" rel="noopener">http://www.ityouknow.com/</a></td></tr><tr><td>java知音[java基础 面试 web 各种java基础 算法]</td><td><a href="https://www.javazhiyin.com" target="_blank" rel="noopener">https://www.javazhiyin.com</a></td></tr><tr><td>匠心零度[jvm rocketmq]</td><td><a href="http://www.jiangxinlingdu.com/" target="_blank" rel="noopener">http://www.jiangxinlingdu.com/</a></td></tr><tr><td>anoyi[k8s docker-swarm 还有书籍的下载]</td><td><a href="https://anoyi.com" target="_blank" rel="noopener">https://anoyi.com</a></td></tr><tr><td>Loull[蛮坚持写博客的人 实用性还是蛮高的]</td><td><a href="https://www.cnblogs.com/549294286/" target="_blank" rel="noopener">https://www.cnblogs.com/549294286/</a></td></tr><tr><td>叶落[Nginx NIO资料不是很多]</td><td><a href="http://www.liqinghe.com/technology.html" target="_blank" rel="noopener">http://www.liqinghe.com/technology.html</a></td></tr><tr><td><a href="https://www.cnblogs.com/hujunzheng" target="_blank" rel="noopener">技术栈蛮深,涉略spring redis boot</a></td><td><a href="https://www.cnblogs.com/hujunzheng" target="_blank" rel="noopener">https://www.cnblogs.com/hujunzheng</a></td></tr><tr><td><a href="https://segmentfault.com/blog/die4zhe" target="_blank" rel="noopener">不折腾会死 (shiro 文章可能较少)</a></td><td><a href="https://segmentfault.com/blog/die4zhe" target="_blank" rel="noopener">https://segmentfault.com/blog/die4zhe</a></td></tr><tr><td>[阿里数据库内核主管]</td><td><a href="http://hedengcheng.com/?p=771" target="_blank" rel="noopener">http://hedengcheng.com/?p=771</a></td></tr><tr><td>[core java]</td><td><a href="http://www.carlzone.cn" target="_blank" rel="noopener">http://www.carlzone.cn</a></td></tr><tr><td>[数据结构]</td><td><a href="http://timd.cn" target="_blank" rel="noopener">http://timd.cn</a></td></tr><tr><td>[架构分布式]</td><td><a href="http://www.kailing.pub" target="_blank" rel="noopener">http://www.kailing.pub</a></td></tr><tr><td>[一个未毕业却很努力却很强技术栈学生]</td><td><a href="https://www.cnblogs.com/yueshutong/" target="_blank" rel="noopener">https://www.cnblogs.com/yueshutong/</a></td></tr><tr><td>[java 高级知识点：rocketmq 分布式事务 分布式锁]</td><td><a href="https://www.jianshu.com/u/bbe9e62bc5ba" target="_blank" rel="noopener">https://www.jianshu.com/u/bbe9e62bc5ba</a></td></tr><tr><td>spring4all</td><td><a href="http://www.spring4all.com/" target="_blank" rel="noopener">http://www.spring4all.com/</a></td></tr><tr><td>Hollis</td><td><a href="https://www.hollischuang.com/" target="_blank" rel="noopener">https://www.hollischuang.com/</a></td></tr><tr><td>梁桂钊</td><td><a href="http://blog.720ui.com/columns/springboot_all/" target="_blank" rel="noopener">http://blog.720ui.com/columns/springboot_all/</a></td></tr><tr><td>码小猪</td><td><a href="https://www.hchstudio.cn" target="_blank" rel="noopener">https://www.hchstudio.cn</a></td></tr><tr><td>若鱼</td><td><a href="https://blog.csdn.net/goldenfish1919" target="_blank" rel="noopener">https://blog.csdn.net/goldenfish1919</a></td></tr><tr><td>许雪里</td><td><a href="http://www.xuxueli.com/blog/#/?id=%E4%B8%80%E3%80%81%E5%9F%BA%E7%A1%80" target="_blank" rel="noopener">http://www.xuxueli.com/blog/#/?id=%E4%B8%80%E3%80%81%E5%9F%BA%E7%A1%80</a></td></tr><tr><td>py教师+容器化视频的讲师</td><td><a href="http://www.imooc.com/t/5634820" target="_blank" rel="noopener">http://www.imooc.com/t/5634820</a></td></tr><tr><td>代码有毒</td><td><a href="https://blog.csdn.net/mr_zhuqiang" target="_blank" rel="noopener">https://blog.csdn.net/mr_zhuqiang</a></td></tr><tr><td>屈定</td><td><a href="https://mrdear.cn/" target="_blank" rel="noopener">https://mrdear.cn/</a></td></tr><tr><td>吾爱程序员</td><td><a href="https://www.52programer.com/" target="_blank" rel="noopener">https://www.52programer.com/</a></td></tr><tr><td>代码有毒的笔记博客</td><td><a href="https://zq99299.github.io/note-book/" target="_blank" rel="noopener">https://zq99299.github.io/note-book/</a></td></tr><tr><td>代码有毒的CSDN</td><td><a href="https://blog.csdn.net/mr_zhuqiang" target="_blank" rel="noopener">https://blog.csdn.net/mr_zhuqiang</a></td></tr><tr><td>kelvinji2009[很牛的人]</td><td><a href="https://kelvinji2009.github.io/" target="_blank" rel="noopener">https://kelvinji2009.github.io/</a></td></tr><tr><td>运维的笔记</td><td><a href="http://www.zsythink.net/" target="_blank" rel="noopener">http://www.zsythink.net/</a></td></tr><tr><td>技术颜良[文章很有水准]</td><td><a href="https://www.cnblogs.com/cheyunhua/p/?page=32" target="_blank" rel="noopener">https://www.cnblogs.com/cheyunhua/p/?page=32</a></td></tr><tr><td>Java知识分享[下载pdf文章]</td><td><a href="http://www.java1234.com/" target="_blank" rel="noopener">http://www.java1234.com/</a></td></tr><tr><td>芋道源码[各种java源码解析]</td><td><a href="http://www.iocoder.cn/" target="_blank" rel="noopener">http://www.iocoder.cn/</a></td></tr><tr><td><a href="https://www.jianshu.com/u/d00590abcb80" target="_blank" rel="noopener">空挡 网络 rocketmq</a></td><td><a href="https://www.jianshu.com/u/d00590abcb80" target="_blank" rel="noopener">https://www.jianshu.com/u/d00590abcb80</a></td></tr><tr><td>[es springboot flink]</td><td><a href="http://www.54tianzhisheng.cn" target="_blank" rel="noopener">http://www.54tianzhisheng.cn</a></td></tr><tr><td>架构研究</td><td><a href="http://www.shinians.com/html/blog.html" target="_blank" rel="noopener">http://www.shinians.com/html/blog.html</a></td></tr><tr><td>人工智能</td><td><a href="https://www.captainbed.net/mengday/" target="_blank" rel="noopener">https://www.captainbed.net/mengday/</a></td></tr><tr><td>Hexo博客安装</td><td><a href="https://y0ngb1n.github.io/" target="_blank" rel="noopener">https://y0ngb1n.github.io/</a></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      借鉴Github,博客学习
    
    </summary>
    
    
      <category term="学习文章" scheme="https://zuoyoulai.github.io/categories/%E5%AD%A6%E4%B9%A0%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="学习文章" scheme="https://zuoyoulai.github.io/tags/%E5%AD%A6%E4%B9%A0%E6%96%87%E7%AB%A0/"/>
    
      <category term="GitHub" scheme="https://zuoyoulai.github.io/tags/GitHub/"/>
    
  </entry>
  
  <entry>
    <title>我的 Hexo 博客系统的搭建</title>
    <link href="https://zuoyoulai.github.io/2019/12/24/hexo-study-md/"/>
    <id>https://zuoyoulai.github.io/2019/12/24/hexo-study-md/</id>
    <published>2019-12-24T15:50:00.000Z</published>
    <updated>2019-12-29T16:40:03.229Z</updated>
    
    <content type="html"><![CDATA[<div class="toc"><!-- toc --><ul><li><a href="#da-jian-ge-ren-bo-ke-zhan-dian">搭建个人博客站点</a></li><li><a href="#mac-huan-jing-xi-tong-da-jian-bo-ke">Mac 环境系统搭建博客</a></li><li><a href="#linux-huan-jing-xi-tong-da-jian-bo-ke">Linux 环境系统搭建博客</a></li><li><a href="#git-fa-bu-de-cha-jian">git 发布的插件</a></li><li><a href="#tian-jia-hexo-wen-zhang-mu-lu-cha-jian">添加 hexo 文章目录插件</a></li></ul><!-- tocstop --></div>### 搭建个人博客站点+ 本地 Linux 需要安装 : Git+ 本地 Mac 安装 node ：https://nodejs.org/en/download/<h3><span id="mac-huan-jing-xi-tong-da-jian-bo-ke">Mac 环境系统搭建博客</span><a href="#mac-huan-jing-xi-tong-da-jian-bo-ke" class="header-anchor"></a></h3><ul><li>mac 安装 node 权限的问题,解决问题链接：<a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally" target="_blank" rel="noopener">https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">会出现 root 与 本地用户操作权限的问题，如：npm install -g xxx 操作的</span><br><span class="line">需要做出如下操作:</span><br><span class="line">&gt;&gt; mkdir ~&#x2F;.npm-global</span><br><span class="line">&gt;&gt; npm config set prefix &#39;~&#x2F;.npm-global&#39;</span><br><span class="line">&gt;&gt; vim ~&#x2F;.bash_profile</span><br><span class="line"></span><br><span class="line">添加如下：</span><br><span class="line">export PATH&#x3D;&#x2F;Users&#x2F;haodalai&#x2F;.npm-global&#x2F;bin:$PATH</span><br><span class="line">export PATH&#x3D;&#x2F;Users&#x2F;haodalai&#x2F;Blog&#x2F;node_modules&#x2F;.bin:$PATH</span><br><span class="line"></span><br><span class="line">&gt;&gt; echo $PATH</span><br><span class="line">&gt;&gt; source ~&#x2F;.bash_profile </span><br><span class="line">&gt;&gt; npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org （测试是 ok 的）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mac 安装 hexo：</span><br><span class="line">路径设置：</span><br><span class="line">&gt;&gt; export PATH&#x3D;~&#x2F;Blog&#x2F;node_modules&#x2F;.bin:$PATH</span><br><span class="line">&gt;&gt; echo $PATH</span><br><span class="line">&gt;&gt; hexo （测试生效）</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">新建一个hexo 项目</span><br><span class="line">&gt;&gt; mkdir ~&#x2F;Blog&#x2F;Samlai-Blog</span><br><span class="line">&gt;&gt; hexo init ~&#x2F;Blog&#x2F;Samlai-Blog</span><br><span class="line">&gt;&gt;</span><br></pre></td></tr></table></figure><hr><h3><span id="linux-huan-jing-xi-tong-da-jian-bo-ke">Linux 环境系统搭建博客</span><a href="#linux-huan-jing-xi-tong-da-jian-bo-ke" class="header-anchor"></a></h3><ul><li>Linux 参考 Hexo 文档来进行搭建博客站点： <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/</a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1. 安装 nodejs</span><br><span class="line">   使用这种方式来安装 : Linux（DEB&#x2F;RPM-based）：从 NodeSource 安装</span><br><span class="line">   参考链接 ： https:&#x2F;&#x2F;github.com&#x2F;nodesource&#x2F;distributions</span><br><span class="line">   因为本地是 centos 执行指令 :</span><br><span class="line">   </span><br><span class="line">   &gt;&gt; curl -sL https:&#x2F;&#x2F;rpm.nodesource.com&#x2F;setup_12.x | bash -</span><br><span class="line">   </span><br><span class="line">   执行完成后:</span><br><span class="line">   </span><br><span class="line">   &gt;&gt; sudo yum install -y nodejs</span><br><span class="line">   </span><br><span class="line">2. 使用淘宝镜像 cnpm :</span><br><span class="line">   &gt;&gt; npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br><span class="line">   </span><br><span class="line">3. 使用 npm 安装 hexo:</span><br><span class="line">   &gt;&gt; cnpm install hexo</span><br><span class="line">   </span><br><span class="line">4. 将 Hexo 所在的目录下的 node_modules 添加到环境变量之中即可直接使用 hexo &lt;command&gt;：</span><br><span class="line">   &gt;&gt; echo &#39;PATH&#x3D;&quot;$PATH:&#x2F;opt&#x2F;hexo&#x2F;node_modules&#x2F;.bin&quot;&#39; &gt;&gt; ~&#x2F;.profile</span><br><span class="line">   </span><br><span class="line">   注意: 我安装hexo 目录到我的系统路径为 :  &#x2F;opt&#x2F;hexo</span><br><span class="line">   </span><br><span class="line">   执行上面没有效果的话，无法识别 hexo 指令的话，则可以直接修改 ： vim &#x2F;etc&#x2F;profile 文件</span><br><span class="line">   文件最后面写上:</span><br><span class="line">    HEXO_HOME&#x3D;&#x2F;opt&#x2F;hexo&#x2F;node_modules&#x2F;.bin</span><br><span class="line">    PATH&#x3D;$PATH:$HEXO_HOME</span><br></pre></td></tr></table></figure></li></ul><h4><span id="shi-yong-hexo-chuang-jian-xiang-mu">使用 HEXO 创建项目</span><a href="#shi-yong-hexo-chuang-jian-xiang-mu" class="header-anchor"></a></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1. 初始化 hexo 项目</span><br><span class="line">hexo init &#x2F;opt&#x2F;blog</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2. 生成静态文件</span><br><span class="line">hexo generate</span><br><span class="line"></span><br><span class="line">3.运行服务器</span><br><span class="line">hexo server</span><br><span class="line"></span><br><span class="line">4.创建文件内容</span><br><span class="line">hexo new post 借鉴博客学习.md</span><br></pre></td></tr></table></figure><h4><span id="xiu-gai-hexo-de-zhu-ti-yu-fa-bu">修改 hexo 的主题与发布</span><a href="#xiu-gai-hexo-de-zhu-ti-yu-fa-bu" class="header-anchor"></a></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1. 注册一个 githhub 账号 并建一个名称为： xxx(你的 github 账号).github.io 项目</span><br><span class="line"></span><br><span class="line">2. 在服务新建一个github ssh key:</span><br><span class="line">    1.yum install ssh</span><br><span class="line">    2.ssh-keygen -t rsa -C &quot;472023527@qq.com&quot;</span><br><span class="line">    3.cat ~&#x2F;.ssh&#x2F;id_rsa.pub  [复制粘贴到github头像那边的setting再进行添加相应的key值]</span><br><span class="line">    4.以后进行git操作的代码的时候则不是git https:&#x2F;&#x2F;xxx的方式</span><br><span class="line">5.创建全局的 git 账号: [hexo d 执行的时候会报错]</span><br><span class="line">git config --global user.email &quot;472023527@qq.com&quot;</span><br><span class="line">      git config --global user.name &quot;samlai&quot;</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">3. 拉取主题内容:</span><br><span class="line">   cd &#x2F;opt&#x2F;blog</span><br><span class="line">   git clone https:&#x2F;&#x2F;github.com&#x2F;litten&#x2F;hexo-theme-yilia.git themes&#x2F;yilia</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">   </span><br><span class="line">4. 修改 hexo 的发布的方式：</span><br><span class="line"> vim _config.yml</span><br><span class="line"> </span><br><span class="line"> 修改发布方式:</span><br><span class="line">  deploy:</span><br><span class="line">      type: git</span><br><span class="line">      repository: git@github.com:ZuoYouLai&#x2F;ZuoYouLai.github.io.git</span><br><span class="line">      branch: master</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   修改主题内容：</span><br><span class="line">    themes: yilia</span><br><span class="line">    </span><br><span class="line"> </span><br><span class="line"> 5. 安装 hexo 的 git 插件  : cnpm install hexo-deployer-git --save</span><br><span class="line"> </span><br><span class="line"> 6. 执行 hexo 发布执行操作：</span><br><span class="line">   hexo d  (hexo deploy)</span><br><span class="line">   hexo s  (hexo server)</span><br></pre></td></tr></table></figure><h4><span id="hexo-yu-github-io-gong-tong-de-fa-bu-cao-zuo">hexo 与 github.io 共同的发布操作</span><a href="#hexo-yu-github-io-gong-tong-de-fa-bu-cao-zuo" class="header-anchor"></a></h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">github.io 的文件都是为：本地执行 hexo d 指令编译成静态文件然后并上传到 github.io 的仓库中.所以可以访问 https:&#x2F;&#x2F;zuoyoulai.github.io&#x2F; 可以直接访问静态文件 html 内容</span><br><span class="line"></span><br><span class="line">项目的保存最好存 md 文件的 github 的仓库的，每次写完自己新的笔记 md 文件后，提交github 仓库为了备份 md 文件内容。</span><br><span class="line"></span><br><span class="line">保存好 md 文件后再在本地执行：hexo -d 【编译好静态文件并上传到 github.io 的仓库上】</span><br></pre></td></tr></table></figure><h3><span id="git-fa-bu-de-cha-jian">git 发布的插件</span><a href="#git-fa-bu-de-cha-jian" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h3><span id="tian-jia-hexo-wen-zhang-mu-lu-cha-jian">添加 hexo 文章目录插件</span><a href="#tian-jia-hexo-wen-zhang-mu-lu-cha-jian" class="header-anchor"></a></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-toc --save</span><br><span class="line"></span><br><span class="line">在文章标题下添加：</span><br><span class="line">&lt;!-- toc --&gt;</span><br></pre></td></tr></table></figure><h4><span id="ben-wen-can-kao">本文参考</span><a href="#ben-wen-can-kao" class="header-anchor"></a></h4><ul><li><a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html" target="_blank" rel="noopener">https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html</a></li><li><a href="https://www.jianshu.com/p/1bcad7700c46" target="_blank" rel="noopener">https://www.jianshu.com/p/1bcad7700c46</a></li></ul>]]></content>
    
    <summary type="html">
    
      Hexo 个人博客系统的搭建
    
    </summary>
    
    
      <category term="Hexo" scheme="https://zuoyoulai.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://zuoyoulai.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
